// Code generated by iacg; DO NOT EDIT.
package thpc

import (
	"context"
	"log"

	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/internal/helper"

	thpcv20230321 "github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/thpc/v20230321"

	tccommon "github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/common"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/connectivity"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/ratelimit"
)

func NewThpcService(client *connectivity.TencentCloudClient) ThpcService {
	return ThpcService{client: client}
}

type ThpcService struct {
	client *connectivity.TencentCloudClient
}

func (me *ThpcService) DescribeThpcWorkspacesById(ctx context.Context, spaceId string) (ret *thpcv20230321.SpaceInfo, errRet error) {
	logId := tccommon.GetLogId(ctx)

	request := thpcv20230321.NewDescribeWorkspacesRequest()
	request.SpaceIds = helper.Strings([]string{spaceId})

	defer func() {
		if errRet != nil {
			log.Printf("[CRITAL]%s api[%s] fail, request body [%s], reason[%s]\n", logId, request.GetAction(), request.ToJsonString(), errRet.Error())
		}
	}()

	ratelimit.Check(request.GetAction())

	response, err := me.client.UseThpcV20230321Client().DescribeWorkspaces(request)
	if err != nil {
		errRet = err
		return
	}

	log.Printf("[DEBUG]%s api[%s] success, request body [%s], response body [%s]\n", logId, request.GetAction(), request.ToJsonString(), response.ToJsonString())

	if response == nil || response.Response == nil || len(response.Response.SpaceSet) != 1 {
		return
	}

	ret = response.Response.SpaceSet[0]
	return
}
