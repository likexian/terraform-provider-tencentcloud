package tencentcloud

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/url"
	"os"
	"runtime"
	"strconv"
	"strings"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/mitchellh/go-homedir"
	sdkcommon "github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common"
	sts "github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/sts/v20180813"

	providercommon "github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/common"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/connectivity"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/internal/helper"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/ratelimit"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/antiddos"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/apigateway"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/apm"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/as"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/audit"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/bh"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/bi"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/cam"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/cat"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/cbs"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/ccn"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/cdb"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/cdh"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/cdn"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/cdwch"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/cdwpg"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/cfs"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/cfw"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/chdfs"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/ci"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/ciam"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/ckafka"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/clb"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/cls"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/common"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/cos"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/crs"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/css"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/cvm"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/cwp"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/cynosdb"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/dayu"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/dayuv2"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/dbbrain"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/dc"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/dcdb"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/dcg"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/dlc"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/dnspod"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/domain"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/dts"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/eb"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/emr"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/es"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/fl"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/gaap"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/kms"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/lighthouse"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/mariadb"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/mdl"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/mongodb"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/monitor"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/mps"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/oceanus"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/pls"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/postgresql"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/privatedns"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/project"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/pts"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/services/rum"
)

const (
	PROVIDER_SECRET_ID      = "TENCENTCLOUD_SECRET_ID"
	PROVIDER_SECRET_KEY     = "TENCENTCLOUD_SECRET_KEY"
	PROVIDER_SECURITY_TOKEN = "TENCENTCLOUD_SECURITY_TOKEN"
	PROVIDER_REGION         = "TENCENTCLOUD_REGION"
	PROVIDER_PROTOCOL       = "TENCENTCLOUD_PROTOCOL"
	PROVIDER_DOMAIN         = "TENCENTCLOUD_DOMAIN"
	//internal version: replace envYunti begin, please do not modify this annotation and refrain from inserting any code between the beginning and end lines of the annotation.
	//internal version: replace envYunti end, please do not modify this annotation and refrain from inserting any code between the beginning and end lines of the annotation.
	PROVIDER_ASSUME_ROLE_ARN              = "TENCENTCLOUD_ASSUME_ROLE_ARN"
	PROVIDER_ASSUME_ROLE_SESSION_NAME     = "TENCENTCLOUD_ASSUME_ROLE_SESSION_NAME"
	PROVIDER_ASSUME_ROLE_SESSION_DURATION = "TENCENTCLOUD_ASSUME_ROLE_SESSION_DURATION"
	PROVIDER_SHARED_CREDENTIALS_DIR       = "TENCENTCLOUD_SHARED_CREDENTIALS_DIR"
	PROVIDER_PROFILE                      = "TENCENTCLOUD_PROFILE"
)

const (
	DEFAULT_REGION  = "ap-guangzhou"
	DEFAULT_PROFILE = "default"
)

type TencentCloudClient struct {
	apiV3Conn *connectivity.TencentCloudClient
}

var _ providercommon.ProviderMeta = &TencentCloudClient{}

// GetAPIV3Conn 返回访问云 API 的客户端连接对象
func (meta *TencentCloudClient) GetAPIV3Conn() *connectivity.TencentCloudClient {
	return meta.apiV3Conn
}

func Provider() *schema.Provider {
	return &schema.Provider{
		Schema: map[string]*schema.Schema{
			"secret_id": {
				Type:        schema.TypeString,
				Optional:    true,
				DefaultFunc: schema.EnvDefaultFunc(PROVIDER_SECRET_ID, nil),
				Description: "This is the TencentCloud access key. It must be provided, but it can also be sourced from the `TENCENTCLOUD_SECRET_ID` environment variable.",
			},
			"secret_key": {
				Type:        schema.TypeString,
				Optional:    true,
				DefaultFunc: schema.EnvDefaultFunc(PROVIDER_SECRET_KEY, nil),
				Description: "This is the TencentCloud secret key. It must be provided, but it can also be sourced from the `TENCENTCLOUD_SECRET_KEY` environment variable.",
				Sensitive:   true,
			},
			"security_token": {
				Type:        schema.TypeString,
				Optional:    true,
				DefaultFunc: schema.EnvDefaultFunc(PROVIDER_SECURITY_TOKEN, nil),
				Description: "TencentCloud Security Token of temporary access credentials. It can be sourced from the `TENCENTCLOUD_SECURITY_TOKEN` environment variable. Notice: for supported products, please refer to: [temporary key supported products](https://intl.cloud.tencent.com/document/product/598/10588).",
				Sensitive:   true,
			},
			"region": {
				Type:        schema.TypeString,
				Optional:    true,
				DefaultFunc: schema.EnvDefaultFunc(PROVIDER_REGION, nil),
				Description: "This is the TencentCloud region. It must be provided, but it can also be sourced from the `TENCENTCLOUD_REGION` environment variables. The default input value is ap-guangzhou.",
			},
			"protocol": {
				Type:         schema.TypeString,
				Optional:     true,
				DefaultFunc:  schema.EnvDefaultFunc(PROVIDER_PROTOCOL, "HTTPS"),
				ValidateFunc: validateAllowedStringValue([]string{"HTTP", "HTTPS"}),
				Description:  "The protocol of the API request. Valid values: `HTTP` and `HTTPS`. Default is `HTTPS`.",
			},
			"domain": {
				Type:        schema.TypeString,
				Optional:    true,
				DefaultFunc: schema.EnvDefaultFunc(PROVIDER_DOMAIN, nil),
				Description: "The root domain of the API request, Default is `tencentcloudapi.com`.",
			},
			//internal version: replace enableBpass begin, please do not modify this annotation and refrain from inserting any code between the beginning and end lines of the annotation.
			//internal version: replace enableBpass end, please do not modify this annotation and refrain from inserting any code between the beginning and end lines of the annotation.
			"assume_role": {
				Type:        schema.TypeSet,
				Optional:    true,
				MaxItems:    1,
				Description: "The `assume_role` block. If provided, terraform will attempt to assume this role using the supplied credentials.",
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"role_arn": {
							Type:        schema.TypeString,
							Required:    true,
							DefaultFunc: schema.EnvDefaultFunc(PROVIDER_ASSUME_ROLE_ARN, nil),
							Description: "The ARN of the role to assume. It can be sourced from the `TENCENTCLOUD_ASSUME_ROLE_ARN`.",
						},
						"session_name": {
							Type:        schema.TypeString,
							Required:    true,
							DefaultFunc: schema.EnvDefaultFunc(PROVIDER_ASSUME_ROLE_SESSION_NAME, nil),
							Description: "The session name to use when making the AssumeRole call. It can be sourced from the `TENCENTCLOUD_ASSUME_ROLE_SESSION_NAME`.",
						},
						"session_duration": {
							Type:     schema.TypeInt,
							Required: true,
							DefaultFunc: func() (interface{}, error) {
								if v := os.Getenv(PROVIDER_ASSUME_ROLE_SESSION_DURATION); v != "" {
									return strconv.Atoi(v)
								}
								return 7200, nil
							},
							ValidateFunc: validateIntegerInRange(0, 43200),
							Description:  "The duration of the session when making the AssumeRole call. Its value ranges from 0 to 43200(seconds), and default is 7200 seconds. It can be sourced from the `TENCENTCLOUD_ASSUME_ROLE_SESSION_DURATION`.",
						},
						"policy": {
							Type:        schema.TypeString,
							Optional:    true,
							Description: "A more restrictive policy when making the AssumeRole call. Its content must not contains `principal` elements. Notice: more syntax references, please refer to: [policies syntax logic](https://intl.cloud.tencent.com/document/product/598/10603).",
						},
					},
				},
			},
			"shared_credentials_dir": {
				Type:        schema.TypeString,
				Optional:    true,
				DefaultFunc: schema.EnvDefaultFunc(PROVIDER_SHARED_CREDENTIALS_DIR, nil),
				Description: "The directory of the shared credentials. It can also be sourced from the `TENCENTCLOUD_SHARED_CREDENTIALS_DIR` environment variable. If not set this defaults to ~/.tccli.",
			},
			"profile": {
				Type:        schema.TypeString,
				Optional:    true,
				DefaultFunc: schema.EnvDefaultFunc(PROVIDER_PROFILE, nil),
				Description: "The profile name as set in the shared credentials. It can also be sourced from the `TENCENTCLOUD_PROFILE` environment variable. If not set, the default profile created with `tccli configure` will be used.",
			},
		},

		DataSourcesMap: map[string]*schema.Resource{
			"tencentcloud_availability_regions":                         common.DataSourceTencentCloudAvailabilityRegions(),
			"tencentcloud_emr":                                          emr.DataSourceTencentCloudEmr(),
			"tencentcloud_emr_nodes":                                    emr.DataSourceTencentCloudEmrNodes(),
			"tencentcloud_emr_cvm_quota":                                emr.DataSourceTencentCloudEmrCvmQuota(),
			"tencentcloud_emr_auto_scale_records":                       emr.DataSourceTencentCloudEmrAutoScaleRecords(),
			"tencentcloud_availability_zones":                           common.DataSourceTencentCloudAvailabilityZones(),
			"tencentcloud_availability_zones_by_product":                common.DataSourceTencentCloudAvailabilityZonesByProduct(),
			"tencentcloud_projects":                                     project.DataSourceTencentCloudProjects(),
			"tencentcloud_instances":                                    cvm.DataSourceTencentCloudInstances(),
			"tencentcloud_instances_set":                                cvm.DataSourceTencentCloudInstancesSet(),
			"tencentcloud_reserved_instances":                           cvm.DataSourceTencentCloudReservedInstances(),
			"tencentcloud_placement_groups":                             cvm.DataSourceTencentCloudPlacementGroups(),
			"tencentcloud_key_pairs":                                    cvm.DataSourceTencentCloudKeyPairs(),
			"tencentcloud_image":                                        cvm.DataSourceTencentCloudImage(),
			"tencentcloud_images":                                       cvm.DataSourceTencentCloudImages(),
			"tencentcloud_instance_types":                               cvm.DataSourceTencentCloudInstanceTypes(),
			"tencentcloud_reserved_instance_configs":                    cvm.DataSourceTencentCloudReservedInstanceConfigs(),
			"tencentcloud_vpc_instances":                                dataSourceTencentCloudVpcInstances(),
			"tencentcloud_vpc_subnets":                                  dataSourceTencentCloudVpcSubnets(),
			"tencentcloud_vpc_route_tables":                             dataSourceTencentCloudVpcRouteTables(),
			"tencentcloud_vpc":                                          dataSourceTencentCloudVpc(),
			"tencentcloud_vpc_acls":                                     dataSourceTencentCloudVpcAcls(),
			"tencentcloud_vpc_bandwidth_package_quota":                  dataSourceTencentCloudVpcBandwidthPackageQuota(),
			"tencentcloud_vpc_bandwidth_package_bill_usage":             dataSourceTencentCloudVpcBandwidthPackageBillUsage(),
			"tencentcloud_vpc_account_attributes":                       dataSourceTencentCloudVpcAccountAttributes(),
			"tencentcloud_vpc_classic_link_instances":                   dataSourceTencentCloudVpcClassicLinkInstances(),
			"tencentcloud_vpc_gateway_flow_monitor_detail":              dataSourceTencentCloudVpcGatewayFlowMonitorDetail(),
			"tencentcloud_vpc_gateway_flow_qos":                         dataSourceTencentCloudVpcGatewayFlowQos(),
			"tencentcloud_vpc_cvm_instances":                            dataSourceTencentCloudVpcCvmInstances(),
			"tencentcloud_vpc_net_detect_states":                        dataSourceTencentCloudVpcNetDetectStates(),
			"tencentcloud_vpc_network_interface_limit":                  dataSourceTencentCloudVpcNetworkInterfaceLimit(),
			"tencentcloud_vpc_private_ip_addresses":                     dataSourceTencentCloudVpcPrivateIpAddresses(),
			"tencentcloud_vpc_product_quota":                            dataSourceTencentCloudVpcProductQuota(),
			"tencentcloud_vpc_resource_dashboard":                       dataSourceTencentCloudVpcResourceDashboard(),
			"tencentcloud_vpc_route_conflicts":                          dataSourceTencentCloudVpcRouteConflicts(),
			"tencentcloud_vpc_security_group_limits":                    dataSourceTencentCloudVpcSecurityGroupLimits(),
			"tencentcloud_vpc_security_group_references":                dataSourceTencentCloudVpcSecurityGroupReferences(),
			"tencentcloud_vpc_sg_snapshot_file_content":                 dataSourceTencentCloudVpcSgSnapshotFileContent(),
			"tencentcloud_vpc_snapshot_files":                           dataSourceTencentCloudVpcSnapshotFiles(),
			"tencentcloud_vpc_subnet_resource_dashboard":                dataSourceTencentCloudVpcSubnetResourceDashboard(),
			"tencentcloud_vpc_template_limits":                          dataSourceTencentCloudVpcTemplateLimits(),
			"tencentcloud_vpc_limits":                                   dataSourceTencentCloudVpcLimits(),
			"tencentcloud_vpc_used_ip_address":                          dataSourceTencentCloudVpcUsedIpAddress(),
			"tencentcloud_vpc_net_detect_state_check":                   dataSourceTencentCloudVpcNetDetectStateCheck(),
			"tencentcloud_subnet":                                       dataSourceTencentCloudSubnet(),
			"tencentcloud_route_table":                                  dataSourceTencentCloudRouteTable(),
			"tencentcloud_domains":                                      domain.DataSourceTencentCloudDomains(),
			"tencentcloud_eip":                                          cvm.DataSourceTencentCloudEip(),
			"tencentcloud_eips":                                         cvm.DataSourceTencentCloudEips(),
			"tencentcloud_eip_address_quota":                            cvm.DataSourceTencentCloudEipAddressQuota(),
			"tencentcloud_eip_network_account_type":                     cvm.DataSourceTencentCloudEipNetworkAccountType(),
			"tencentcloud_enis":                                         dataSourceTencentCloudEnis(),
			"tencentcloud_nats":                                         dataSourceTencentCloudNats(),
			"tencentcloud_dnats":                                        dataSourceTencentCloudDnats(),
			"tencentcloud_nat_gateways":                                 dataSourceTencentCloudNatGateways(),
			"tencentcloud_nat_gateway_snats":                            dataSourceTencentCloudNatGatewaySnats(),
			"tencentcloud_nat_dc_route":                                 dataSourceTencentCloudNatDcRoute(),
			"tencentcloud_oceanus_resource_related_job":                 oceanus.DataSourceTencentCloudOceanusResourceRelatedJob(),
			"tencentcloud_oceanus_savepoint_list":                       oceanus.DataSourceTencentCloudOceanusSavepointList(),
			"tencentcloud_oceanus_system_resource":                      oceanus.DataSourceTencentCloudOceanusSystemResource(),
			"tencentcloud_oceanus_work_spaces":                          oceanus.DataSourceTencentCloudOceanusWorkSpaces(),
			"tencentcloud_oceanus_clusters":                             oceanus.DataSourceTencentCloudOceanusClusters(),
			"tencentcloud_oceanus_tree_jobs":                            oceanus.DataSourceTencentCloudOceanusTreeJobs(),
			"tencentcloud_oceanus_tree_resources":                       oceanus.DataSourceTencentCloudOceanusTreeResources(),
			"tencentcloud_oceanus_job_submission_log":                   oceanus.DataSourceTencentCloudOceanusJobSubmissionLog(),
			"tencentcloud_oceanus_check_savepoint":                      oceanus.DataSourceTencentCloudOceanusCheckSavepoint(),
			"tencentcloud_vpn_customer_gateways":                        dataSourceTencentCloudVpnCustomerGateways(),
			"tencentcloud_vpn_gateways":                                 dataSourceTencentCloudVpnGateways(),
			"tencentcloud_vpn_gateway_routes":                           dataSourceTencentCloudVpnGatewayRoutes(),
			"tencentcloud_vpn_connections":                              dataSourceTencentCloudVpnConnections(),
			"tencentcloud_vpn_customer_gateway_vendors":                 dataSourceTencentCloudVpnCustomerGatewayVendors(),
			"tencentcloud_vpn_default_health_check_ip":                  dataSourceTencentCloudVpnDefaultHealthCheckIp(),
			"tencentcloud_ha_vips":                                      dataSourceTencentCloudHaVips(),
			"tencentcloud_ha_vip_eip_attachments":                       dataSourceTencentCloudHaVipEipAttachments(),
			"tencentcloud_ccn_instances":                                ccn.DataSourceTencentCloudCcnInstances(),
			"tencentcloud_ccn_bandwidth_limits":                         ccn.DataSourceTencentCloudCcnBandwidthLimits(),
			"tencentcloud_ccn_cross_border_compliance":                  ccn.DataSourceTencentCloudCcnCrossBorderCompliance(),
			"tencentcloud_ccn_tenant_instances":                         ccn.DataSourceTencentCloudCcnTenantInstance(),
			"tencentcloud_ccn_cross_border_flow_monitor":                ccn.DataSourceTencentCloudCcnCrossBorderFlowMonitor(),
			"tencentcloud_ccn_cross_border_region_bandwidth_limits":     ccn.DataSourceTencentCloudCcnCrossBorderRegionBandwidthLimits(),
			"tencentcloud_dc_instances":                                 dc.DataSourceTencentCloudDcInstances(),
			"tencentcloud_dc_access_points":                             dc.DataSourceTencentCloudDcAccessPoints(),
			"tencentcloud_dc_internet_address_quota":                    dc.DataSourceTencentCloudDcInternetAddressQuota(),
			"tencentcloud_dc_internet_address_statistics":               dc.DataSourceTencentCloudDcInternetAddressStatistics(),
			"tencentcloud_dc_public_direct_connect_tunnel_routes":       dc.DataSourceTencentCloudDcPublicDirectConnectTunnelRoutes(),
			"tencentcloud_dcx_instances":                                dc.DataSourceTencentCloudDcxInstances(),
			"tencentcloud_dc_gateway_instances":                         dcg.DataSourceTencentCloudDcGatewayInstances(),
			"tencentcloud_dc_gateway_ccn_routes":                        dcg.DataSourceTencentCloudDcGatewayCCNRoutes(),
			"tencentcloud_security_group":                               dataSourceTencentCloudSecurityGroup(),
			"tencentcloud_security_groups":                              dataSourceTencentCloudSecurityGroups(),
			"tencentcloud_kubernetes_clusters":                          dataSourceTencentCloudKubernetesClusters(),
			"tencentcloud_kubernetes_charts":                            dataSourceTencentCloudKubernetesCharts(),
			"tencentcloud_kubernetes_cluster_levels":                    datasourceTencentCloudKubernetesClusterLevels(),
			"tencentcloud_kubernetes_cluster_common_names":              datasourceTencentCloudKubernetesClusterCommonNames(),
			"tencentcloud_kubernetes_cluster_authentication_options":    dataSourceTencentCloudKubernetesClusterAuthenticationOptions(),
			"tencentcloud_kubernetes_available_cluster_versions":        dataSourceTencentCloudKubernetesAvailableClusterVersions(),
			"tencentcloud_eks_clusters":                                 dataSourceTencentCloudEKSClusters(),
			"tencentcloud_eks_cluster_credential":                       datasourceTencentCloudEksClusterCredential(),
			"tencentcloud_container_clusters":                           dataSourceTencentCloudContainerClusters(),
			"tencentcloud_container_cluster_instances":                  dataSourceTencentCloudContainerClusterInstances(),
			"tencentcloud_mysql_backup_list":                            cdb.DataSourceTencentCloudMysqlBackupList(),
			"tencentcloud_mysql_zone_config":                            cdb.DataSourceTencentCloudMysqlZoneConfig(),
			"tencentcloud_mysql_parameter_list":                         cdb.DataSourceTencentCloudMysqlParameterList(),
			"tencentcloud_mysql_default_params":                         cdb.DataSourceTencentCloudMysqlDefaultParams(),
			"tencentcloud_mysql_instance":                               cdb.DataSourceTencentCloudMysqlInstance(),
			"tencentcloud_mysql_backup_overview":                        cdb.DataSourceTencentCloudMysqlBackupOverview(),
			"tencentcloud_mysql_backup_summaries":                       cdb.DataSourceTencentCloudMysqlBackupSummaries(),
			"tencentcloud_mysql_bin_log":                                cdb.DataSourceTencentCloudMysqlBinLog(),
			"tencentcloud_mysql_binlog_backup_overview":                 cdb.DataSourceTencentCloudMysqlBinlogBackupOverview(),
			"tencentcloud_mysql_clone_list":                             cdb.DataSourceTencentCloudMysqlCloneList(),
			"tencentcloud_mysql_data_backup_overview":                   cdb.DataSourceTencentCloudMysqlDataBackupOverview(),
			"tencentcloud_mysql_db_features":                            cdb.DataSourceTencentCloudMysqlDbFeatures(),
			"tencentcloud_mysql_inst_tables":                            cdb.DataSourceTencentCloudMysqlInstTables(),
			"tencentcloud_mysql_instance_charset":                       cdb.DataSourceTencentCloudMysqlInstanceCharset(),
			"tencentcloud_mysql_instance_info":                          cdb.DataSourceTencentCloudMysqlInstanceInfo(),
			"tencentcloud_mysql_instance_param_record":                  cdb.DataSourceTencentCloudMysqlInstanceParamRecord(),
			"tencentcloud_mysql_instance_reboot_time":                   cdb.DataSourceTencentCloudMysqlInstanceRebootTime(),
			"tencentcloud_mysql_proxy_custom":                           cdb.DataSourceTencentCloudMysqlProxyCustom(),
			"tencentcloud_mysql_rollback_range_time":                    cdb.DataSourceTencentCloudMysqlRollbackRangeTime(),
			"tencentcloud_mysql_slow_log":                               cdb.DataSourceTencentCloudMysqlSlowLog(),
			"tencentcloud_mysql_slow_log_data":                          cdb.DataSourceTencentCloudMysqlSlowLogData(),
			"tencentcloud_mysql_supported_privileges":                   cdb.DataSourceTencentCloudMysqlSupportedPrivileges(),
			"tencentcloud_mysql_switch_record":                          cdb.DataSourceTencentCloudMysqlSwitchRecord(),
			"tencentcloud_mysql_user_task":                              cdb.DataSourceTencentCloudMysqlUserTask(),
			"tencentcloud_mysql_databases":                              cdb.DataSourceTencentCloudMysqlDatabases(),
			"tencentcloud_mysql_error_log":                              cdb.DataSourceTencentCloudMysqlErrorLog(),
			"tencentcloud_mysql_project_security_group":                 cdb.DataSourceTencentCloudMysqlProjectSecurityGroup(),
			"tencentcloud_mysql_ro_min_scale":                           cdb.DataSourceTencentCloudMysqlRoMinScale(),
			"tencentcloud_cos_bucket_object":                            cos.DataSourceTencentCloudCosBucketObject(),
			"tencentcloud_cos_buckets":                                  cos.DataSourceTencentCloudCosBuckets(),
			"tencentcloud_cos_batchs":                                   cos.DataSourceTencentCloudCosBatchs(),
			"tencentcloud_cos_bucket_inventorys":                        cos.DataSourceTencentCloudCosBucketInventorys(),
			"tencentcloud_cos_bucket_multipart_uploads":                 cos.DataSourceTencentCloudCosBucketMultipartUploads(),
			"tencentcloud_cfs_file_systems":                             cfs.DataSourceTencentCloudCfsFileSystems(),
			"tencentcloud_cfs_access_groups":                            cfs.DataSourceTencentCloudCfsAccessGroups(),
			"tencentcloud_cfs_access_rules":                             cfs.DataSourceTencentCloudCfsAccessRules(),
			"tencentcloud_cfs_mount_targets":                            cfs.DataSourceTencentCloudCfsMountTargets(),
			"tencentcloud_cfs_file_system_clients":                      cfs.DataSourceTencentCloudCfsFileSystemClients(),
			"tencentcloud_cfs_available_zone":                           cfs.DataSourceTencentCloudCfsAvailableZone(),
			"tencentcloud_redis_zone_config":                            crs.DataSourceTencentCloudRedisZoneConfig(),
			"tencentcloud_redis_instances":                              crs.DataSourceTencentCloudRedisInstances(),
			"tencentcloud_redis_backup":                                 crs.DataSourceTencentCloudRedisBackup(),
			"tencentcloud_redis_backup_download_info":                   crs.DataSourceTencentCloudRedisBackupDownloadInfo(),
			"tencentcloud_redis_param_records":                          crs.DataSourceTencentCloudRedisRecordsParam(),
			"tencentcloud_redis_instance_shards":                        crs.DataSourceTencentCloudRedisInstanceShards(),
			"tencentcloud_redis_instance_zone_info":                     crs.DataSourceTencentCloudRedisInstanceZoneInfo(),
			"tencentcloud_redis_instance_task_list":                     crs.DataSourceTencentCloudRedisInstanceTaskList(),
			"tencentcloud_redis_instance_node_info":                     crs.DataSourceTencentCloudRedisInstanceNodeInfo(),
			"tencentcloud_as_scaling_configs":                           as.DataSourceTencentCloudAsScalingConfigs(),
			"tencentcloud_as_scaling_groups":                            as.DataSourceTencentCloudAsScalingGroups(),
			"tencentcloud_as_scaling_policies":                          as.DataSourceTencentCloudAsScalingPolicies(),
			"tencentcloud_cbs_storages":                                 cbs.DataSourceTencentCloudCbsStorages(),
			"tencentcloud_cbs_storages_set":                             cbs.DataSourceTencentCloudCbsStoragesSet(),
			"tencentcloud_cbs_snapshots":                                cbs.DataSourceTencentCloudCbsSnapshots(),
			"tencentcloud_cbs_snapshot_policies":                        cbs.DataSourceTencentCloudCbsSnapshotPolicies(),
			"tencentcloud_clb_instances":                                clb.DataSourceTencentCloudClbInstances(),
			"tencentcloud_clb_listeners":                                clb.DataSourceTencentCloudClbListeners(),
			"tencentcloud_clb_listener_rules":                           clb.DataSourceTencentCloudClbListenerRules(),
			"tencentcloud_clb_attachments":                              clb.DataSourceTencentCloudClbServerAttachments(),
			"tencentcloud_clb_redirections":                             clb.DataSourceTencentCloudClbRedirections(),
			"tencentcloud_clb_target_groups":                            clb.DataSourceTencentCloudClbTargetGroups(),
			"tencentcloud_clb_cluster_resources":                        clb.DataSourceTencentCloudClbClusterResources(),
			"tencentcloud_clb_cross_targets":                            clb.DataSourceTencentCloudClbCrossTargets(),
			"tencentcloud_clb_exclusive_clusters":                       clb.DataSourceTencentCloudClbExclusiveClusters(),
			"tencentcloud_clb_idle_instances":                           clb.DataSourceTencentCloudClbIdleInstances(),
			"tencentcloud_clb_listeners_by_targets":                     clb.DataSourceTencentCloudClbListenersByTargets(),
			"tencentcloud_clb_instance_by_cert_id":                      clb.DataSourceTencentCloudClbInstanceByCertId(),
			"tencentcloud_clb_instance_traffic":                         clb.DataSourceTencentCloudClbInstanceTraffic(),
			"tencentcloud_clb_instance_detail":                          clb.DataSourceTencentCloudClbInstanceDetail(),
			"tencentcloud_clb_resources":                                clb.DataSourceTencentCloudClbResources(),
			"tencentcloud_clb_target_group_list":                        clb.DataSourceTencentCloudClbTargetGroupList(),
			"tencentcloud_clb_target_health":                            clb.DataSourceTencentCloudClbTargetHealth(),
			"tencentcloud_elasticsearch_instances":                      es.DataSourceTencentCloudElasticsearchInstances(),
			"tencentcloud_elasticsearch_instance_logs":                  es.DataSourceTencentCloudElasticsearchInstanceLogs(),
			"tencentcloud_elasticsearch_instance_operations":            es.DataSourceTencentCloudElasticsearchInstanceOperations(),
			"tencentcloud_elasticsearch_logstash_instance_logs":         es.DataSourceTencentCloudElasticsearchLogstashInstanceLogs(),
			"tencentcloud_elasticsearch_logstash_instance_operations":   es.DataSourceTencentCloudElasticsearchLogstashInstanceOperations(),
			"tencentcloud_elasticsearch_views":                          es.DataSourceTencentCloudElasticsearchViews(),
			"tencentcloud_elasticsearch_diagnose":                       es.DataSourceTencentCloudElasticsearchDiagnose(),
			"tencentcloud_elasticsearch_instance_plugin_list":           es.DataSourceTencentCloudElasticsearchInstancePluginList(),
			"tencentcloud_elasticsearch_describe_index_list":            es.DataSourceTencentCloudElasticsearchDescribeIndexList(),
			"tencentcloud_mongodb_zone_config":                          mongodb.DataSourceTencentCloudMongodbZoneConfig(),
			"tencentcloud_mongodb_instances":                            mongodb.DataSourceTencentCloudMongodbInstances(),
			"tencentcloud_mongodb_instance_backups":                     mongodb.DataSourceTencentCloudMongodbInstanceBackups(),
			"tencentcloud_mongodb_instance_connections":                 mongodb.DataSourceTencentCloudMongodbInstanceConnections(),
			"tencentcloud_mongodb_instance_current_op":                  mongodb.DataSourceTencentCloudMongodbInstanceCurrentOp(),
			"tencentcloud_mongodb_instance_params":                      mongodb.DataSourceTencentCloudMongodbInstanceParams(),
			"tencentcloud_mongodb_instance_slow_log":                    mongodb.DataSourceTencentCloudMongodbInstanceSlowLog(),
			"tencentcloud_dayu_cc_https_policies":                       dayu.DataSourceTencentCloudDayuCCHttpsPolicies(),
			"tencentcloud_dayu_cc_http_policies":                        dayu.DataSourceTencentCloudDayuCCHttpPolicies(),
			"tencentcloud_dayu_ddos_policies":                           dayu.DataSourceTencentCloudDayuDdosPolicies(),
			"tencentcloud_dayu_ddos_policy_cases":                       dayu.DataSourceTencentCloudDayuDdosPolicyCases(),
			"tencentcloud_dayu_ddos_policy_attachments":                 dayu.DataSourceTencentCloudDayuDdosPolicyAttachments(),
			"tencentcloud_dayu_l4_rules":                                dayu.DataSourceTencentCloudDayuL4Rules(),
			"tencentcloud_dayu_l4_rules_v2":                             dayuv2.DataSourceTencentCloudDayuL4RulesV2(),
			"tencentcloud_dayu_l7_rules":                                dayu.DataSourceTencentCloudDayuL7Rules(),
			"tencentcloud_dayu_l7_rules_v2":                             dayuv2.DataSourceTencentCloudDayuL7RulesV2(),
			"tencentcloud_antiddos_pending_risk_info":                   dayuv2.DataSourceTencentCloudAntiddosPendingRiskInfo(),
			"tencentcloud_antiddos_overview_index":                      dayuv2.DataSourceTencentCloudAntiddosOverviewIndex(),
			"tencentcloud_antiddos_overview_ddos_trend":                 dayuv2.DataSourceTencentCloudAntiddosOverviewDdosTrend(),
			"tencentcloud_antiddos_overview_ddos_event_list":            dayuv2.DataSourceTencentCloudAntiddosOverviewDdosEventList(),
			"tencentcloud_antiddos_overview_cc_trend":                   dayuv2.DataSourceTencentCloudAntiddosOverviewCcTrend(),
			"tencentcloud_gaap_proxies":                                 gaap.DataSourceTencentCloudGaapProxies(),
			"tencentcloud_gaap_realservers":                             gaap.DataSourceTencentCloudGaapRealservers(),
			"tencentcloud_gaap_layer4_listeners":                        gaap.DataSourceTencentCloudGaapLayer4Listeners(),
			"tencentcloud_gaap_layer7_listeners":                        gaap.DataSourceTencentCloudGaapLayer7Listeners(),
			"tencentcloud_gaap_http_domains":                            gaap.DataSourceTencentCloudGaapHttpDomains(),
			"tencentcloud_gaap_http_rules":                              gaap.DataSourceTencentCloudGaapHttpRules(),
			"tencentcloud_gaap_security_policies":                       gaap.DataSourceTencentCloudGaapSecurityPolices(),
			"tencentcloud_gaap_security_rules":                          gaap.DataSourceTencentCloudGaapSecurityRules(),
			"tencentcloud_gaap_certificates":                            gaap.DataSourceTencentCloudGaapCertificates(),
			"tencentcloud_gaap_domain_error_pages":                      gaap.DataSourceTencentCloudGaapDomainErrorPageInfoList(),
			"tencentcloud_gaap_access_regions":                          gaap.DataSourceTencentCloudGaapAccessRegions(),
			"tencentcloud_gaap_access_regions_by_dest_region":           gaap.DataSourceTencentCloudGaapAccessRegionsByDestRegion(),
			"tencentcloud_gaap_black_header":                            gaap.DataSourceTencentCloudGaapBlackHeader(),
			"tencentcloud_gaap_country_area_mapping":                    gaap.DataSourceTencentCloudGaapCountryAreaMapping(),
			"tencentcloud_gaap_custom_header":                           gaap.DataSourceTencentCloudGaapCustomHeader(),
			"tencentcloud_gaap_dest_regions":                            gaap.DataSourceTencentCloudGaapDestRegions(),
			"tencentcloud_gaap_proxy_detail":                            gaap.DataSourceTencentCloudGaapProxyDetail(),
			"tencentcloud_gaap_proxy_groups":                            gaap.DataSourceTencentCloudGaapProxyGroups(),
			"tencentcloud_gaap_proxy_group_statistics":                  gaap.DataSourceTencentCloudGaapProxyGroupStatistics(),
			"tencentcloud_gaap_proxy_statistics":                        gaap.DataSourceTencentCloudGaapProxyStatistics(),
			"tencentcloud_gaap_real_servers_status":                     gaap.DataSourceTencentCloudGaapRealServersStatus(),
			"tencentcloud_gaap_rule_real_servers":                       gaap.DataSourceTencentCloudGaapRuleRealServers(),
			"tencentcloud_gaap_resources_by_tag":                        gaap.DataSourceTencentCloudGaapResourcesByTag(),
			"tencentcloud_gaap_region_and_price":                        gaap.DataSourceTencentCloudGaapRegionAndPrice(),
			"tencentcloud_gaap_proxy_and_statistics_listeners":          gaap.DataSourceTencentCloudGaapProxyAndStatisticsListeners(),
			"tencentcloud_gaap_proxies_status":                          gaap.DataSourceTencentCloudGaapProxiesStatus(),
			"tencentcloud_gaap_listener_statistics":                     gaap.DataSourceTencentCloudGaapListenerStatistics(),
			"tencentcloud_gaap_listener_real_servers":                   gaap.DataSourceTencentCloudGaapListenerRealServers(),
			"tencentcloud_gaap_group_and_statistics_proxy":              gaap.DataSourceTencentCloudGaapGroupAndStatisticsProxy(),
			"tencentcloud_gaap_domain_error_page_infos":                 gaap.DataSourceTencentCloudGaapDomainErrorPageInfos(),
			"tencentcloud_gaap_check_proxy_create":                      gaap.DataSourceTencentCloudGaapCheckProxyCreate(),
			"tencentcloud_ssl_certificates":                             dataSourceTencentCloudSslCertificates(),
			"tencentcloud_ssl_describe_certificate":                     dataSourceTencentCloudSslDescribeCertificate(),
			"tencentcloud_ssl_describe_companies":                       dataSourceTencentCloudSslDescribeCompanies(),
			"tencentcloud_ssl_describe_host_api_gateway_instance_list":  dataSourceTencentCloudSslDescribeHostApiGatewayInstanceList(),
			"tencentcloud_ssl_describe_host_cdn_instance_list":          dataSourceTencentCloudSslDescribeHostCdnInstanceList(),
			"tencentcloud_ssl_describe_host_clb_instance_list":          dataSourceTencentCloudSslDescribeHostClbInstanceList(),
			"tencentcloud_ssl_describe_host_cos_instance_list":          dataSourceTencentCloudSslDescribeHostCosInstanceList(),
			"tencentcloud_ssl_describe_host_ddos_instance_list":         dataSourceTencentCloudSslDescribeHostDdosInstanceList(),
			"tencentcloud_ssl_describe_host_lighthouse_instance_list":   dataSourceTencentCloudSslDescribeHostLighthouseInstanceList(),
			"tencentcloud_ssl_describe_host_live_instance_list":         dataSourceTencentCloudSslDescribeHostLiveInstanceList(),
			"tencentcloud_ssl_describe_host_teo_instance_list":          dataSourceTencentCloudSslDescribeHostTeoInstanceList(),
			"tencentcloud_ssl_describe_host_tke_instance_list":          dataSourceTencentCloudSslDescribeHostTkeInstanceList(),
			"tencentcloud_ssl_describe_host_update_record":              dataSourceTencentCloudSslDescribeHostUpdateRecord(),
			"tencentcloud_ssl_describe_host_update_record_detail":       dataSourceTencentCloudSslDescribeHostUpdateRecordDetail(),
			"tencentcloud_ssl_describe_host_vod_instance_list":          dataSourceTencentCloudSslDescribeHostVodInstanceList(),
			"tencentcloud_ssl_describe_host_waf_instance_list":          dataSourceTencentCloudSslDescribeHostWafInstanceList(),
			"tencentcloud_ssl_describe_manager_detail":                  dataSourceTencentCloudSslDescribeManagerDetail(),
			"tencentcloud_ssl_describe_managers":                        dataSourceTencentCloudSslDescribeManagers(),
			"tencentcloud_ssl_describe_host_deploy_record":              dataSourceTencentCloudSslDescribeHostDeployRecord(),
			"tencentcloud_ssl_describe_host_deploy_record_detail":       dataSourceTencentCloudSslDescribeHostDeployRecordDetail(),
			"tencentcloud_cam_roles":                                    cam.DataSourceTencentCloudCamRoles(),
			"tencentcloud_cam_users":                                    cam.DataSourceTencentCloudCamUsers(),
			"tencentcloud_cam_groups":                                   cam.DataSourceTencentCloudCamGroups(),
			"tencentcloud_cam_group_memberships":                        cam.DataSourceTencentCloudCamGroupMemberships(),
			"tencentcloud_cam_policies":                                 cam.DataSourceTencentCloudCamPolicies(),
			"tencentcloud_cam_role_policy_attachments":                  cam.DataSourceTencentCloudCamRolePolicyAttachments(),
			"tencentcloud_cam_user_policy_attachments":                  cam.DataSourceTencentCloudCamUserPolicyAttachments(),
			"tencentcloud_cam_group_policy_attachments":                 cam.DataSourceTencentCloudCamGroupPolicyAttachments(),
			"tencentcloud_cam_saml_providers":                           cam.DataSourceTencentCloudCamSAMLProviders(),
			"tencentcloud_cam_list_entities_for_policy":                 cam.DataSourceTencentCloudCamListEntitiesForPolicy(),
			"tencentcloud_cam_account_summary":                          cam.DataSourceTencentCloudCamAccountSummary(),
			"tencentcloud_cam_oidc_config":                              cam.DataSourceTencentCloudCamOidcConfig(),
			"tencentcloud_user_info":                                    cam.DataSourceTencentCloudUserInfo(),
			"tencentcloud_cdn_domains":                                  cdn.DataSourceTencentCloudCdnDomains(),
			"tencentcloud_cdn_domain_verifier":                          cdn.DataSourceTencentCloudCdnDomainVerifyRecord(),
			"tencentcloud_scf_functions":                                dataSourceTencentCloudScfFunctions(),
			"tencentcloud_scf_namespaces":                               dataSourceTencentCloudScfNamespaces(),
			"tencentcloud_scf_account_info":                             dataSourceTencentCloudScfAccountInfo(),
			"tencentcloud_scf_async_event_management":                   dataSourceTencentCloudScfAsyncEventManagement(),
			"tencentcloud_scf_triggers":                                 dataSourceTencentCloudScfTriggers(),
			"tencentcloud_scf_async_event_status":                       dataSourceTencentCloudScfAsyncEventStatus(),
			"tencentcloud_scf_function_address":                         dataSourceTencentCloudScfFunctionAddress(),
			"tencentcloud_scf_request_status":                           dataSourceTencentCloudScfRequestStatus(),
			"tencentcloud_scf_function_aliases":                         dataSourceTencentCloudScfFunctionAliases(),
			"tencentcloud_scf_layer_versions":                           dataSourceTencentCloudScfLayerVersions(),
			"tencentcloud_scf_layers":                                   dataSourceTencentCloudScfLayers(),
			"tencentcloud_scf_function_versions":                        dataSourceTencentCloudScfFunctionVersions(),
			"tencentcloud_scf_logs":                                     dataSourceTencentCloudScfLogs(),
			"tencentcloud_tcaplus_clusters":                             dataSourceTencentCloudTcaplusClusters(),
			"tencentcloud_tcaplus_tablegroups":                          dataSourceTencentCloudTcaplusTableGroups(),
			"tencentcloud_tcaplus_tables":                               dataSourceTencentCloudTcaplusTables(),
			"tencentcloud_tcaplus_idls":                                 dataSourceTencentCloudTcaplusIdls(),
			"tencentcloud_monitor_policy_conditions":                    monitor.DataSourceTencentCloudMonitorPolicyConditions(),
			"tencentcloud_monitor_data":                                 monitor.DataSourceTencentCloudMonitorData(),
			"tencentcloud_monitor_product_event":                        monitor.DataSourceTencentCloudMonitorProductEvent(),
			"tencentcloud_monitor_binding_objects":                      monitor.DataSourceTencentCloudMonitorBindingObjects(),
			"tencentcloud_monitor_policy_groups":                        monitor.DataSourceTencentCloudMonitorPolicyGroups(),
			"tencentcloud_monitor_product_namespace":                    monitor.DataSourceTencentCloudMonitorProductNamespace(),
			"tencentcloud_monitor_alarm_notices":                        monitor.DataSourceTencentCloudMonitorAlarmNotices(),
			"tencentcloud_monitor_alarm_metric":                         monitor.DataSourceTencentCloudMonitorAlarmMetric(),
			"tencentcloud_monitor_alarm_policy":                         monitor.DataSourceTencentCloudMonitorAlarmPolicy(),
			"tencentcloud_monitor_alarm_history":                        monitor.DataSourceTencentCloudMonitorAlarmHistory(),
			"tencentcloud_monitor_alarm_basic_alarms":                   monitor.DataSourceTencentCloudMonitorAlarmBasicAlarms(),
			"tencentcloud_monitor_alarm_basic_metric":                   monitor.DataSourceTencentCloudMonitorAlarmBasicMetric(),
			"tencentcloud_monitor_alarm_conditions_template":            monitor.DataSourceTencentCloudMonitorAlarmConditionsTemplate(),
			"tencentcloud_monitor_grafana_plugin_overviews":             dataSourceTencentCloudMonitorGrafanaPluginOverviews(),
			"tencentcloud_monitor_alarm_notice_callbacks":               monitor.DataSourceTencentCloudMonitorAlarmNoticeCallbacks(),
			"tencentcloud_monitor_alarm_all_namespaces":                 monitor.DataSourceTencentCloudMonitorAlarmAllNamespaces(),
			"tencentcloud_monitor_alarm_monitor_type":                   monitor.DataSourceTencentCloudMonitorAlarmMonitorType(),
			"tencentcloud_monitor_statistic_data":                       dataSourceTencentCloudMonitorStatisticData(),
			"tencentcloud_monitor_tmp_regions":                          dataSourceTencentCloudMonitorTmpRegions(),
			"tencentcloud_postgresql_instances":                         postgresql.DataSourceTencentCloudPostgresqlInstances(),
			"tencentcloud_postgresql_specinfos":                         postgresql.DataSourceTencentCloudPostgresqlSpecinfos(),
			"tencentcloud_postgresql_xlogs":                             postgresql.DataSourceTencentCloudPostgresqlXlogs(),
			"tencentcloud_postgresql_parameter_templates":               postgresql.DataSourceTencentCloudPostgresqlParameterTemplates(),
			"tencentcloud_postgresql_readonly_groups":                   postgresql.DataSourceTencentCloudPostgresqlReadonlyGroups(),
			"tencentcloud_postgresql_base_backups":                      postgresql.DataSourceTencentCloudPostgresqlBaseBackups(),
			"tencentcloud_postgresql_log_backups":                       postgresql.DataSourceTencentCloudPostgresqlLogBackups(),
			"tencentcloud_postgresql_backup_download_urls":              postgresql.DataSourceTencentCloudPostgresqlBackupDownloadUrls(),
			"tencentcloud_postgresql_db_instance_classes":               postgresql.DataSourceTencentCloudPostgresqlDbInstanceClasses(),
			"tencentcloud_postgresql_default_parameters":                postgresql.DataSourceTencentCloudPostgresqlDefaultParameters(),
			"tencentcloud_postgresql_recovery_time":                     postgresql.DataSourceTencentCloudPostgresqlRecoveryTime(),
			"tencentcloud_postgresql_regions":                           postgresql.DataSourceTencentCloudPostgresqlRegions(),
			"tencentcloud_postgresql_db_instance_versions":              postgresql.DataSourceTencentCloudPostgresqlDbInstanceVersions(),
			"tencentcloud_postgresql_zones":                             postgresql.DataSourceTencentCloudPostgresqlZones(),
			"tencentcloud_sqlserver_zone_config":                        dataSourceTencentSqlserverZoneConfig(),
			"tencentcloud_sqlserver_instances":                          dataSourceTencentCloudSqlserverInstances(),
			"tencentcloud_sqlserver_backups":                            dataSourceTencentCloudSqlserverBackups(),
			"tencentcloud_sqlserver_dbs":                                dataSourceTencentSqlserverDBs(),
			"tencentcloud_sqlserver_accounts":                           dataSourceTencentCloudSqlserverAccounts(),
			"tencentcloud_sqlserver_account_db_attachments":             dataSourceTencentCloudSqlserverAccountDBAttachments(),
			"tencentcloud_sqlserver_readonly_groups":                    dataSourceTencentCloudSqlserverReadonlyGroups(),
			"tencentcloud_sqlserver_backup_commands":                    dataSourceTencentCloudSqlserverBackupCommands(),
			"tencentcloud_sqlserver_backup_by_flow_id":                  dataSourceTencentCloudSqlserverBackupByFlowId(),
			"tencentcloud_sqlserver_backup_upload_size":                 dataSourceTencentCloudSqlserverBackupUploadSize(),
			"tencentcloud_sqlserver_cross_region_zone":                  dataSourceTencentCloudSqlserverCrossRegionZone(),
			"tencentcloud_sqlserver_db_charsets":                        dataSourceTencentCloudSqlserverDBCharsets(),
			"tencentcloud_ckafka_users":                                 ckafka.DataSourceTencentCloudCkafkaUsers(),
			"tencentcloud_ckafka_acls":                                  ckafka.DataSourceTencentCloudCkafkaAcls(),
			"tencentcloud_ckafka_topics":                                ckafka.DataSourceTencentCloudCkafkaTopics(),
			"tencentcloud_ckafka_instances":                             ckafka.DataSourceTencentCloudCkafkaInstances(),
			"tencentcloud_ckafka_connect_resource":                      ckafka.DataSourceTencentCloudCkafkaConnectResource(),
			"tencentcloud_ckafka_region":                                ckafka.DataSourceTencentCloudCkafkaRegion(),
			"tencentcloud_ckafka_datahub_topic":                         ckafka.DataSourceTencentCloudCkafkaDatahubTopic(),
			"tencentcloud_ckafka_datahub_group_offsets":                 ckafka.DataSourceTencentCloudCkafkaDatahubGroupOffsets(),
			"tencentcloud_ckafka_datahub_task":                          ckafka.DataSourceTencentCloudCkafkaDatahubTask(),
			"tencentcloud_ckafka_group":                                 ckafka.DataSourceTencentCloudCkafkaGroup(),
			"tencentcloud_ckafka_group_offsets":                         ckafka.DataSourceTencentCloudCkafkaGroupOffsets(),
			"tencentcloud_ckafka_group_info":                            ckafka.DataSourceTencentCloudCkafkaGroupInfo(),
			"tencentcloud_ckafka_task_status":                           ckafka.DataSourceTencentCloudCkafkaTaskStatus(),
			"tencentcloud_ckafka_topic_flow_ranking":                    ckafka.DataSourceTencentCloudCkafkaTopicFlowRanking(),
			"tencentcloud_ckafka_topic_produce_connection":              ckafka.DataSourceTencentCloudCkafkaTopicProduceConnection(),
			"tencentcloud_ckafka_topic_subscribe_group":                 ckafka.DataSourceTencentCloudCkafkaTopicSubscribeGroup(),
			"tencentcloud_ckafka_topic_sync_replica":                    ckafka.DataSourceTencentCloudCkafkaTopicSyncReplica(),
			"tencentcloud_ckafka_zone":                                  ckafka.DataSourceTencentCloudCkafkaZone(),
			"tencentcloud_audit_cos_regions":                            audit.DataSourceTencentCloudAuditCosRegions(),
			"tencentcloud_audit_key_alias":                              audit.DataSourceTencentCloudAuditKeyAlias(),
			"tencentcloud_audits":                                       audit.DataSourceTencentCloudAudits(),
			"tencentcloud_cynosdb_clusters":                             cynosdb.DataSourceTencentCloudCynosdbClusters(),
			"tencentcloud_cynosdb_instances":                            cynosdb.DataSourceTencentCloudCynosdbInstances(),
			"tencentcloud_cynosdb_zone_config":                          cynosdb.DataSourceTencentCloudCynosdbZoneConfig(),
			"tencentcloud_cynosdb_instance_slow_queries":                cynosdb.DataSourceTencentCloudCynosdbInstanceSlowQueries(),
			"tencentcloud_vod_adaptive_dynamic_streaming_templates":     dataSourceTencentCloudVodAdaptiveDynamicStreamingTemplates(),
			"tencentcloud_vod_image_sprite_templates":                   dataSourceTencentCloudVodImageSpriteTemplates(),
			"tencentcloud_vod_procedure_templates":                      dataSourceTencentCloudVodProcedureTemplates(),
			"tencentcloud_vod_snapshot_by_time_offset_templates":        dataSourceTencentCloudVodSnapshotByTimeOffsetTemplates(),
			"tencentcloud_vod_super_player_configs":                     dataSourceTencentCloudVodSuperPlayerConfigs(),
			"tencentcloud_sqlserver_publish_subscribes":                 dataSourceTencentSqlserverPublishSubscribes(),
			"tencentcloud_sqlserver_instance_param_records":             dataSourceTencentCloudSqlserverInstanceParamRecords(),
			"tencentcloud_sqlserver_project_security_groups":            dataSourceTencentCloudSqlserverProjectSecurityGroups(),
			"tencentcloud_sqlserver_regions":                            dataSourceTencentCloudSqlserverRegions(),
			"tencentcloud_sqlserver_rollback_time":                      dataSourceTencentCloudSqlserverRollbackTime(),
			"tencentcloud_sqlserver_slowlogs":                           dataSourceTencentCloudSqlserverSlowlogs(),
			"tencentcloud_sqlserver_upload_backup_info":                 dataSourceTencentCloudSqlserverUploadBackupInfo(),
			"tencentcloud_sqlserver_upload_incremental_info":            dataSourceTencentCloudSqlserverUploadIncrementalInfo(),
			"tencentcloud_api_gateway_usage_plans":                      apigateway.DataSourceTencentCloudAPIGatewayUsagePlans(),
			"tencentcloud_api_gateway_ip_strategies":                    apigateway.DataSourceTencentCloudAPIGatewayIpStrategy(),
			"tencentcloud_api_gateway_customer_domains":                 apigateway.DataSourceTencentCloudAPIGatewayCustomerDomains(),
			"tencentcloud_api_gateway_usage_plan_environments":          apigateway.DataSourceTencentCloudAPIGatewayUsagePlanEnvironments(),
			"tencentcloud_api_gateway_throttling_services":              apigateway.DataSourceTencentCloudAPIGatewayThrottlingServices(),
			"tencentcloud_api_gateway_throttling_apis":                  apigateway.DataSourceTencentCloudAPIGatewayThrottlingApis(),
			"tencentcloud_api_gateway_apis":                             apigateway.DataSourceTencentCloudAPIGatewayAPIs(),
			"tencentcloud_api_gateway_services":                         apigateway.DataSourceTencentCloudAPIGatewayServices(),
			"tencentcloud_api_gateway_api_keys":                         apigateway.DataSourceTencentCloudAPIGatewayAPIKeys(),
			"tencentcloud_api_gateway_plugins":                          apigateway.DataSourceTencentCloudAPIGatewayPlugins(),
			"tencentcloud_api_gateway_upstreams":                        apigateway.DataSourceTencentCloudAPIGatewayUpstreams(),
			"tencentcloud_api_gateway_api_usage_plans":                  apigateway.DataSourceTencentCloudAPIGatewayApiUsagePlans(),
			"tencentcloud_api_gateway_api_app_service":                  apigateway.DataSourceTencentCloudAPIGatewayApiAppService(),
			"tencentcloud_api_gateway_bind_api_apps_status":             apigateway.DataSourceTencentCloudApiGatewayBindApiAppsStatus(),
			"tencentcloud_api_gateway_api_app_api":                      apigateway.DataSourceTencentCloudApiGatewayApiAppApi(),
			"tencentcloud_api_gateway_api_plugins":                      apigateway.DataSourceTencentCloudApiGatewayApiPlugins(),
			"tencentcloud_api_gateway_service_release_versions":         apigateway.DataSourceTencentCloudApiGatewayServiceReleaseVersions(),
			"tencentcloud_api_gateway_service_environment_list":         apigateway.DataSourceTencentCloudApiGatewayServiceEnvironmentList(),
			"tencentcloud_sqlserver_basic_instances":                    dataSourceTencentCloudSqlserverBasicInstances(),
			"tencentcloud_sqlserver_query_xevent":                       dataSourceTencentCloudSqlserverQueryXevent(),
			"tencentcloud_sqlserver_ins_attribute":                      dataSourceTencentCloudSqlserverInsAttribute(),
			"tencentcloud_sqlserver_desc_ha_log":                        dataSourceTencentCloudSqlserverDescHaLog(),
			"tencentcloud_tcr_instances":                                dataSourceTencentCloudTCRInstances(),
			"tencentcloud_tcr_namespaces":                               dataSourceTencentCloudTCRNamespaces(),
			"tencentcloud_tcr_tokens":                                   dataSourceTencentCloudTCRTokens(),
			"tencentcloud_tcr_vpc_attachments":                          dataSourceTencentCloudTCRVPCAttachments(),
			"tencentcloud_tcr_repositories":                             dataSourceTencentCloudTCRRepositories(),
			"tencentcloud_tcr_webhook_trigger_logs":                     dataSourceTencentCloudTcrWebhookTriggerLogs(),
			"tencentcloud_tcr_images":                                   dataSourceTencentCloudTcrImages(),
			"tencentcloud_tcr_image_manifests":                          dataSourceTencentCloudTcrImageManifests(),
			"tencentcloud_tcr_tag_retention_execution_tasks":            dataSourceTencentCloudTcrTagRetentionExecutionTasks(),
			"tencentcloud_tcr_tag_retention_executions":                 dataSourceTencentCloudTcrTagRetentionExecutions(),
			"tencentcloud_tcr_replication_instance_create_tasks":        dataSourceTencentCloudTcrReplicationInstanceCreateTasks(),
			"tencentcloud_tcr_replication_instance_sync_status":         dataSourceTencentCloudTcrReplicationInstanceSyncStatus(),
			"tencentcloud_address_templates":                            dataSourceTencentCloudAddressTemplates(),
			"tencentcloud_address_template_groups":                      dataSourceTencentCloudAddressTemplateGroups(),
			"tencentcloud_protocol_templates":                           dataSourceTencentCloudProtocolTemplates(),
			"tencentcloud_protocol_template_groups":                     dataSourceTencentCloudProtocolTemplateGroups(),
			"tencentcloud_kms_keys":                                     kms.DataSourceTencentCloudKmsKeys(),
			"tencentcloud_kms_public_key":                               kms.DataSourceTencentCloudKmsPublicKey(),
			"tencentcloud_kms_get_parameters_for_import":                kms.DataSourceTencentCloudKmsGetParametersForImport(),
			"tencentcloud_kms_describe_keys":                            kms.DataSourceTencentCloudKmsDescribeKeys(),
			"tencentcloud_kms_white_box_key_details":                    kms.DataSourceTencentCloudKmsWhiteBoxKeyDetails(),
			"tencentcloud_kms_list_keys":                                kms.DataSourceTencentCloudKmsListKeys(),
			"tencentcloud_kms_white_box_decrypt_key":                    kms.DataSourceTencentCloudKmsWhiteBoxDecryptKey(),
			"tencentcloud_kms_white_box_device_fingerprints":            kms.DataSourceTencentCloudKmsWhiteBoxDeviceFingerprints(),
			"tencentcloud_kms_list_algorithms":                          kms.DataSourceTencentCloudKmsListAlgorithms(),
			"tencentcloud_ssm_products":                                 dataSourceTencentCloudSsmProducts(),
			"tencentcloud_ssm_secrets":                                  dataSourceTencentCloudSsmSecrets(),
			"tencentcloud_ssm_secret_versions":                          dataSourceTencentCloudSsmSecretVersions(),
			"tencentcloud_ssm_rotation_detail":                          dataSourceTencentCloudSsmRotationDetail(),
			"tencentcloud_ssm_rotation_history":                         dataSourceTencentCloudSsmRotationHistory(),
			"tencentcloud_ssm_service_status":                           dataSourceTencentCloudSsmServiceStatus(),
			"tencentcloud_ssm_ssh_key_pair_value":                       dataSourceTencentCloudSsmSshKeyPairValue(),
			"tencentcloud_cdh_instances":                                cdh.DataSourceTencentCloudCdhInstances(),
			"tencentcloud_dayu_eip":                                     dayuv2.DataSourceTencentCloudDayuEip(),
			"tencentcloud_teo_zone_available_plans":                     dataSourceTencentCloudTeoZoneAvailablePlans(),
			"tencentcloud_teo_rule_engine_settings":                     dataSourceTencentCloudTeoRuleEngineSettings(),
			"tencentcloud_sts_caller_identity":                          dataSourceTencentCloudStsCallerIdentity(),
			"tencentcloud_dcdb_instances":                               dcdb.DataSourceTencentCloudDcdbInstances(),
			"tencentcloud_dcdb_accounts":                                dcdb.DataSourceTencentCloudDcdbAccounts(),
			"tencentcloud_dcdb_databases":                               dcdb.DataSourceTencentCloudDcdbDatabases(),
			"tencentcloud_dcdb_parameters":                              dcdb.DataSourceTencentCloudDcdbParameters(),
			"tencentcloud_dcdb_shards":                                  dcdb.DataSourceTencentCloudDcdbShards(),
			"tencentcloud_dcdb_security_groups":                         dcdb.DataSourceTencentCloudDcdbSecurityGroups(),
			"tencentcloud_dcdb_database_objects":                        dcdb.DataSourceTencentCloudDcdbDatabaseObjects(),
			"tencentcloud_dcdb_database_tables":                         dcdb.DataSourceTencentCloudDcdbDatabaseTables(),
			"tencentcloud_dcdb_file_download_url":                       dcdb.DataSourceTencentCloudDcdbFileDownloadUrl(),
			"tencentcloud_dcdb_log_files":                               dcdb.DataSourceTencentCloudDcdbLogFiles(),
			"tencentcloud_dcdb_instance_node_info":                      dcdb.DataSourceTencentCloudDcdbInstanceNodeInfo(),
			"tencentcloud_dcdb_orders":                                  dcdb.DataSourceTencentCloudDcdbOrders(),
			"tencentcloud_dcdb_price":                                   dcdb.DataSourceTencentCloudDcdbPrice(),
			"tencentcloud_dcdb_project_security_groups":                 dcdb.DataSourceTencentCloudDcdbProjectSecurityGroups(),
			"tencentcloud_dcdb_projects":                                dcdb.DataSourceTencentCloudDcdbProjects(),
			"tencentcloud_dcdb_renewal_price":                           dcdb.DataSourceTencentCloudDcdbRenewalPrice(),
			"tencentcloud_dcdb_sale_info":                               dcdb.DataSourceTencentCloudDcdbSaleInfo(),
			"tencentcloud_dcdb_shard_spec":                              dcdb.DataSourceTencentCloudDcdbShardSpec(),
			"tencentcloud_dcdb_slow_logs":                               dcdb.DataSourceTencentCloudDcdbSlowLogs(),
			"tencentcloud_dcdb_upgrade_price":                           dcdb.DataSourceTencentCloudDcdbUpgradePrice(),
			"tencentcloud_mariadb_db_instances":                         mariadb.DataSourceTencentCloudMariadbDbInstances(),
			"tencentcloud_mariadb_accounts":                             mariadb.DataSourceTencentCloudMariadbAccounts(),
			"tencentcloud_mariadb_security_groups":                      mariadb.DataSourceTencentCloudMariadbSecurityGroups(),
			"tencentcloud_mariadb_database_objects":                     mariadb.DataSourceTencentCloudMariadbDatabaseObjects(),
			"tencentcloud_mariadb_databases":                            mariadb.DataSourceTencentCloudMariadbDatabases(),
			"tencentcloud_mariadb_database_table":                       mariadb.DataSourceTencentCloudMariadbDatabaseTable(),
			"tencentcloud_mariadb_dcn_detail":                           mariadb.DataSourceTencentCloudMariadbDcnDetail(),
			"tencentcloud_mariadb_file_download_url":                    mariadb.DataSourceTencentCloudMariadbFileDownloadUrl(),
			"tencentcloud_mariadb_flow":                                 mariadb.DataSourceTencentCloudMariadbFlow(),
			"tencentcloud_mariadb_instance_node_info":                   mariadb.DataSourceTencentCloudMariadbInstanceNodeInfo(),
			"tencentcloud_mariadb_instance_specs":                       mariadb.DataSourceTencentCloudMariadbInstanceSpecs(),
			"tencentcloud_mariadb_log_files":                            mariadb.DataSourceTencentCloudMariadbLogFiles(),
			"tencentcloud_mariadb_orders":                               mariadb.DataSourceTencentCloudMariadbOrders(),
			"tencentcloud_mariadb_price":                                mariadb.DataSourceTencentCloudMariadbPrice(),
			"tencentcloud_mariadb_project_security_groups":              mariadb.DataSourceTencentCloudMariadbProjectSecurityGroups(),
			"tencentcloud_mariadb_renewal_price":                        mariadb.DataSourceTencentCloudMariadbRenewalPrice(),
			"tencentcloud_mariadb_sale_info":                            mariadb.DataSourceTencentCloudMariadbSaleInfo(),
			"tencentcloud_mariadb_slow_logs":                            mariadb.DataSourceTencentCloudMariadbSlowLogs(),
			"tencentcloud_mariadb_upgrade_price":                        mariadb.DataSourceTencentCloudMariadbUpgradePrice(),
			"tencentcloud_mps_schedules":                                mps.DataSourceTencentCloudMpsSchedules(),
			"tencentcloud_mps_tasks":                                    mps.DataSourceTencentCloudMpsTasks(),
			"tencentcloud_mps_parse_live_stream_process_notification":   mps.DataSourceTencentCloudMpsParseLiveStreamProcessNotification(),
			"tencentcloud_mps_parse_notification":                       mps.DataSourceTencentCloudMpsParseNotification(),
			"tencentcloud_mps_media_meta_data":                          mps.DataSourceTencentCloudMpsMediaMetaData(),
			"tencentcloud_tdcpg_clusters":                               dataSourceTencentCloudTdcpgClusters(),
			"tencentcloud_tdcpg_instances":                              dataSourceTencentCloudTdcpgInstances(),
			"tencentcloud_cat_probe_data":                               cat.DataSourceTencentCloudCatProbeData(),
			"tencentcloud_cat_node":                                     cat.DataSourceTencentCloudCatNode(),
			"tencentcloud_cat_metric_data":                              cat.DataSourceTencentCloudCatMetricData(),
			"tencentcloud_rum_project":                                  rum.DataSourceTencentCloudRumProject(),
			"tencentcloud_rum_offline_log_config":                       rum.DataSourceTencentCloudRumOfflineLogConfig(),
			"tencentcloud_rum_whitelist":                                rum.DataSourceTencentCloudRumWhitelist(),
			"tencentcloud_rum_taw_instance":                             rum.DataSourceTencentCloudRumTawInstance(),
			"tencentcloud_rum_custom_url":                               rum.DataSourceTencentCloudRumCustomUrl(),
			"tencentcloud_rum_event_url":                                rum.DataSourceTencentCloudRumEventUrl(),
			"tencentcloud_rum_fetch_url_info":                           rum.DataSourceTencentCloudRumFetchUrlInfo(),
			"tencentcloud_rum_fetch_url":                                rum.DataSourceTencentCloudRumFetchUrl(),
			"tencentcloud_rum_group_log":                                rum.DataSourceTencentCloudRumGroupLog(),
			"tencentcloud_rum_log_list":                                 rum.DataSourceTencentCloudRumLogList(),
			"tencentcloud_rum_log_url_statistics":                       rum.DataSourceTencentCloudRumLogUrlStatistics(),
			"tencentcloud_rum_performance_page":                         rum.DataSourceTencentCloudRumPerformancePage(),
			"tencentcloud_rum_pv_url_info":                              rum.DataSourceTencentCloudRumPvUrlInfo(),
			"tencentcloud_rum_pv_url_statistics":                        rum.DataSourceTencentCloudRumPvUrlStatistics(),
			"tencentcloud_rum_report_count":                             rum.DataSourceTencentCloudRumReportCount(),
			"tencentcloud_rum_log_stats_log_list":                       rum.DataSourceTencentCloudRumLogStatsLogList(),
			"tencentcloud_rum_scores":                                   rum.DataSourceTencentCloudRumScores(),
			"tencentcloud_rum_set_url_statistics":                       rum.DataSourceTencentCloudRumSetUrlStatistics(),
			"tencentcloud_rum_sign":                                     rum.DataSourceTencentCloudRumSign(),
			"tencentcloud_rum_static_project":                           rum.DataSourceTencentCloudRumStaticProject(),
			"tencentcloud_rum_static_resource":                          rum.DataSourceTencentCloudRumStaticResource(),
			"tencentcloud_rum_static_url":                               rum.DataSourceTencentCloudRumStaticUrl(),
			"tencentcloud_rum_taw_area":                                 rum.DataSourceTencentCloudRumTawArea(),
			"tencentcloud_rum_web_vitals_page":                          rum.DataSourceTencentCloudRumWebVitalsPage(),
			"tencentcloud_rum_log_export":                               rum.DataSourceTencentCloudRumLogExport(),
			"tencentcloud_rum_log_export_list":                          rum.DataSourceTencentCloudRumLogExportList(),
			"tencentcloud_dnspod_records":                               dnspod.DataSourceTencentCloudDnspodRecords(),
			"tencentcloud_dnspod_domain_list":                           dnspod.DataSourceTencentCloudDnspodDomainList(),
			"tencentcloud_dnspod_domain_analytics":                      dnspod.DataSourceTencentCloudDnspodDomainAnalytics(),
			"tencentcloud_dnspod_domain_log_list":                       dnspod.DataSourceTencentCloudDnspodDomainLogList(),
			"tencentcloud_dnspod_record_analytics":                      dnspod.DataSourceTencentCloudDnspodRecordAnalytics(),
			"tencentcloud_dnspod_record_line_list":                      dnspod.DataSourceTencentCloudDnspodRecordLineList(),
			"tencentcloud_dnspod_record_list":                           dnspod.DataSourceTencentCloudDnspodRecordList(),
			"tencentcloud_dnspod_record_type":                           dnspod.DataSourceTencentCloudDnspodRecordType(),
			"tencentcloud_tat_command":                                  dataSourceTencentCloudTatCommand(),
			"tencentcloud_tat_invoker":                                  dataSourceTencentCloudTatInvoker(),
			"tencentcloud_tat_invoker_records":                          dataSourceTencentCloudTatInvokerRecords(),
			"tencentcloud_tat_agent":                                    dataSourceTencentCloudTatAgent(),
			"tencentcloud_tat_invocation_task":                          dataSourceTencentCloudTatInvocationTask(),
			"tencentcloud_dbbrain_sql_filters":                          dbbrain.DataSourceTencentCloudDbbrainSqlFilters(),
			"tencentcloud_dbbrain_security_audit_log_export_tasks":      dbbrain.DataSourceTencentCloudDbbrainSecurityAuditLogExportTasks(),
			"tencentcloud_dbbrain_diag_event":                           dbbrain.DataSourceTencentCloudDbbrainDiagEvent(),
			"tencentcloud_dbbrain_diag_events":                          dbbrain.DataSourceTencentCloudDbbrainDiagEvents(),
			"tencentcloud_dbbrain_diag_history":                         dbbrain.DataSourceTencentCloudDbbrainDiagHistory(),
			"tencentcloud_dbbrain_security_audit_log_download_urls":     dbbrain.DataSourceTencentCloudDbbrainSecurityAuditLogDownloadUrls(),
			"tencentcloud_dbbrain_slow_log_time_series_stats":           dbbrain.DataSourceTencentCloudDbbrainSlowLogTimeSeriesStats(),
			"tencentcloud_dbbrain_slow_log_top_sqls":                    dbbrain.DataSourceTencentCloudDbbrainSlowLogTopSqls(),
			"tencentcloud_dbbrain_slow_log_user_host_stats":             dbbrain.DataSourceTencentCloudDbbrainSlowLogUserHostStats(),
			"tencentcloud_dbbrain_slow_log_user_sql_advice":             dbbrain.DataSourceTencentCloudDbbrainSlowLogUserSqlAdvice(),
			"tencentcloud_dbbrain_slow_logs":                            dbbrain.DataSourceTencentCloudDbbrainSlowLogs(),
			"tencentcloud_dbbrain_health_scores":                        dbbrain.DataSourceTencentCloudDbbrainHealthScores(),
			"tencentcloud_dbbrain_sql_templates":                        dbbrain.DataSourceTencentCloudDbbrainSqlTemplates(),
			"tencentcloud_dbbrain_db_space_status":                      dbbrain.DataSourceTencentCloudDbbrainDbSpaceStatus(),
			"tencentcloud_dbbrain_top_space_schemas":                    dbbrain.DataSourceTencentCloudDbbrainTopSpaceSchemas(),
			"tencentcloud_dbbrain_top_space_tables":                     dbbrain.DataSourceTencentCloudDbbrainTopSpaceTables(),
			"tencentcloud_dbbrain_top_space_schema_time_series":         dbbrain.DataSourceTencentCloudDbbrainTopSpaceSchemaTimeSeries(),
			"tencentcloud_dbbrain_top_space_table_time_series":          dbbrain.DataSourceTencentCloudDbbrainTopSpaceTableTimeSeries(),
			"tencentcloud_dbbrain_diag_db_instances":                    dbbrain.DataSourceTencentCloudDbbrainDiagDbInstances(),
			"tencentcloud_dbbrain_mysql_process_list":                   dbbrain.DataSourceTencentCloudDbbrainMysqlProcessList(),
			"tencentcloud_dbbrain_no_primary_key_tables":                dbbrain.DataSourceTencentCloudDbbrainNoPrimaryKeyTables(),
			"tencentcloud_dbbrain_redis_top_big_keys":                   dbbrain.DataSourceTencentCloudDbbrainRedisTopBigKeys(),
			"tencentcloud_dbbrain_redis_top_key_prefix_list":            dbbrain.DataSourceTencentCloudDbbrainRedisTopKeyPrefixList(),
			"tencentcloud_dts_sync_jobs":                                dts.DataSourceTencentCloudDtsSyncJobs(),
			"tencentcloud_dts_compare_tasks":                            dts.DataSourceTencentCloudDtsCompareTasks(),
			"tencentcloud_dts_migrate_jobs":                             dts.DataSourceTencentCloudDtsMigrateJobs(),
			"tencentcloud_dts_migrate_db_instances":                     dts.DataSourceTencentCloudDtsMigrateDbInstances(),
			"tencentcloud_tdmq_rocketmq_cluster":                        dataSourceTencentCloudTdmqRocketmqCluster(),
			"tencentcloud_tdmq_rocketmq_namespace":                      dataSourceTencentCloudTdmqRocketmqNamespace(),
			"tencentcloud_tdmq_rocketmq_topic":                          dataSourceTencentCloudTdmqRocketmqTopic(),
			"tencentcloud_tdmq_rocketmq_role":                           dataSourceTencentCloudTdmqRocketmqRole(),
			"tencentcloud_tdmq_rocketmq_group":                          dataSourceTencentCloudTdmqRocketmqGroup(),
			"tencentcloud_tdmq_environment_attributes":                  dataSourceTencentCloudTdmqEnvironmentAttributes(),
			"tencentcloud_tdmq_publisher_summary":                       dataSourceTencentCloudTdmqPublisherSummary(),
			"tencentcloud_tdmq_publishers":                              dataSourceTencentCloudTdmqPublishers(),
			"tencentcloud_tdmq_rabbitmq_node_list":                      dataSourceTencentCloudTdmqRabbitmqNodeList(),
			"tencentcloud_tdmq_rabbitmq_vip_instance":                   dataSourceTencentCloudTdmqRabbitmqVipInstance(),
			"tencentcloud_tdmq_vip_instance":                            dataSourceTencentCloudTdmqVipInstance(),
			"tencentcloud_tdmq_rocketmq_messages":                       dataSourceTencentCloudTdmqRocketmqMessages(),
			"tencentcloud_tdmq_pro_instances":                           dataSourceTencentCloudTdmqProInstances(),
			"tencentcloud_tdmq_pro_instance_detail":                     dataSourceTencentCloudTdmqProInstanceDetail(),
			"tencentcloud_tcmq_queue":                                   dataSourceTencentCloudTcmqQueue(),
			"tencentcloud_tcmq_topic":                                   dataSourceTencentCloudTcmqTopic(),
			"tencentcloud_tcmq_subscribe":                               dataSourceTencentCloudTcmqSubscribe(),
			"tencentcloud_as_instances":                                 as.DataSourceTencentCloudAsInstances(),
			"tencentcloud_as_advices":                                   as.DataSourceTencentCloudAsAdvices(),
			"tencentcloud_as_limits":                                    as.DataSourceTencentCloudAsLimits(),
			"tencentcloud_as_last_activity":                             as.DataSourceTencentCloudAsLastActivity(),
			"tencentcloud_cynosdb_accounts":                             cynosdb.DataSourceTencentCloudCynosdbAccounts(),
			"tencentcloud_cynosdb_cluster_instance_groups":              cynosdb.DataSourceTencentCloudCynosdbClusterInstanceGroups(),
			"tencentcloud_cynosdb_cluster_params":                       cynosdb.DataSourceTencentCloudCynosdbClusterParams(),
			"tencentcloud_cynosdb_param_templates":                      cynosdb.DataSourceTencentCloudCynosdbParamTemplates(),
			"tencentcloud_cynosdb_zone":                                 cynosdb.DataSourceTencentCloudCynosdbZone(),
			"tencentcloud_cvm_instances_modification":                   cvm.DataSourceTencentCloudCvmInstancesModification(),
			"tencentcloud_cynosdb_audit_logs":                           cynosdb.DataSourceTencentCloudCynosdbAuditLogs(),
			"tencentcloud_cynosdb_backup_download_url":                  cynosdb.DataSourceTencentCloudCynosdbBackupDownloadUrl(),
			"tencentcloud_cynosdb_binlog_download_url":                  cynosdb.DataSourceTencentCloudCynosdbBinlogDownloadUrl(),
			"tencentcloud_cynosdb_cluster_detail_databases":             cynosdb.DataSourceTencentCloudCynosdbClusterDetailDatabases(),
			"tencentcloud_cynosdb_cluster_param_logs":                   cynosdb.DataSourceTencentCloudCynosdbClusterParamLogs(),
			"tencentcloud_cynosdb_cluster":                              cynosdb.DataSourceTencentCloudCynosdbCluster(),
			"tencentcloud_cynosdb_describe_instance_slow_queries":       cynosdb.DataSourceTencentCloudCynosdbDescribeInstanceSlowQueries(),
			"tencentcloud_cynosdb_describe_instance_error_logs":         cynosdb.DataSourceTencentCloudCynosdbDescribeInstanceErrorLogs(),
			"tencentcloud_cynosdb_account_all_grant_privileges":         cynosdb.DataSourceTencentCloudCynosdbAccountAllGrantPrivileges(),
			"tencentcloud_cynosdb_resource_package_list":                cynosdb.DataSourceTencentCloudCynosdbResourcePackageList(),
			"tencentcloud_cynosdb_project_security_groups":              cynosdb.DataSourceTencentCloudCynosdbProjectSecurityGroups(),
			"tencentcloud_cynosdb_resource_package_sale_specs":          cynosdb.DataSourceTencentCloudCynosdbResourcePackageSaleSpecs(),
			"tencentcloud_cynosdb_rollback_time_range":                  cynosdb.DataSourceTencentCloudCynosdbRollbackTimeRange(),
			"tencentcloud_cynosdb_proxy_node":                           cynosdb.DataSourceTencentCloudCynosdbProxyNode(),
			"tencentcloud_cynosdb_proxy_version":                        cynosdb.DataSourceTencentCloudCynosdbProxyVersion(),
			"tencentcloud_css_domains":                                  css.DataSourceTencentCloudCssDomains(),
			"tencentcloud_css_backup_stream":                            css.DataSourceTencentCloudCssBackupStream(),
			"tencentcloud_css_deliver_log_down_list":                    css.DataSourceTencentCloudCssDeliverLogDownList(),
			"tencentcloud_css_monitor_report":                           css.DataSourceTencentCloudCssMonitorReport(),
			"tencentcloud_css_pad_templates":                            css.DataSourceTencentCloudCssPadTemplates(),
			"tencentcloud_css_pull_stream_task_status":                  css.DataSourceTencentCloudCssPullStreamTaskStatus(),
			"tencentcloud_css_stream_monitor_list":                      css.DataSourceTencentCloudCssStreamMonitorList(),
			"tencentcloud_css_time_shift_record_detail":                 css.DataSourceTencentCloudCssTimeShiftRecordDetail(),
			"tencentcloud_css_time_shift_stream_list":                   css.DataSourceTencentCloudCssTimeShiftStreamList(),
			"tencentcloud_css_watermarks":                               css.DataSourceTencentCloudCssWatermarks(),
			"tencentcloud_css_xp2p_detail_info_list":                    css.DataSourceTencentCloudCssXp2pDetailInfoList(),
			"tencentcloud_chdfs_access_groups":                          chdfs.DataSourceTencentCloudChdfsAccessGroups(),
			"tencentcloud_chdfs_mount_points":                           chdfs.DataSourceTencentCloudChdfsMountPoints(),
			"tencentcloud_chdfs_file_systems":                           chdfs.DataSourceTencentCloudChdfsFileSystems(),
			"tencentcloud_tcm_mesh":                                     dataSourceTencentCloudTcmMesh(),
			"tencentcloud_lighthouse_firewall_rules_template":           lighthouse.DataSourceTencentCloudLighthouseFirewallRulesTemplate(),
			"tencentcloud_cvm_instance_vnc_url":                         cvm.DataSourceTencentCloudCvmInstanceVncUrl(),
			"tencentcloud_cvm_disaster_recover_group_quota":             cvm.DataSourceTencentCloudCvmDisasterRecoverGroupQuota(),
			"tencentcloud_cvm_chc_hosts":                                cvm.DataSourceTencentCloudCvmChcHosts(),
			"tencentcloud_cvm_chc_denied_actions":                       cvm.DataSourceTencentCloudCvmChcDeniedActions(),
			"tencentcloud_cvm_image_quota":                              cvm.DataSourceTencentCloudCvmImageQuota(),
			"tencentcloud_cvm_import_image_os":                          cvm.DataSourceTencentCloudCvmImportImageOs(),
			"tencentcloud_tsf_application":                              dataSourceTencentCloudTsfApplication(),
			"tencentcloud_tsf_application_config":                       dataSourceTencentCloudTsfApplicationConfig(),
			"tencentcloud_tsf_application_file_config":                  dataSourceTencentCloudTsfApplicationFileConfig(),
			"tencentcloud_tsf_application_public_config":                dataSourceTencentCloudTsfApplicationPublicConfig(),
			"tencentcloud_cvm_image_share_permission":                   cvm.DataSourceTencentCloudCvmImageSharePermission(),
			"tencentcloud_tsf_cluster":                                  dataSourceTencentCloudTsfCluster(),
			"tencentcloud_tsf_microservice":                             dataSourceTencentCloudTsfMicroservice(),
			"tencentcloud_tsf_unit_rules":                               dataSourceTencentCloudTsfUnitRules(),
			"tencentcloud_tsf_config_summary":                           dataSourceTencentCloudTsfConfigSummary(),
			"tencentcloud_tsf_delivery_config_by_group_id":              dataSourceTencentCloudTsfDeliveryConfigByGroupId(),
			"tencentcloud_tsf_delivery_configs":                         dataSourceTencentCloudTsfDeliveryConfigs(),
			"tencentcloud_tsf_public_config_summary":                    dataSourceTencentCloudTsfPublicConfigSummary(),
			"tencentcloud_tsf_api_group":                                dataSourceTencentCloudTsfApiGroup(),
			"tencentcloud_tsf_application_attribute":                    dataSourceTencentCloudTsfApplicationAttribute(),
			"tencentcloud_tsf_business_log_configs":                     dataSourceTencentCloudTsfBusinessLogConfigs(),
			"tencentcloud_tsf_api_detail":                               dataSourceTencentCloudTsfApiDetail(),
			"tencentcloud_tsf_microservice_api_version":                 dataSourceTencentCloudTsfMicroserviceApiVersion(),
			"tencentcloud_tsf_repository":                               dataSourceTencentCloudTsfRepository(),
			"tencentcloud_tsf_pod_instances":                            dataSourceTencentCloudTsfPodInstances(),
			"tencentcloud_tsf_gateway_all_group_apis":                   dataSourceTencentCloudTsfGatewayAllGroupApis(),
			"tencentcloud_tsf_group_gateways":                           dataSourceTencentCloudTsfGroupGateways(),
			"tencentcloud_tsf_usable_unit_namespaces":                   dataSourceTencentCloudTsfUsableUnitNamespaces(),
			"tencentcloud_tsf_group_instances":                          dataSourceTencentCloudTsfGroupInstances(),
			"tencentcloud_tsf_group_config_release":                     dataSourceTencentCloudTsfGroupConfigRelease(),
			"tencentcloud_tsf_container_group":                          dataSourceTencentCloudTsfContainerGroup(),
			"tencentcloud_tsf_groups":                                   dataSourceTencentCloudTsfGroups(),
			"tencentcloud_tsf_ms_api_list":                              dataSourceTencentCloudTsfMsApiList(),
			"tencentcloud_lighthouse_bundle":                            lighthouse.DataSourceTencentCloudLighthouseBundle(),
			"tencentcloud_api_gateway_api_docs":                         apigateway.DataSourceTencentCloudAPIGatewayAPIDocs(),
			"tencentcloud_api_gateway_api_apps":                         apigateway.DataSourceTencentCloudAPIGatewayAPIApps(),
			"tencentcloud_tse_access_address":                           dataSourceTencentCloudTseAccessAddress(),
			"tencentcloud_tse_nacos_replicas":                           dataSourceTencentCloudTseNacosReplicas(),
			"tencentcloud_tse_nacos_server_interfaces":                  dataSourceTencentCloudTseNacosServerInterfaces(),
			"tencentcloud_tse_zookeeper_replicas":                       dataSourceTencentCloudTseZookeeperReplicas(),
			"tencentcloud_tse_zookeeper_server_interfaces":              dataSourceTencentCloudTseZookeeperServerInterfaces(),
			"tencentcloud_tse_groups":                                   dataSourceTencentCloudTseGroups(),
			"tencentcloud_tse_gateways":                                 dataSourceTencentCloudTseGateways(),
			"tencentcloud_tse_gateway_nodes":                            dataSourceTencentCloudTseGatewayNodes(),
			"tencentcloud_tse_gateway_routes":                           dataSourceTencentCloudTseGatewayRoutes(),
			"tencentcloud_tse_gateway_canary_rules":                     dataSourceTencentCloudTseGatewayCanaryRules(),
			"tencentcloud_tse_gateway_services":                         dataSourceTencentCloudTseGatewayServices(),
			"tencentcloud_tse_gateway_certificates":                     dataSourceTencentCloudTseGatewayCertificates(),
			"tencentcloud_lighthouse_modify_instance_bundle":            lighthouse.DataSourceTencentCloudLighthouseModifyInstanceBundle(),
			"tencentcloud_lighthouse_zone":                              lighthouse.DataSourceTencentCloudLighthouseZone(),
			"tencentcloud_lighthouse_scene":                             lighthouse.DataSourceTencentCloudLighthouseScene(),
			"tencentcloud_lighthouse_all_scene":                         lighthouse.DataSourceTencentCloudLighthouseAllScene(),
			"tencentcloud_lighthouse_reset_instance_blueprint":          lighthouse.DataSourceTencentCloudLighthouseResetInstanceBlueprint(),
			"tencentcloud_lighthouse_region":                            lighthouse.DataSourceTencentCloudLighthouseRegion(),
			"tencentcloud_lighthouse_instance_vnc_url":                  lighthouse.DataSourceTencentCloudLighthouseInstanceVncUrl(),
			"tencentcloud_lighthouse_instance_traffic_package":          lighthouse.DataSourceTencentCloudLighthouseInstanceTrafficPackage(),
			"tencentcloud_lighthouse_instance_disk_num":                 lighthouse.DataSourceTencentCloudLighthouseInstanceDiskNum(),
			"tencentcloud_lighthouse_instance_blueprint":                lighthouse.DataSourceTencentCloudLighthouseInstanceBlueprint(),
			"tencentcloud_lighthouse_disk_config":                       lighthouse.DataSourceTencentCloudLighthouseDiskConfig(),
			"tencentcloud_lighthouse_disks":                             lighthouse.DataSourceTencentCloudLighthouseInstanceDisks(),
			"tencentcloud_clickhouse_backup_jobs":                       cdwch.DataSourceTencentCloudClickhouseBackupJobs(),
			"tencentcloud_clickhouse_backup_job_detail":                 cdwch.DataSourceTencentCloudClickhouseBackupJobDetail(),
			"tencentcloud_clickhouse_backup_tables":                     cdwch.DataSourceTencentCloudClickhouseBackupTables(),
			"tencentcloud_cls_shipper_tasks":                            cls.DataSourceTencentCloudClsShipperTasks(),
			"tencentcloud_cls_machines":                                 cls.DataSourceTencentCloudClsMachines(),
			"tencentcloud_cls_machine_group_configs":                    cls.DataSourceTencentCloudClsMachineGroupConfigs(),
			"tencentcloud_eb_search":                                    eb.DataSourceTencentCloudEbSearch(),
			"tencentcloud_eb_bus":                                       eb.DataSourceTencentCloudEbBus(),
			"tencentcloud_eb_event_rules":                               eb.DataSourceTencentCloudEbEventRules(),
			"tencentcloud_eb_platform_event_names":                      eb.DataSourceTencentCloudEbPlatformEventNames(),
			"tencentcloud_eb_platform_event_patterns":                   eb.DataSourceTencentCloudEbPlatformEventPatterns(),
			"tencentcloud_eb_platform_products":                         eb.DataSourceTencentCloudEbPlatformProducts(),
			"tencentcloud_eb_plateform_event_template":                  eb.DataSourceTencentCloudEbPlateformEventTemplate(),
			"tencentcloud_wedata_rule_templates":                        dataSourceTencentCloudWedataRuleTemplates(),
			"tencentcloud_wedata_data_source_list":                      dataSourceTencentCloudWedataDataSourceList(),
			"tencentcloud_wedata_data_source_without_info":              dataSourceTencentCloudWedataDataSourceWithoutInfo(),
			"tencentcloud_private_dns_records":                          privatedns.DataSourceTencentCloudPrivateDnsRecords(),
			"tencentcloud_waf_ciphers":                                  dataSourceTencentCloudWafCiphers(),
			"tencentcloud_waf_tls_versions":                             dataSourceTencentCloudWafTlsVersions(),
			"tencentcloud_waf_domains":                                  dataSourceTencentCloudWafDomains(),
			"tencentcloud_waf_find_domains":                             dataSourceTencentCloudWafFindDomains(),
			"tencentcloud_waf_waf_infos":                                dataSourceTencentCloudWafWafInfos(),
			"tencentcloud_waf_ports":                                    dataSourceTencentCloudWafPorts(),
			"tencentcloud_waf_user_domains":                             dataSourceTencentCloudWafUserDomains(),
			"tencentcloud_waf_attack_log_histogram":                     dataSourceTencentCloudWafAttackLogHistogram(),
			"tencentcloud_waf_attack_log_list":                          dataSourceTencentCloudWafAttackLogList(),
			"tencentcloud_waf_attack_overview":                          dataSourceTencentCloudWafAttackOverview(),
			"tencentcloud_waf_attack_total_count":                       dataSourceTencentCloudWafAttackTotalCount(),
			"tencentcloud_waf_peak_points":                              dataSourceTencentCloudWafPeakPoints(),
			"tencentcloud_waf_instance_qps_limit":                       dataSourceTencentCloudWafInstanceQpsLimit(),
			"tencentcloud_waf_user_clb_regions":                         dataSourceTencentCloudWafUserClbRegions(),
			"tencentcloud_cfw_nat_fw_switches":                          cfw.DataSourceTencentCloudCfwNatFwSwitches(),
			"tencentcloud_cfw_vpc_fw_switches":                          cfw.DataSourceTencentCloudCfwVpcFwSwitches(),
			"tencentcloud_cfw_edge_fw_switches":                         cfw.DataSourceTencentCloudCfwEdgeFwSwitches(),
			"tencentcloud_cwp_machines_simple":                          cwp.DataSourceTencentCloudCwpMachinesSimple(),
			"tencentcloud_ses_receivers":                                dataSourceTencentCloudSesReceivers(),
			"tencentcloud_ses_send_tasks":                               dataSourceTencentCloudSesSendTasks(),
			"tencentcloud_ses_email_identities":                         dataSourceTencentCloudSesEmailIdentities(),
			"tencentcloud_ses_black_email_address":                      dataSourceTencentCloudSesBlackEmailAddress(),
			"tencentcloud_ses_statistics_report":                        dataSourceTencentCloudSesStatisticsReport(),
			"tencentcloud_ses_send_email_status":                        dataSourceTencentCloudSesSendEmailStatus(),
			"tencentcloud_organization_org_financial_by_member":         dataSourceTencentCloudOrganizationOrgFinancialByMember(),
			"tencentcloud_organization_org_financial_by_month":          dataSourceTencentCloudOrganizationOrgFinancialByMonth(),
			"tencentcloud_organization_org_financial_by_product":        dataSourceTencentCloudOrganizationOrgFinancialByProduct(),
			"tencentcloud_organization_org_auth_node":                   dataSourceTencentCloudOrganizationOrgAuthNode(),
			"tencentcloud_organization_members":                         dataSourceTencentCloudOrganizationMembers(),
			"tencentcloud_pts_scenario_with_jobs":                       pts.DataSourceTencentCloudPtsScenarioWithJobs(),
			"tencentcloud_cam_list_attached_user_policy":                dataSourceTencentCloudCamListAttachedUserPolicy(),
			"tencentcloud_cam_secret_last_used_time":                    cam.DataSourceTencentCloudCamSecretLastUsedTime(),
			"tencentcloud_cam_policy_granting_service_access":           cam.DataSourceTencentCloudCamPolicyGrantingServiceAccess(),
			"tencentcloud_cam_group_user_account":                       cam.DataSourceTencentCloudCamGroupUserAccount(),
			"tencentcloud_dlc_check_data_engine_image_can_be_rollback":  dlc.DataSourceTencentCloudDlcCheckDataEngineImageCanBeRollback(),
			"tencentcloud_dlc_check_data_engine_image_can_be_upgrade":   dlc.DataSourceTencentCloudDlcCheckDataEngineImageCanBeUpgrade(),
			"tencentcloud_dlc_describe_user_type":                       dlc.DataSourceTencentCloudDlcDescribeUserType(),
			"tencentcloud_dlc_describe_user_info":                       dlc.DataSourceTencentCloudDlcDescribeUserInfo(),
			"tencentcloud_dlc_describe_user_roles":                      dlc.DataSourceTencentCloudDlcDescribeUserRoles(),
			"tencentcloud_dlc_describe_data_engine":                     dlc.DataSourceTencentCloudDlcDescribeDataEngine(),
			"tencentcloud_dlc_describe_data_engine_image_versions":      dlc.DataSourceTencentCloudDlcDescribeDataEngineImageVersions(),
			"tencentcloud_dlc_describe_data_engine_python_spark_images": dlc.DataSourceTencentCloudDlcDescribeDataEnginePythonSparkImages(),
			"tencentcloud_dlc_describe_engine_usage_info":               dlc.DataSourceTencentCloudDlcDescribeEngineUsageInfo(),
			"tencentcloud_dlc_describe_work_group_info":                 dlc.DataSourceTencentCloudDlcDescribeWorkGroupInfo(),
			"tencentcloud_dlc_check_data_engine_config_pairs_validity":  dlc.DataSourceTencentCloudDlcCheckDataEngineConfigPairsValidity(),
			"tencentcloud_dlc_describe_updatable_data_engines":          dlc.DataSourceTencentCloudDlcDescribeUpdatableDataEngines(),
			"tencentcloud_dlc_describe_data_engine_events":              dlc.DataSourceTencentCloudDlcDescribeDataEngineEvents(),
			"tencentcloud_bi_project":                                   bi.DataSourceTencentCloudBiProject(),
			"tencentcloud_bi_user_project":                              bi.DataSourceTencentCloudBiUserProject(),
			"tencentcloud_antiddos_basic_device_status":                 antiddos.DataSourceTencentCloudAntiddosBasicDeviceStatus(),
			"tencentcloud_antiddos_bgp_biz_trend":                       antiddos.DataSourceTencentCloudAntiddosBgpBizTrend(),
			"tencentcloud_antiddos_list_listener":                       antiddos.DataSourceTencentCloudAntiddosListListener(),
			"tencentcloud_antiddos_overview_attack_trend":               antiddos.DataSourceTencentCloudAntiddosOverviewAttackTrend(),
			"tencentcloud_kubernetes_cluster_instances":                 dataSourceTencentCloudKubernetesClusterInstances(),
			"tencentcloud_kubernetes_cluster_node_pools":                dataSourceTencentCloudKubernetesClusterNodePools(),
			"tencentcloud_clickhouse_spec":                              cdwch.DataSourceTencentCloudClickhouseSpec(),
			"tencentcloud_clickhouse_instance_shards":                   cdwch.DataSourceTencentCloudClickhouseInstanceShards(),
		},

		ResourcesMap: map[string]*schema.Resource{
			"tencentcloud_project":                                             project.ResourceTencentCloudProject(),
			"tencentcloud_emr_cluster":                                         emr.ResourceTencentCloudEmrCluster(),
			"tencentcloud_emr_user_manager":                                    emr.ResourceTencentCloudEmrUserManager(),
			"tencentcloud_instance":                                            cvm.ResourceTencentCloudInstance(),
			"tencentcloud_instance_set":                                        cvm.ResourceTencentCloudInstanceSet(),
			"tencentcloud_reserved_instance":                                   cvm.ResourceTencentCloudReservedInstance(),
			"tencentcloud_key_pair":                                            cvm.ResourceTencentCloudKeyPair(),
			"tencentcloud_placement_group":                                     cvm.ResourceTencentCloudPlacementGroup(),
			"tencentcloud_cbs_snapshot":                                        cbs.ResourceTencentCloudCbsSnapshot(),
			"tencentcloud_cbs_snapshot_policy":                                 cbs.ResourceTencentCloudCbsSnapshotPolicy(),
			"tencentcloud_cbs_storage":                                         cbs.ResourceTencentCloudCbsStorage(),
			"tencentcloud_cbs_storage_set":                                     cbs.ResourceTencentCloudCbsStorageSet(),
			"tencentcloud_cbs_storage_attachment":                              cbs.ResourceTencentCloudCbsStorageAttachment(),
			"tencentcloud_cbs_storage_set_attachment":                          cbs.ResourceTencentCloudCbsStorageSetAttachment(),
			"tencentcloud_cbs_snapshot_policy_attachment":                      cbs.ResourceTencentCloudCbsSnapshotPolicyAttachment(),
			"tencentcloud_vpc":                                                 resourceTencentCloudVpcInstance(),
			"tencentcloud_vpc_acl":                                             resourceTencentCloudVpcACL(),
			"tencentcloud_vpc_acl_attachment":                                  resourceTencentCloudVpcAclAttachment(),
			"tencentcloud_vpc_network_acl_quintuple":                           resourceTencentCloudVpcNetworkAclQuintuple(),
			"tencentcloud_vpc_notify_routes":                                   resourceTencentCloudVpcNotifyRoutes(),
			"tencentcloud_vpc_bandwidth_package":                               resourceTencentCloudVpcBandwidthPackage(),
			"tencentcloud_vpc_bandwidth_package_attachment":                    resourceTencentCloudVpcBandwidthPackageAttachment(),
			"tencentcloud_vpc_traffic_package":                                 resourceTencentCloudVpcTrafficPackage(),
			"tencentcloud_vpc_snapshot_policy":                                 resourceTencentCloudVpcSnapshotPolicy(),
			"tencentcloud_vpc_snapshot_policy_attachment":                      resourceTencentCloudVpcSnapshotPolicyAttachment(),
			"tencentcloud_vpc_snapshot_policy_config":                          resourceTencentCloudVpcSnapshotPolicyConfig(),
			"tencentcloud_vpc_net_detect":                                      resourceTencentCloudVpcNetDetect(),
			"tencentcloud_vpc_flow_log_config":                                 fl.ResourceTencentCloudVpcFlowLogConfig(),
			"tencentcloud_vpc_classic_link_attachment":                         resourceTencentCloudVpcClassicLinkAttachment(),
			"tencentcloud_vpc_dhcp_ip":                                         resourceTencentCloudVpcDhcpIp(),
			"tencentcloud_vpc_ipv6_cidr_block":                                 resourceTencentCloudVpcIpv6CidrBlock(),
			"tencentcloud_vpc_ipv6_subnet_cidr_block":                          resourceTencentCloudVpcIpv6SubnetCidrBlock(),
			"tencentcloud_vpc_ipv6_eni_address":                                resourceTencentCloudVpcIpv6EniAddress(),
			"tencentcloud_vpc_dhcp_associate_address":                          resourceTencentCloudVpcDhcpAssociateAddress(),
			"tencentcloud_vpc_local_gateway":                                   resourceTencentCloudVpcLocalGateway(),
			"tencentcloud_vpc_resume_snapshot_instance":                        resourceTencentCloudVpcResumeSnapshotInstance(),
			"tencentcloud_ipv6_address_bandwidth":                              resourceTencentCloudIpv6AddressBandwidth(),
			"tencentcloud_subnet":                                              resourceTencentCloudVpcSubnet(),
			"tencentcloud_route_entry":                                         resourceTencentCloudRouteEntry(),
			"tencentcloud_route_table_entry":                                   resourceTencentCloudVpcRouteEntry(),
			"tencentcloud_route_table":                                         resourceTencentCloudVpcRouteTable(),
			"tencentcloud_route_table_association":                             resourceTencentCloudRouteTableAssociation(),
			"tencentcloud_dnat":                                                resourceTencentCloudDnat(),
			"tencentcloud_nat_gateway":                                         resourceTencentCloudNatGateway(),
			"tencentcloud_nat_gateway_snat":                                    resourceTencentCloudNatGatewaySnat(),
			"tencentcloud_nat_refresh_nat_dc_route":                            resourceTencentCloudNatRefreshNatDcRoute(),
			"tencentcloud_oceanus_job":                                         oceanus.ResourceTencentCloudOceanusJob(),
			"tencentcloud_oceanus_job_config":                                  oceanus.ResourceTencentCloudOceanusJobConfig(),
			"tencentcloud_oceanus_job_copy":                                    oceanus.ResourceTencentCloudOceanusJobCopy(),
			"tencentcloud_oceanus_run_job":                                     oceanus.ResourceTencentCloudOceanusRunJob(),
			"tencentcloud_oceanus_stop_job":                                    oceanus.ResourceTencentCloudOceanusStopJob(),
			"tencentcloud_oceanus_trigger_job_savepoint":                       oceanus.ResourceTencentCloudOceanusTriggerJobSavepoint(),
			"tencentcloud_oceanus_resource":                                    oceanus.ResourceTencentCloudOceanusResource(),
			"tencentcloud_oceanus_resource_config":                             oceanus.ResourceTencentCloudOceanusResourceConfig(),
			"tencentcloud_oceanus_work_space":                                  oceanus.ResourceTencentCloudOceanusWorkSpace(),
			"tencentcloud_oceanus_folder":                                      oceanus.ResourceTencentCloudOceanusFolder(),
			"tencentcloud_tag":                                                 resourceTencentCloudTag(),
			"tencentcloud_tag_attachment":                                      resourceTencentCloudTagAttachment(),
			"tencentcloud_eip":                                                 cvm.ResourceTencentCloudEip(),
			"tencentcloud_eip_association":                                     cvm.ResourceTencentCloudEipAssociation(),
			"tencentcloud_eip_address_transform":                               cvm.ResourceTencentCloudEipAddressTransform(),
			"tencentcloud_eip_public_address_adjust":                           cvm.ResourceTencentCloudEipPublicAddressAdjust(),
			"tencentcloud_eip_normal_address_return":                           cvm.ResourceTencentCloudEipNormalAddressReturn(),
			"tencentcloud_eni":                                                 resourceTencentCloudEni(),
			"tencentcloud_eni_attachment":                                      resourceTencentCloudEniAttachment(),
			"tencentcloud_eni_sg_attachment":                                   resourceTencentCloudEniSgAttachment(),
			"tencentcloud_ccn":                                                 ccn.ResourceTencentCloudCcn(),
			"tencentcloud_ccn_attachment":                                      ccn.ResourceTencentCloudCcnAttachment(),
			"tencentcloud_ccn_bandwidth_limit":                                 ccn.ResourceTencentCloudCcnBandwidthLimit(),
			"tencentcloud_ccn_routes":                                          ccn.ResourceTencentCloudCcnRoutes(),
			"tencentcloud_ccn_instances_accept_attach":                         ccn.ResourceTencentCloudCcnInstancesAcceptAttach(),
			"tencentcloud_ccn_instances_reject_attach":                         ccn.ResourceTencentCloudCcnInstancesRejectAttach(),
			"tencentcloud_ccn_instances_reset_attach":                          ccn.ResourceTencentCloudCcnInstancesResetAttach(),
			"tencentcloud_dc_instance":                                         dc.ResourceTencentCloudDcInstance(),
			"tencentcloud_dcx":                                                 dc.ResourceTencentCloudDcxInstance(),
			"tencentcloud_dcx_extra_config":                                    dc.ResourceTencentCloudDcxExtraConfig(),
			"tencentcloud_dc_share_dcx_config":                                 dc.ResourceTencentCloudDcShareDcxConfig(),
			"tencentcloud_dc_internet_address":                                 dc.ResourceTencentCloudDcInternetAddress(),
			"tencentcloud_dc_internet_address_config":                          dc.ResourceTencentCloudDcInternetAddressConfig(),
			"tencentcloud_dc_gateway":                                          dcg.ResourceTencentCloudDcGatewayInstance(),
			"tencentcloud_dc_gateway_ccn_route":                                dcg.ResourceTencentCloudDcGatewayCcnRouteInstance(),
			"tencentcloud_dc_gateway_attachment":                               dcg.ResourceTencentCloudDcGatewayAttachment(),
			"tencentcloud_vpn_customer_gateway":                                resourceTencentCloudVpnCustomerGateway(),
			"tencentcloud_vpn_gateway":                                         resourceTencentCloudVpnGateway(),
			"tencentcloud_vpn_gateway_route":                                   resourceTencentCloudVpnGatewayRoute(),
			"tencentcloud_vpn_connection":                                      resourceTencentCloudVpnConnection(),
			"tencentcloud_vpn_ssl_server":                                      resourceTencentCloudVpnSslServer(),
			"tencentcloud_vpn_ssl_client":                                      resourceTencentCloudVpnSslClient(),
			"tencentcloud_vpn_connection_reset":                                resourceTencentCloudVpnConnectionReset(),
			"tencentcloud_vpn_customer_gateway_configuration_download":         resourceTencentCloudVpnCustomerGatewayConfigurationDownload(),
			"tencentcloud_vpn_gateway_ssl_client_cert":                         resourceTencentCloudVpnGatewaySslClientCert(),
			"tencentcloud_vpn_gateway_ccn_routes":                              resourceTencentCloudVpnGatewayCcnRoutes(),
			"tencentcloud_ha_vip":                                              resourceTencentCloudHaVip(),
			"tencentcloud_ha_vip_eip_attachment":                               resourceTencentCloudHaVipEipAttachment(),
			"tencentcloud_security_group":                                      resourceTencentCloudSecurityGroup(),
			"tencentcloud_security_group_rule":                                 resourceTencentCloudSecurityGroupRule(),
			"tencentcloud_security_group_rule_set":                             resourceTencentCloudSecurityGroupRuleSet(),
			"tencentcloud_security_group_lite_rule":                            resourceTencentCloudSecurityGroupLiteRule(),
			"tencentcloud_lb":                                                  clb.ResourceTencentCloudLB(),
			"tencentcloud_alb_server_attachment":                               clb.ResourceTencentCloudAlbServerAttachment(),
			"tencentcloud_clb_instance":                                        clb.ResourceTencentCloudClbInstance(),
			"tencentcloud_clb_listener":                                        clb.ResourceTencentCloudClbListener(),
			"tencentcloud_clb_listener_rule":                                   clb.ResourceTencentCloudClbListenerRule(),
			"tencentcloud_clb_attachment":                                      clb.ResourceTencentCloudClbServerAttachment(),
			"tencentcloud_clb_redirection":                                     clb.ResourceTencentCloudClbRedirection(),
			"tencentcloud_clb_target_group":                                    clb.ResourceTencentCloudClbTargetGroup(),
			"tencentcloud_clb_target_group_instance_attachment":                clb.ResourceTencentCloudClbTGAttachmentInstance(),
			"tencentcloud_clb_target_group_attachment":                         clb.ResourceTencentCloudClbTargetGroupAttachment(),
			"tencentcloud_clb_log_set":                                         clb.ResourceTencentCloudClbLogSet(),
			"tencentcloud_clb_log_topic":                                       clb.ResourceTencentCloudClbLogTopic(),
			"tencentcloud_clb_customized_config":                               clb.ResourceTencentCloudClbCustomizedConfig(),
			"tencentcloud_clb_snat_ip":                                         clb.ResourceTencentCloudClbSnatIp(),
			"tencentcloud_clb_function_targets_attachment":                     clb.ResourceTencentCloudClbFunctionTargetsAttachment(),
			"tencentcloud_clb_instance_mix_ip_target_config":                   clb.ResourceTencentCloudClbInstanceMixIpTargetConfig(),
			"tencentcloud_clb_instance_sla_config":                             clb.ResourceTencentCloudClbInstanceSlaConfig(),
			"tencentcloud_clb_replace_cert_for_lbs":                            clb.ResourceTencentCloudClbReplaceCertForLbs(),
			"tencentcloud_clb_security_group_attachment":                       clb.ResourceTencentCloudClbSecurityGroupAttachment(),
			"tencentcloud_container_cluster":                                   resourceTencentCloudContainerCluster(),
			"tencentcloud_container_cluster_instance":                          resourceTencentCloudContainerClusterInstance(),
			"tencentcloud_kubernetes_cluster":                                  resourceTencentCloudTkeCluster(),
			"tencentcloud_kubernetes_cluster_endpoint":                         resourceTencentCloudTkeClusterEndpoint(),
			"tencentcloud_eks_cluster":                                         resourceTencentCloudEksCluster(),
			"tencentcloud_eks_container_instance":                              resourceTencentCloudEksContainerInstance(),
			"tencentcloud_kubernetes_addon_attachment":                         resourceTencentCloudTkeAddonAttachment(),
			"tencentcloud_kubernetes_auth_attachment":                          resourceTencentCloudTKEAuthAttachment(),
			"tencentcloud_kubernetes_as_scaling_group":                         resourceTencentCloudKubernetesAsScalingGroup(),
			"tencentcloud_kubernetes_scale_worker":                             resourceTencentCloudTkeScaleWorker(),
			"tencentcloud_kubernetes_cluster_attachment":                       resourceTencentCloudTkeClusterAttachment(),
			"tencentcloud_kubernetes_node_pool":                                resourceTencentCloudKubernetesNodePool(),
			"tencentcloud_kubernetes_serverless_node_pool":                     resourceTkeServerLessNodePool(),
			"tencentcloud_kubernetes_backup_storage_location":                  resourceTencentCloudTkeBackupStorageLocation(),
			"tencentcloud_kubernetes_encryption_protection":                    resourceTencentCloudKubernetesEncryptionProtection(),
			"tencentcloud_mysql_backup_policy":                                 cdb.ResourceTencentCloudMysqlBackupPolicy(),
			"tencentcloud_mysql_account":                                       cdb.ResourceTencentCloudMysqlAccount(),
			"tencentcloud_mysql_account_privilege":                             cdb.ResourceTencentCloudMysqlAccountPrivilege(),
			"tencentcloud_mysql_privilege":                                     cdb.ResourceTencentCloudMysqlPrivilege(),
			"tencentcloud_mysql_instance":                                      cdb.ResourceTencentCloudMysqlInstance(),
			"tencentcloud_mysql_database":                                      cdb.ResourceTencentCloudMysqlDatabase(),
			"tencentcloud_mysql_readonly_instance":                             cdb.ResourceTencentCloudMysqlReadonlyInstance(),
			"tencentcloud_mysql_time_window":                                   cdb.ResourceTencentCloudMysqlTimeWindow(),
			"tencentcloud_mysql_param_template":                                cdb.ResourceTencentCloudMysqlParamTemplate(),
			"tencentcloud_mysql_security_groups_attachment":                    cdb.ResourceTencentCloudMysqlSecurityGroupsAttachment(),
			"tencentcloud_mysql_deploy_group":                                  cdb.ResourceTencentCloudMysqlDeployGroup(),
			"tencentcloud_mysql_local_binlog_config":                           cdb.ResourceTencentCloudMysqlLocalBinlogConfig(),
			"tencentcloud_mysql_audit_log_file":                                cdb.ResourceTencentCloudMysqlAuditLogFile(),
			"tencentcloud_mysql_backup_download_restriction":                   cdb.ResourceTencentCloudMysqlBackupDownloadRestriction(),
			"tencentcloud_mysql_renew_db_instance_operation":                   cdb.ResourceTencentCloudMysqlRenewDbInstanceOperation(),
			"tencentcloud_mysql_backup_encryption_status":                      cdb.ResourceTencentCloudMysqlBackupEncryptionStatus(),
			"tencentcloud_mysql_db_import_job_operation":                       cdb.ResourceTencentCloudMysqlDbImportJobOperation(),
			"tencentcloud_mysql_dr_instance_to_mater":                          cdb.ResourceTencentCloudMysqlDrInstanceToMater(),
			"tencentcloud_mysql_instance_encryption_operation":                 cdb.ResourceTencentCloudMysqlInstanceEncryptionOperation(),
			"tencentcloud_mysql_isolate_instance":                              cdb.ResourceTencentCloudMysqlIsolateInstance(),
			"tencentcloud_mysql_password_complexity":                           cdb.ResourceTencentCloudMysqlPasswordComplexity(),
			"tencentcloud_mysql_remote_backup_config":                          cdb.ResourceTencentCloudMysqlRemoteBackupConfig(),
			"tencentcloud_mysql_restart_db_instances_operation":                cdb.ResourceTencentCloudMysqlRestartDbInstancesOperation(),
			"tencentcloud_mysql_switch_for_upgrade":                            cdb.ResourceTencentCloudMysqlSwitchForUpgrade(),
			"tencentcloud_mysql_rollback":                                      cdb.ResourceTencentCloudMysqlRollback(),
			"tencentcloud_mysql_rollback_stop":                                 cdb.ResourceTencentCloudMysqlRollbackStop(),
			"tencentcloud_mysql_ro_group":                                      cdb.ResourceTencentCloudMysqlRoGroup(),
			"tencentcloud_mysql_ro_instance_ip":                                cdb.ResourceTencentCloudMysqlRoInstanceIp(),
			"tencentcloud_mysql_ro_group_load_operation":                       cdb.ResourceTencentCloudMysqlRoGroupLoadOperation(),
			"tencentcloud_mysql_switch_master_slave_operation":                 cdb.ResourceTencentCloudMysqlSwitchMasterSlaveOperation(),
			"tencentcloud_mysql_proxy":                                         cdb.ResourceTencentCloudMysqlProxy(),
			"tencentcloud_mysql_reset_root_account":                            cdb.ResourceTencentCloudMysqlResetRootAccount(),
			"tencentcloud_mysql_verify_root_account":                           cdb.ResourceTencentCloudMysqlVerifyRootAccount(),
			"tencentcloud_mysql_reload_balance_proxy_node":                     cdb.ResourceTencentCloudMysqlReloadBalanceProxyNode(),
			"tencentcloud_mysql_ro_start_replication":                          cdb.ResourceTencentCloudMysqlRoStartReplication(),
			"tencentcloud_mysql_ro_stop_replication":                           cdb.ResourceTencentCloudMysqlRoStopReplication(),
			"tencentcloud_mysql_switch_proxy":                                  cdb.ResourceTencentCloudMysqlSwitchProxy(),
			"tencentcloud_cos_bucket":                                          cos.ResourceTencentCloudCosBucket(),
			"tencentcloud_cos_bucket_object":                                   cos.ResourceTencentCloudCosBucketObject(),
			"tencentcloud_cos_bucket_referer":                                  cos.ResourceTencentCloudCosBucketReferer(),
			"tencentcloud_cos_bucket_version":                                  cos.ResourceTencentCloudCosBucketVersion(),
			"tencentcloud_cfs_file_system":                                     cfs.ResourceTencentCloudCfsFileSystem(),
			"tencentcloud_cfs_access_group":                                    cfs.ResourceTencentCloudCfsAccessGroup(),
			"tencentcloud_cfs_access_rule":                                     cfs.ResourceTencentCloudCfsAccessRule(),
			"tencentcloud_cfs_auto_snapshot_policy":                            cfs.ResourceTencentCloudCfsAutoSnapshotPolicy(),
			"tencentcloud_cfs_auto_snapshot_policy_attachment":                 cfs.ResourceTencentCloudCfsAutoSnapshotPolicyAttachment(),
			"tencentcloud_cfs_snapshot":                                        cfs.ResourceTencentCloudCfsSnapshot(),
			"tencentcloud_cfs_user_quota":                                      resourceTencentCloudCfsUserQuota(),
			"tencentcloud_cfs_sign_up_cfs_service":                             cfs.ResourceTencentCloudCfsSignUpCfsService(),
			"tencentcloud_redis_instance":                                      crs.ResourceTencentCloudRedisInstance(),
			"tencentcloud_redis_backup_config":                                 crs.ResourceTencentCloudRedisBackupConfig(),
			"tencentcloud_redis_account":                                       crs.ResourceTencentCloudRedisAccount(),
			"tencentcloud_redis_param_template":                                crs.ResourceTencentCloudRedisParamTemplate(),
			"tencentcloud_redis_connection_config":                             crs.ResourceTencentCloudRedisConnectionConfig(),
			"tencentcloud_redis_param":                                         resourceTencentCloudRedisParam(),
			"tencentcloud_redis_read_only":                                     crs.ResourceTencentCloudRedisReadOnly(),
			"tencentcloud_redis_ssl":                                           crs.ResourceTencentCloudRedisSsl(),
			"tencentcloud_redis_backup_download_restriction":                   crs.ResourceTencentCloudRedisBackupDownloadRestriction(),
			"tencentcloud_redis_clear_instance_operation":                      crs.ResourceTencentCloudRedisClearInstanceOperation(),
			"tencentcloud_redis_renew_instance_operation":                      crs.ResourceTencentCloudRedisRenewInstanceOperation(),
			"tencentcloud_redis_startup_instance_operation":                    crs.ResourceTencentCloudRedisStartupInstanceOperation(),
			"tencentcloud_redis_upgrade_cache_version_operation":               crs.ResourceTencentCloudRedisUpgradeCacheVersionOperation(),
			"tencentcloud_redis_upgrade_multi_zone_operation":                  crs.ResourceTencentCloudRedisUpgradeMultiZoneOperation(),
			"tencentcloud_redis_upgrade_proxy_version_operation":               crs.ResourceTencentCloudRedisUpgradeProxyVersionOperation(),
			"tencentcloud_redis_maintenance_window":                            crs.ResourceTencentCloudRedisMaintenanceWindow(),
			"tencentcloud_redis_replica_readonly":                              crs.ResourceTencentCloudRedisReplicaReadonly(),
			"tencentcloud_redis_switch_master":                                 crs.ResourceTencentCloudRedisSwitchMaster(),
			"tencentcloud_redis_replicate_attachment":                          crs.ResourceTencentCloudRedisReplicateAttachment(),
			"tencentcloud_redis_backup_operation":                              crs.ResourceTencentCloudRedisBackupOperation(),
			"tencentcloud_redis_security_group_attachment":                     crs.ResourceTencentCloudRedisSecurityGroupAttachment(),
			"tencentcloud_as_load_balancer":                                    resourceTencentCloudAsLoadBalancer(),
			"tencentcloud_as_scaling_config":                                   as.ResourceTencentCloudAsScalingConfig(),
			"tencentcloud_as_scaling_group":                                    as.ResourceTencentCloudAsScalingGroup(),
			"tencentcloud_as_scaling_group_status":                             as.ResourceTencentCloudAsScalingGroupStatus(),
			"tencentcloud_as_attachment":                                       as.ResourceTencentCloudAsAttachment(),
			"tencentcloud_as_scaling_policy":                                   as.ResourceTencentCloudAsScalingPolicy(),
			"tencentcloud_as_schedule":                                         as.ResourceTencentCloudAsSchedule(),
			"tencentcloud_as_lifecycle_hook":                                   as.ResourceTencentCloudAsLifecycleHook(),
			"tencentcloud_as_notification":                                     as.ResourceTencentCloudAsNotification(),
			"tencentcloud_as_remove_instances":                                 as.ResourceTencentCloudAsRemoveInstances(),
			"tencentcloud_as_protect_instances":                                as.ResourceTencentCloudAsProtectInstances(),
			"tencentcloud_as_start_instances":                                  as.ResourceTencentCloudAsStartInstances(),
			"tencentcloud_as_stop_instances":                                   as.ResourceTencentCloudAsStopInstances(),
			"tencentcloud_as_scale_in_instances":                               as.ResourceTencentCloudAsScaleInInstances(),
			"tencentcloud_as_scale_out_instances":                              as.ResourceTencentCloudAsScaleOutInstances(),
			"tencentcloud_as_execute_scaling_policy":                           as.ResourceTencentCloudAsExecuteScalingPolicy(),
			"tencentcloud_as_complete_lifecycle":                               as.ResourceTencentCloudAsCompleteLifecycle(),
			"tencentcloud_mongodb_instance":                                    mongodb.ResourceTencentCloudMongodbInstance(),
			"tencentcloud_mongodb_sharding_instance":                           mongodb.ResourceTencentCloudMongodbShardingInstance(),
			"tencentcloud_mongodb_instance_account":                            mongodb.ResourceTencentCloudMongodbInstanceAccount(),
			"tencentcloud_mongodb_instance_backup":                             mongodb.ResourceTencentCloudMongodbInstanceBackup(),
			"tencentcloud_mongodb_instance_backup_download_task":               mongodb.ResourceTencentCloudMongodbInstanceBackupDownloadTask(),
			"tencentcloud_dayu_cc_http_policy":                                 dayu.ResourceTencentCloudDayuCCHttpPolicy(),
			"tencentcloud_dayu_cc_https_policy":                                dayu.ResourceTencentCloudDayuCCHttpsPolicy(),
			"tencentcloud_dayu_ddos_policy":                                    dayu.ResourceTencentCloudDayuDdosPolicy(),
			"tencentcloud_dayu_cc_policy_v2":                                   dayuv2.ResourceTencentCloudDayuCCPolicyV2(),
			"tencentcloud_dayu_ddos_policy_v2":                                 dayuv2.ResourceTencentCloudDayuDdosPolicyV2(),
			"tencentcloud_dayu_ddos_policy_case":                               dayu.ResourceTencentCloudDayuDdosPolicyCase(),
			"tencentcloud_dayu_ddos_policy_attachment":                         dayu.ResourceTencentCloudDayuDdosPolicyAttachment(),
			"tencentcloud_dayu_l4_rule":                                        dayu.ResourceTencentCloudDayuL4Rule(),
			"tencentcloud_dayu_l4_rule_v2":                                     dayuv2.ResourceTencentCloudDayuL4RuleV2(),
			"tencentcloud_dayu_l7_rule":                                        dayu.ResourceTencentCloudDayuL7Rule(),
			"tencentcloud_dayu_l7_rule_v2":                                     dayuv2.ResourceTencentCloudDayuL7RuleV2(),
			"tencentcloud_dayu_eip":                                            dayuv2.ResourceTencentCloudDayuEip(),
			"tencentcloud_gaap_proxy":                                          gaap.ResourceTencentCloudGaapProxy(),
			"tencentcloud_gaap_realserver":                                     gaap.ResourceTencentCloudGaapRealserver(),
			"tencentcloud_gaap_layer4_listener":                                gaap.ResourceTencentCloudGaapLayer4Listener(),
			"tencentcloud_gaap_layer7_listener":                                gaap.ResourceTencentCloudGaapLayer7Listener(),
			"tencentcloud_gaap_http_domain":                                    gaap.ResourceTencentCloudGaapHttpDomain(),
			"tencentcloud_gaap_http_rule":                                      gaap.ResourceTencentCloudGaapHttpRule(),
			"tencentcloud_gaap_certificate":                                    gaap.ResourceTencentCloudGaapCertificate(),
			"tencentcloud_gaap_security_policy":                                gaap.ResourceTencentCloudGaapSecurityPolicy(),
			"tencentcloud_gaap_security_rule":                                  gaap.ResourceTencentCloudGaapSecurityRule(),
			"tencentcloud_gaap_domain_error_page":                              gaap.ResourceTencentCloudGaapDomainErrorPageInfo(),
			"tencentcloud_gaap_global_domain_dns":                              gaap.ResourceTencentCloudGaapGlobalDomainDns(),
			"tencentcloud_gaap_global_domain":                                  gaap.ResourceTencentCloudGaapGlobalDomain(),
			"tencentcloud_gaap_custom_header":                                  gaap.ResourceTencentCloudGaapCustomHeader(),
			"tencentcloud_gaap_proxy_group":                                    gaap.ResourceTencentCloudGaapProxyGroup(),
			"tencentcloud_ssl_certificate":                                     resourceTencentCloudSslCertificate(),
			"tencentcloud_ssl_pay_certificate":                                 resourceTencentCloudSSLInstance(),
			"tencentcloud_ssl_free_certificate":                                resourceTencentCloudSSLFreeCertificate(),
			"tencentcloud_cam_role":                                            cam.ResourceTencentCloudCamRole(),
			"tencentcloud_cam_role_by_name":                                    cam.ResourceTencentCloudCamRoleByName(),
			"tencentcloud_cam_user":                                            cam.ResourceTencentCloudCamUser(),
			"tencentcloud_cam_policy":                                          cam.ResourceTencentCloudCamPolicy(),
			"tencentcloud_cam_policy_by_name":                                  cam.ResourceTencentCloudCamPolicyByName(),
			"tencentcloud_cam_role_policy_attachment":                          cam.ResourceTencentCloudCamRolePolicyAttachment(),
			"tencentcloud_cam_role_policy_attachment_by_name":                  cam.ResourceTencentCloudCamRolePolicyAttachmentByName(),
			"tencentcloud_cam_user_policy_attachment":                          cam.ResourceTencentCloudCamUserPolicyAttachment(),
			"tencentcloud_cam_group_policy_attachment":                         cam.ResourceTencentCloudCamGroupPolicyAttachment(),
			"tencentcloud_cam_group":                                           cam.ResourceTencentCloudCamGroup(),
			"tencentcloud_cam_oidc_sso":                                        cam.ResourceTencentCloudCamOIDCSSO(),
			"tencentcloud_cam_role_sso":                                        cam.ResourceTencentCloudCamRoleSSO(),
			"tencentcloud_cam_group_membership":                                cam.ResourceTencentCloudCamGroupMembership(),
			"tencentcloud_cam_saml_provider":                                   cam.ResourceTencentCloudCamSAMLProvider(),
			"tencentcloud_cam_service_linked_role":                             cam.ResourceTencentCloudCamServiceLinkedRole(),
			"tencentcloud_cam_mfa_flag":                                        cam.ResourceTencentCloudCamMfaFlag(),
			"tencentcloud_cam_access_key":                                      cam.ResourceTencentCloudCamAccessKey(),
			"tencentcloud_cam_user_saml_config":                                cam.ResourceTencentCloudCamUserSamlConfig(),
			"tencentcloud_cam_tag_role_attachment":                             cam.ResourceTencentCloudCamTagRoleAttachment(),
			"tencentcloud_cam_policy_version":                                  cam.ResourceTencentCloudCamPolicyVersion(),
			"tencentcloud_cam_set_policy_version_config":                       cam.ResourceTencentCloudCamSetPolicyVersionConfig(),
			"tencentcloud_cam_user_permission_boundary_attachment":             cam.ResourceTencentCloudCamUserPermissionBoundaryAttachment(),
			"tencentcloud_cam_role_permission_boundary_attachment":             cam.ResourceTencentCloudCamRolePermissionBoundaryAttachment(),
			"tencentcloud_organization_quit_organization_operation":            resourceTencentCloudOrganizationQuitOrganizationOperation(),
			"tencentcloud_ciam_user_group":                                     ciam.ResourceTencentCloudCiamUserGroup(),
			"tencentcloud_ciam_user_store":                                     ciam.ResourceTencentCloudCiamUserStore(),
			"tencentcloud_scf_function":                                        resourceTencentCloudScfFunction(),
			"tencentcloud_scf_function_version":                                resourceTencentCloudScfFunctionVersion(),
			"tencentcloud_scf_function_event_invoke_config":                    resourceTencentCloudScfFunctionEventInvokeConfig(),
			"tencentcloud_scf_reserved_concurrency_config":                     resourceTencentCloudScfReservedConcurrencyConfig(),
			"tencentcloud_scf_provisioned_concurrency_config":                  resourceTencentCloudScfProvisionedConcurrencyConfig(),
			"tencentcloud_scf_invoke_function":                                 resourceTencentCloudScfInvokeFunction(),
			"tencentcloud_scf_sync_invoke_function":                            resourceTencentCloudScfSyncInvokeFunction(),
			"tencentcloud_scf_terminate_async_event":                           resourceTencentCloudScfTerminateAsyncEvent(),
			"tencentcloud_scf_namespace":                                       resourceTencentCloudScfNamespace(),
			"tencentcloud_scf_layer":                                           resourceTencentCloudScfLayer(),
			"tencentcloud_scf_function_alias":                                  resourceTencentCloudScfFunctionAlias(),
			"tencentcloud_scf_trigger_config":                                  resourceTencentCloudScfTriggerConfig(),
			"tencentcloud_tcaplus_cluster":                                     resourceTencentCloudTcaplusCluster(),
			"tencentcloud_tcaplus_tablegroup":                                  resourceTencentCloudTcaplusTableGroup(),
			"tencentcloud_tcaplus_idl":                                         resourceTencentCloudTcaplusIdl(),
			"tencentcloud_tcaplus_table":                                       resourceTencentCloudTcaplusTable(),
			"tencentcloud_cdn_domain":                                          cdn.ResourceTencentCloudCdnDomain(),
			"tencentcloud_cdn_url_push":                                        cdn.ResourceTencentCloudUrlPush(),
			"tencentcloud_cdn_url_purge":                                       cdn.ResourceTencentCloudUrlPurge(),
			"tencentcloud_monitor_policy_group":                                resourceTencentCloudMonitorPolicyGroup(),
			"tencentcloud_monitor_binding_object":                              monitor.ResourceTencentCloudMonitorBindingObject(),
			"tencentcloud_monitor_policy_binding_object":                       monitor.ResourceTencentCloudMonitorPolicyBindingObject(),
			"tencentcloud_monitor_binding_receiver":                            monitor.ResourceTencentCloudMonitorBindingAlarmReceiver(),
			"tencentcloud_monitor_alarm_policy":                                monitor.ResourceTencentCloudMonitorAlarmPolicy(),
			"tencentcloud_monitor_alarm_notice":                                monitor.ResourceTencentCloudMonitorAlarmNotice(),
			"tencentcloud_monitor_alarm_policy_set_default":                    monitor.ResourceTencentCloudMonitorAlarmPolicySetDefault(),
			"tencentcloud_monitor_tmp_instance":                                resourceTencentCloudMonitorTmpInstance(),
			"tencentcloud_monitor_tmp_cvm_agent":                               resourceTencentCloudMonitorTmpCvmAgent(),
			"tencentcloud_monitor_tmp_scrape_job":                              resourceTencentCloudMonitorTmpScrapeJob(),
			"tencentcloud_monitor_tmp_exporter_integration":                    resourceTencentCloudMonitorTmpExporterIntegration(),
			"tencentcloud_monitor_tmp_alert_rule":                              resourceTencentCloudMonitorTmpAlertRule(),
			"tencentcloud_monitor_tmp_recording_rule":                          resourceTencentCloudMonitorTmpRecordingRule(),
			"tencentcloud_monitor_tmp_tke_template":                            resourceTencentCloudMonitorTmpTkeTemplate(),
			"tencentcloud_monitor_tmp_tke_template_attachment":                 resourceTencentCloudMonitorTmpTkeTemplateAttachment(),
			"tencentcloud_monitor_tmp_tke_alert_policy":                        resourceTencentCloudMonitorTmpTkeAlertPolicy(),
			"tencentcloud_monitor_tmp_tke_basic_config":                        resourceTencentCloudMonitorTmpTkeBasicConfig(),
			"tencentcloud_monitor_tmp_tke_cluster_agent":                       resourceTencentCloudMonitorTmpTkeClusterAgent(),
			"tencentcloud_monitor_tmp_tke_config":                              resourceTencentCloudMonitorTmpTkeConfig(),
			"tencentcloud_monitor_tmp_tke_record_rule_yaml":                    resourceTencentCloudMonitorTmpTkeRecordRuleYaml(),
			"tencentcloud_monitor_tmp_tke_global_notification":                 resourceTencentCloudMonitorTmpTkeGlobalNotification(),
			"tencentcloud_monitor_tmp_manage_grafana_attachment":               resourceTencentCloudMonitorTmpManageGrafanaAttachment(),
			"tencentcloud_monitor_grafana_instance":                            resourceTencentCloudMonitorGrafanaInstance(),
			"tencentcloud_monitor_grafana_integration":                         resourceTencentCloudMonitorGrafanaIntegration(),
			"tencentcloud_monitor_grafana_notification_channel":                resourceTencentCloudMonitorGrafanaNotificationChannel(),
			"tencentcloud_monitor_grafana_plugin":                              resourceTencentCloudMonitorGrafanaPlugin(),
			"tencentcloud_monitor_grafana_sso_account":                         resourceTencentCloudMonitorGrafanaSsoAccount(),
			"tencentcloud_monitor_tmp_grafana_config":                          resourceTencentCloudMonitorTmpGrafanaConfig(),
			"tencentcloud_monitor_grafana_dns_config":                          resourceTencentCloudMonitorGrafanaDnsConfig(),
			"tencentcloud_monitor_grafana_env_config":                          resourceTencentCloudMonitorGrafanaEnvConfig(),
			"tencentcloud_monitor_grafana_whitelist_config":                    resourceTencentCloudMonitorGrafanaWhitelistConfig(),
			"tencentcloud_monitor_grafana_sso_cam_config":                      resourceTencentCloudMonitorGrafanaSsoCamConfig(),
			"tencentcloud_monitor_grafana_sso_config":                          resourceTencentCloudMonitorGrafanaSsoConfig(),
			"tencentcloud_monitor_grafana_version_upgrade":                     resourceTencentCloudMonitorGrafanaVersionUpgrade(),
			"tencentcloud_mongodb_standby_instance":                            mongodb.ResourceTencentCloudMongodbStandbyInstance(),
			"tencentcloud_elasticsearch_instance":                              es.ResourceTencentCloudElasticsearchInstance(),
			"tencentcloud_elasticsearch_security_group":                        es.ResourceTencentCloudElasticsearchSecurityGroup(),
			"tencentcloud_elasticsearch_logstash":                              es.ResourceTencentCloudElasticsearchLogstash(),
			"tencentcloud_elasticsearch_logstash_pipeline":                     es.ResourceTencentCloudElasticsearchLogstashPipeline(),
			"tencentcloud_elasticsearch_restart_logstash_instance_operation":   es.ResourceTencentCloudElasticsearchRestartLogstashInstanceOperation(),
			"tencentcloud_elasticsearch_start_logstash_pipeline_operation":     es.ResourceTencentCloudElasticsearchStartLogstashPipelineOperation(),
			"tencentcloud_elasticsearch_stop_logstash_pipeline_operation":      es.ResourceTencentCloudElasticsearchStopLogstashPipelineOperation(),
			"tencentcloud_elasticsearch_index":                                 es.ResourceTencentCloudElasticsearchIndex(),
			"tencentcloud_elasticsearch_restart_instance_operation":            es.ResourceTencentCloudElasticsearchRestartInstanceOperation(),
			"tencentcloud_elasticsearch_restart_kibana_operation":              es.ResourceTencentCloudElasticsearchRestartKibanaOperation(),
			"tencentcloud_elasticsearch_restart_nodes_operation":               es.ResourceTencentCloudElasticsearchRestartNodesOperation(),
			"tencentcloud_elasticsearch_diagnose":                              es.ResourceTencentCloudElasticsearchDiagnose(),
			"tencentcloud_elasticsearch_diagnose_instance":                     es.ResourceTencentCloudElasticsearchDiagnoseInstance(),
			"tencentcloud_elasticsearch_update_plugins_operation":              es.ResourceTencentCloudElasticsearchUpdatePluginsOperation(),
			"tencentcloud_postgresql_instance":                                 postgresql.ResourceTencentCloudPostgresqlInstance(),
			"tencentcloud_postgresql_readonly_instance":                        postgresql.ResourceTencentCloudPostgresqlReadonlyInstance(),
			"tencentcloud_postgresql_readonly_group":                           postgresql.ResourceTencentCloudPostgresqlReadonlyGroup(),
			"tencentcloud_postgresql_readonly_attachment":                      postgresql.ResourceTencentCloudPostgresqlReadonlyAttachment(),
			"tencentcloud_postgresql_parameter_template":                       postgresql.ResourceTencentCloudPostgresqlParameterTemplate(),
			"tencentcloud_postgresql_base_backup":                              postgresql.ResourceTencentCloudPostgresqlBaseBackup(),
			"tencentcloud_postgresql_backup_plan_config":                       postgresql.ResourceTencentCloudPostgresqlBackupPlanConfig(),
			"tencentcloud_postgresql_security_group_config":                    postgresql.ResourceTencentCloudPostgresqlSecurityGroupConfig(),
			"tencentcloud_postgresql_backup_download_restriction_config":       postgresql.ResourceTencentCloudPostgresqlBackupDownloadRestrictionConfig(),
			"tencentcloud_postgresql_restart_db_instance_operation":            postgresql.ResourceTencentCloudPostgresqlRestartDbInstanceOperation(),
			"tencentcloud_postgresql_renew_db_instance_operation":              postgresql.ResourceTencentCloudPostgresqlRenewDbInstanceOperation(),
			"tencentcloud_postgresql_isolate_db_instance_operation":            postgresql.ResourceTencentCloudPostgresqlIsolateDbInstanceOperation(),
			"tencentcloud_postgresql_disisolate_db_instance_operation":         postgresql.ResourceTencentCloudPostgresqlDisisolateDbInstanceOperation(),
			"tencentcloud_postgresql_rebalance_readonly_group_operation":       postgresql.ResourceTencentCloudPostgresqlRebalanceReadonlyGroupOperation(),
			"tencentcloud_postgresql_delete_log_backup_operation":              postgresql.ResourceTencentCloudPostgresqlDeleteLogBackupOperation(),
			"tencentcloud_postgresql_modify_account_remark_operation":          postgresql.ResourceTencentCloudPostgresqlModifyAccountRemarkOperation(),
			"tencentcloud_postgresql_modify_switch_time_period_operation":      postgresql.ResourceTencentCloudPostgresqlModifySwitchTimePeriodOperation(),
			"tencentcloud_postgresql_instance_ha_config":                       postgresql.ResourceTencentCloudPostgresqlInstanceHAConfig(),
			"tencentcloud_sqlserver_instance":                                  resourceTencentCloudSqlserverInstance(),
			"tencentcloud_sqlserver_db":                                        resourceTencentCloudSqlserverDB(),
			"tencentcloud_sqlserver_account":                                   resourceTencentCloudSqlserverAccount(),
			"tencentcloud_sqlserver_account_db_attachment":                     resourceTencentCloudSqlserverAccountDBAttachment(),
			"tencentcloud_sqlserver_readonly_instance":                         resourceTencentCloudSqlserverReadonlyInstance(),
			"tencentcloud_sqlserver_migration":                                 resourceTencentCloudSqlserverMigration(),
			"tencentcloud_sqlserver_config_backup_strategy":                    resourceTencentCloudSqlserverConfigBackupStrategy(),
			"tencentcloud_sqlserver_general_backup":                            resourceTencentCloudSqlserverGeneralBackup(),
			"tencentcloud_sqlserver_general_clone":                             resourceTencentCloudSqlserverGeneralClone(),
			"tencentcloud_sqlserver_full_backup_migration":                     resourceTencentCloudSqlserverFullBackupMigration(),
			"tencentcloud_sqlserver_incre_backup_migration":                    resourceTencentCloudSqlserverIncreBackupMigration(),
			"tencentcloud_sqlserver_business_intelligence_file":                resourceTencentCloudSqlserverBusinessIntelligenceFile(),
			"tencentcloud_sqlserver_business_intelligence_instance":            resourceTencentCloudSqlserverBusinessIntelligenceInstance(),
			"tencentcloud_sqlserver_general_communication":                     resourceTencentCloudSqlserverGeneralCommunication(),
			"tencentcloud_sqlserver_general_cloud_instance":                    resourceTencentCloudSqlserverGeneralCloudInstance(),
			"tencentcloud_sqlserver_complete_expansion":                        resourceTencentCloudSqlserverCompleteExpansion(),
			"tencentcloud_sqlserver_config_database_cdc":                       resourceTencentCloudSqlserverConfigDatabaseCDC(),
			"tencentcloud_sqlserver_config_database_ct":                        resourceTencentCloudSqlserverConfigDatabaseCT(),
			"tencentcloud_sqlserver_config_database_mdf":                       resourceTencentCloudSqlserverConfigDatabaseMdf(),
			"tencentcloud_sqlserver_config_instance_param":                     resourceTencentCloudSqlserverConfigInstanceParam(),
			"tencentcloud_sqlserver_config_instance_ro_group":                  resourceTencentCloudSqlserverConfigInstanceRoGroup(),
			"tencentcloud_sqlserver_config_instance_security_groups":           resourceTencentCloudSqlserverConfigInstanceSecurityGroups(),
			"tencentcloud_sqlserver_renew_db_instance":                         resourceTencentCloudSqlserverRenewDBInstance(),
			"tencentcloud_sqlserver_renew_postpaid_db_instance":                resourceTencentCloudSqlserverRenewPostpaidDBInstance(),
			"tencentcloud_sqlserver_restart_db_instance":                       resourceTencentCloudSqlserverRestartDBInstance(),
			"tencentcloud_sqlserver_config_terminate_db_instance":              resourceTencentCloudSqlserverConfigTerminateDBInstance(),
			"tencentcloud_sqlserver_restore_instance":                          resourceTencentCloudSqlserverRestoreInstance(),
			"tencentcloud_sqlserver_rollback_instance":                         resourceTencentCloudSqlserverRollbackInstance(),
			"tencentcloud_sqlserver_start_backup_full_migration":               resourceTencentCloudSqlserverStartBackupFullMigration(),
			"tencentcloud_sqlserver_start_backup_incremental_migration":        resourceTencentCloudSqlserverStartBackupIncrementalMigration(),
			"tencentcloud_sqlserver_start_xevent":                              resourceTencentCloudSqlserverStartXevent(),
			"tencentcloud_ckafka_instance":                                     ckafka.ResourceTencentCloudCkafkaInstance(),
			"tencentcloud_ckafka_user":                                         ckafka.ResourceTencentCloudCkafkaUser(),
			"tencentcloud_ckafka_acl":                                          ckafka.ResourceTencentCloudCkafkaAcl(),
			"tencentcloud_ckafka_topic":                                        ckafka.ResourceTencentCloudCkafkaTopic(),
			"tencentcloud_ckafka_datahub_topic":                                ckafka.ResourceTencentCloudCkafkaDatahubTopic(),
			"tencentcloud_ckafka_connect_resource":                             ckafka.ResourceTencentCloudCkafkaConnectResource(),
			"tencentcloud_ckafka_renew_instance":                               ckafka.ResourceTencentCloudCkafkaRenewInstance(),
			"tencentcloud_ckafka_acl_rule":                                     ckafka.ResourceTencentCloudCkafkaAclRule(),
			"tencentcloud_ckafka_consumer_group":                               ckafka.ResourceTencentCloudCkafkaConsumerGroup(),
			"tencentcloud_ckafka_consumer_group_modify_offset":                 ckafka.ResourceTencentCloudCkafkaConsumerGroupModifyOffset(),
			"tencentcloud_ckafka_datahub_task":                                 ckafka.ResourceTencentCloudCkafkaDatahubTask(),
			"tencentcloud_ckafka_route":                                        ckafka.ResourceTencentCloudCkafkaRoute(),
			"tencentcloud_audit":                                               audit.ResourceTencentCloudAudit(),
			"tencentcloud_audit_track":                                         audit.ResourceTencentCloudAuditTrack(),
			"tencentcloud_image":                                               cvm.ResourceTencentCloudImage(),
			"tencentcloud_cynosdb_proxy":                                       cynosdb.ResourceTencentCloudCynosdbProxy(),
			"tencentcloud_cynosdb_reload_proxy_node":                           cynosdb.ResourceTencentCloudCynosdbReloadProxyNode(),
			"tencentcloud_cynosdb_cluster_resource_packages_attachment":        cynosdb.ResourceTencentCloudCynosdbClusterResourcePackagesAttachment(),
			"tencentcloud_cynosdb_cluster":                                     cynosdb.ResourceTencentCloudCynosdbCluster(),
			"tencentcloud_cynosdb_readonly_instance":                           cynosdb.ResourceTencentCloudCynosdbReadonlyInstance(),
			"tencentcloud_cynosdb_cluster_password_complexity":                 cynosdb.ResourceTencentCloudCynosdbClusterPasswordComplexity(),
			"tencentcloud_cynosdb_export_instance_error_logs":                  cynosdb.ResourceTencentCloudCynosdbExportInstanceErrorLogs(),
			"tencentcloud_cynosdb_export_instance_slow_queries":                cynosdb.ResourceTencentCloudCynosdbExportInstanceSlowQueries(),
			"tencentcloud_cynosdb_account_privileges":                          cynosdb.ResourceTencentCloudCynosdbAccountPrivileges(),
			"tencentcloud_cynosdb_account":                                     cynosdb.ResourceTencentCloudCynosdbAccount(),
			"tencentcloud_cynosdb_binlog_save_days":                            cynosdb.ResourceTencentCloudCynosdbBinlogSaveDays(),
			"tencentcloud_cynosdb_cluster_databases":                           cynosdb.ResourceTencentCloudCynosdbClusterDatabases(),
			"tencentcloud_cynosdb_instance_param":                              cynosdb.ResourceTencentCloudCynosdbInstanceParam(),
			"tencentcloud_cynosdb_isolate_instance":                            cynosdb.ResourceTencentCloudCynosdbIsolateInstance(),
			"tencentcloud_cynosdb_param_template":                              cynosdb.ResourceTencentCloudCynosdbParamTemplate(),
			"tencentcloud_cynosdb_resource_package":                            cynosdb.ResourceTencentCloudCynosdbResourcePackage(),
			"tencentcloud_cynosdb_restart_instance":                            cynosdb.ResourceTencentCloudCynosdbRestartInstance(),
			"tencentcloud_cynosdb_roll_back_cluster":                           cynosdb.ResourceTencentCloudCynosdbRollBackCluster(),
			"tencentcloud_cynosdb_wan":                                         cynosdb.ResourceTencentCloudCynosdbWan(),
			"tencentcloud_cynosdb_cluster_slave_zone":                          cynosdb.ResourceTencentCloudCynosdbClusterSlaveZone(),
			"tencentcloud_cynosdb_read_only_instance_exclusive_access":         cynosdb.ResourceTencentCloudCynosdbReadOnlyInstanceExclusiveAccess(),
			"tencentcloud_cynosdb_proxy_end_point":                             cynosdb.ResourceTencentCloudCynosdbProxyEndPoint(),
			"tencentcloud_cynosdb_upgrade_proxy_version":                       cynosdb.ResourceTencentCloudCynosdbUpgradeProxyVersion(),
			"tencentcloud_vod_adaptive_dynamic_streaming_template":             resourceTencentCloudVodAdaptiveDynamicStreamingTemplate(),
			"tencentcloud_vod_image_sprite_template":                           resourceTencentCloudVodImageSpriteTemplate(),
			"tencentcloud_vod_procedure_template":                              resourceTencentCloudVodProcedureTemplate(),
			"tencentcloud_vod_snapshot_by_time_offset_template":                resourceTencentCloudVodSnapshotByTimeOffsetTemplate(),
			"tencentcloud_vod_super_player_config":                             resourceTencentCloudVodSuperPlayerConfig(),
			"tencentcloud_vod_sub_application":                                 resourceTencentCloudVodSubApplication(),
			"tencentcloud_sqlserver_publish_subscribe":                         resourceTencentCloudSqlserverPublishSubscribe(),
			"tencentcloud_api_gateway_usage_plan":                              apigateway.ResourceTencentCloudAPIGatewayUsagePlan(),
			"tencentcloud_api_gateway_usage_plan_attachment":                   apigateway.ResourceTencentCloudAPIGatewayUsagePlanAttachment(),
			"tencentcloud_api_gateway_api":                                     apigateway.ResourceTencentCloudAPIGatewayAPI(),
			"tencentcloud_api_gateway_service":                                 apigateway.ResourceTencentCloudAPIGatewayService(),
			"tencentcloud_api_gateway_custom_domain":                           apigateway.ResourceTencentCloudAPIGatewayCustomDomain(),
			"tencentcloud_api_gateway_ip_strategy":                             apigateway.ResourceTencentCloudAPIGatewayIPStrategy(),
			"tencentcloud_api_gateway_strategy_attachment":                     apigateway.ResourceTencentCloudAPIGatewayStrategyAttachment(),
			"tencentcloud_api_gateway_api_key":                                 apigateway.ResourceTencentCloudAPIGatewayAPIKey(),
			"tencentcloud_api_gateway_api_key_attachment":                      apigateway.ResourceTencentCloudAPIGatewayAPIKeyAttachment(),
			"tencentcloud_api_gateway_service_release":                         apigateway.ResourceTencentCloudAPIGatewayServiceRelease(),
			"tencentcloud_api_gateway_plugin":                                  apigateway.ResourceTencentCloudAPIGatewayPlugin(),
			"tencentcloud_api_gateway_plugin_attachment":                       apigateway.ResourceTencentCloudAPIGatewayPluginAttachment(),
			"tencentcloud_api_gateway_upstream":                                apigateway.ResourceTencentCloudAPIGatewayUpstream(),
			"tencentcloud_api_gateway_api_app_attachment":                      apigateway.ResourceTencentCloudAPIGatewayApiAppAttachment(),
			"tencentcloud_sqlserver_basic_instance":                            resourceTencentCloudSqlserverBasicInstance(),
			"tencentcloud_sqlserver_instance_tde":                              resourceTencentCloudSqlserverInstanceTDE(),
			"tencentcloud_sqlserver_database_tde":                              resourceTencentCloudSqlserverDatabaseTDE(),
			"tencentcloud_sqlserver_general_cloud_ro_instance":                 resourceTencentCloudSqlserverGeneralCloudRoInstance(),
			"tencentcloud_sqlserver_instance_ssl":                              resourceTencentCloudSqlserverInstanceSsl(),
			"tencentcloud_tcr_instance":                                        resourceTencentCloudTcrInstance(),
			"tencentcloud_tcr_namespace":                                       resourceTencentCloudTcrNamespace(),
			"tencentcloud_tcr_repository":                                      resourceTencentCloudTcrRepository(),
			"tencentcloud_tcr_token":                                           resourceTencentCloudTcrToken(),
			"tencentcloud_tcr_vpc_attachment":                                  resourceTencentCloudTcrVpcAttachment(),
			"tencentcloud_tcr_tag_retention_rule":                              resourceTencentCloudTcrTagRetentionRule(),
			"tencentcloud_tcr_webhook_trigger":                                 resourceTencentCloudTcrWebhookTrigger(),
			"tencentcloud_tcr_manage_replication_operation":                    resourceTencentCloudTcrManageReplicationOperation(),
			"tencentcloud_tcr_customized_domain":                               resourceTencentCloudTcrCustomizedDomain(),
			"tencentcloud_tcr_immutable_tag_rule":                              resourceTencentCloudTcrImmutableTagRule(),
			"tencentcloud_tcr_delete_image_operation":                          resourceTencentCloudTcrDeleteImageOperation(),
			"tencentcloud_tcr_create_image_signature_operation":                resourceTencentCloudTcrCreateImageSignatureOperation(),
			"tencentcloud_tcr_tag_retention_execution_config":                  resourceTencentCloudTcrTagRetentionExecutionConfig(),
			"tencentcloud_tcr_service_account":                                 resourceTencentCloudTcrServiceAccount(),
			"tencentcloud_tdmq_instance":                                       resourceTencentCloudTdmqInstance(),
			"tencentcloud_tdmq_namespace":                                      resourceTencentCloudTdmqNamespace(),
			"tencentcloud_tdmq_topic":                                          resourceTencentCloudTdmqTopic(),
			"tencentcloud_tdmq_role":                                           resourceTencentCloudTdmqRole(),
			"tencentcloud_tdmq_namespace_role_attachment":                      resourceTencentCloudTdmqNamespaceRoleAttachment(),
			"tencentcloud_tdmq_subscription_attachment":                        resourceTencentCloudTdmqSubscriptionAttachment(),
			"tencentcloud_tdmq_rabbitmq_user":                                  resourceTencentCloudTdmqRabbitmqUser(),
			"tencentcloud_tdmq_rabbitmq_virtual_host":                          resourceTencentCloudTdmqRabbitmqVirtualHost(),
			"tencentcloud_tdmq_rabbitmq_vip_instance":                          resourceTencentCloudTdmqRabbitmqVipInstance(),
			"tencentcloud_tdmq_send_rocketmq_message":                          resourceTencentCloudTdmqSendRocketmqMessage(),
			"tencentcloud_tdmq_professional_cluster":                           resourceTencentCloudTdmqProfessionalCluster(),
			"tencentcloud_cos_bucket_policy":                                   cos.ResourceTencentCloudCosBucketPolicy(),
			"tencentcloud_cos_bucket_domain_certificate_attachment":            cos.ResourceTencentCloudCosBucketDomainCertificateAttachment(),
			"tencentcloud_cos_bucket_inventory":                                cos.ResourceTencentCloudCosBucketInventory(),
			"tencentcloud_cos_batch":                                           cos.ResourceTencentCloudCosBatch(),
			"tencentcloud_cos_object_abort_multipart_upload_operation":         cos.ResourceTencentCloudCosObjectAbortMultipartUploadOperation(),
			"tencentcloud_cos_object_copy_operation":                           cos.ResourceTencentCloudCosObjectCopyOperation(),
			"tencentcloud_cos_object_restore_operation":                        cos.ResourceTencentCloudCosObjectRestoreOperation(),
			"tencentcloud_cos_bucket_generate_inventory_immediately_operation": cos.ResourceTencentCloudCosBucketGenerateInventoryImmediatelyOperation(),
			"tencentcloud_cos_object_download_operation":                       cos.ResourceTencentCloudCosObjectDownloadOperation(),
			"tencentcloud_address_template":                                    resourceTencentCloudAddressTemplate(),
			"tencentcloud_address_template_group":                              resourceTencentCloudAddressTemplateGroup(),
			"tencentcloud_protocol_template":                                   resourceTencentCloudProtocolTemplate(),
			"tencentcloud_protocol_template_group":                             resourceTencentCloudProtocolTemplateGroup(),
			"tencentcloud_kms_key":                                             kms.ResourceTencentCloudKmsKey(),
			"tencentcloud_kms_external_key":                                    kms.ResourceTencentCloudKmsExternalKey(),
			"tencentcloud_kms_white_box_key":                                   kms.ResourceTencentCloudKmsWhiteBoxKey(),
			"tencentcloud_kms_cloud_resource_attachment":                       kms.ResourceTencentCloudKmsCloudResourceAttachment(),
			"tencentcloud_kms_overwrite_white_box_device_fingerprints":         kms.ResourceTencentCloudKmsOverwriteWhiteBoxDeviceFingerprints(),
			"tencentcloud_ssm_secret":                                          resourceTencentCloudSsmSecret(),
			"tencentcloud_ssm_ssh_key_pair_secret":                             resourceTencentCloudSsmSshKeyPairSecret(),
			"tencentcloud_ssm_product_secret":                                  resourceTencentCloudSsmProductSecret(),
			"tencentcloud_ssm_secret_version":                                  resourceTencentCloudSsmSecretVersion(),
			"tencentcloud_ssm_rotate_product_secret":                           resourceTencentCloudSsmRotateProductSecret(),
			"tencentcloud_cdh_instance":                                        cdh.ResourceTencentCloudCdhInstance(),
			"tencentcloud_dnspod_domain_instance":                              dnspod.ResourceTencentCloudDnspodDomainInstance(),
			"tencentcloud_dnspod_domain_alias":                                 dnspod.ResourceTencentCloudDnspodDomainAlias(),
			"tencentcloud_dnspod_record":                                       dnspod.ResourceTencentCloudDnspodRecord(),
			"tencentcloud_dnspod_record_group":                                 dnspod.ResourceTencentCloudDnspodRecordGroup(),
			"tencentcloud_dnspod_modify_domain_owner_operation":                dnspod.ResourceTencentCloudDnspodModifyDomainOwnerOperation(),
			"tencentcloud_dnspod_modify_record_group_operation":                dnspod.ResourceTencentCloudDnspodModifyRecordGroupOperation(),
			"tencentcloud_dnspod_download_snapshot_operation":                  dnspod.ResourceTencentCloudDnspodDownloadSnapshotOperation(),
			"tencentcloud_dnspod_custom_line":                                  dnspod.ResourceTencentCloudDnspodCustomLine(),
			"tencentcloud_dnspod_snapshot_config":                              dnspod.ResourceTencentCloudDnspodSnapshotConfig(),
			"tencentcloud_dnspod_domain_lock":                                  dnspod.ResourceTencentCloudDnspodDomainLock(),
			"tencentcloud_private_dns_zone":                                    privatedns.ResourceTencentCloudPrivateDnsZone(),
			"tencentcloud_private_dns_record":                                  privatedns.ResourceTencentCloudPrivateDnsRecord(),
			"tencentcloud_private_dns_zone_vpc_attachment":                     privatedns.ResourceTencentCloudPrivateDnsZoneVpcAttachment(),
			"tencentcloud_cls_logset":                                          cls.ResourceTencentCloudClsLogset(),
			"tencentcloud_cls_topic":                                           cls.ResourceTencentCloudClsTopic(),
			"tencentcloud_cls_config":                                          cls.ResourceTencentCloudClsConfig(),
			"tencentcloud_cls_config_extra":                                    cls.ResourceTencentCloudClsConfigExtra(),
			"tencentcloud_cls_config_attachment":                               cls.ResourceTencentCloudClsConfigAttachment(),
			"tencentcloud_cls_machine_group":                                   cls.ResourceTencentCloudClsMachineGroup(),
			"tencentcloud_cls_cos_shipper":                                     cls.ResourceTencentCloudClsCosShipper(),
			"tencentcloud_cls_index":                                           cls.ResourceTencentCloudClsIndex(),
			"tencentcloud_cls_alarm":                                           cls.ResourceTencentCloudClsAlarm(),
			"tencentcloud_cls_alarm_notice":                                    cls.ResourceTencentCloudClsAlarmNotice(),
			"tencentcloud_cls_ckafka_consumer":                                 cls.ResourceTencentCloudClsCkafkaConsumer(),
			"tencentcloud_cls_cos_recharge":                                    cls.ResourceTencentCloudClsCosRecharge(),
			"tencentcloud_cls_export":                                          cls.ResourceTencentCloudClsExport(),
			"tencentcloud_cls_data_transform":                                  cls.ResourceTencentCloudClsDataTransform(),
			"tencentcloud_lighthouse_instance":                                 lighthouse.ResourceTencentCloudLighthouseInstance(),
			"tencentcloud_lighthouse_firewall_template":                        lighthouse.ResourceTencentCloudLighthouseFirewallTemplate(),
			"tencentcloud_tem_environment":                                     resourceTencentCloudTemEnvironment(),
			"tencentcloud_tem_application":                                     resourceTencentCloudTemApplication(),
			"tencentcloud_tem_workload":                                        resourceTencentCloudTemWorkload(),
			"tencentcloud_tem_app_config":                                      resourceTencentCloudTemAppConfig(),
			"tencentcloud_tem_log_config":                                      resourceTencentCloudTemLogConfig(),
			"tencentcloud_tem_scale_rule":                                      resourceTencentCloudTemScaleRule(),
			"tencentcloud_tem_gateway":                                         resourceTencentCloudTemGateway(),
			"tencentcloud_tem_application_service":                             resourceTencentCloudTemApplicationService(),
			"tencentcloud_teo_zone":                                            resourceTencentCloudTeoZone(),
			"tencentcloud_teo_zone_setting":                                    resourceTencentCloudTeoZoneSetting(),
			"tencentcloud_teo_origin_group":                                    resourceTencentCloudTeoOriginGroup(),
			"tencentcloud_teo_rule_engine":                                     resourceTencentCloudTeoRuleEngine(),
			"tencentcloud_teo_ownership_verify":                                resourceTencentCloudTeoOwnershipVerify(),
			"tencentcloud_teo_certificate_config":                              resourceTencentCloudTeoCertificateConfig(),
			"tencentcloud_teo_acceleration_domain":                             resourceTencentCloudTeoAccelerationDomain(),
			"tencentcloud_teo_application_proxy":                               resourceTencentCloudTeoApplicationProxy(),
			"tencentcloud_teo_application_proxy_rule":                          resourceTencentCloudTeoApplicationProxyRule(),
			"tencentcloud_tcm_mesh":                                            resourceTencentCloudTcmMesh(),
			"tencentcloud_tcm_cluster_attachment":                              resourceTencentCloudTcmClusterAttachment(),
			"tencentcloud_tcm_prometheus_attachment":                           resourceTencentCloudTcmPrometheusAttachment(),
			"tencentcloud_tcm_tracing_config":                                  resourceTencentCloudTcmTracingConfig(),
			"tencentcloud_tcm_access_log_config":                               resourceTencentCloudTcmAccessLogConfig(),
			"tencentcloud_ses_domain":                                          resourceTencentCloudSesDomain(),
			"tencentcloud_ses_template":                                        resourceTencentCloudSesTemplate(),
			"tencentcloud_ses_email_address":                                   resourceTencentCloudSesEmailAddress(),
			"tencentcloud_ses_receiver":                                        resourceTencentCloudSesReceiver(),
			"tencentcloud_ses_send_email":                                      resourceTencentCloudSesSendEmail(),
			"tencentcloud_ses_batch_send_email":                                resourceTencentCloudSesBatchSendEmail(),
			"tencentcloud_ses_verify_domain":                                   resourceTencentCloudSesVerifyDomain(),
			"tencentcloud_ses_black_list_delete":                               resourceTencentCloudSesBlackListDelete(),
			"tencentcloud_sms_sign":                                            resourceTencentCloudSmsSign(),
			"tencentcloud_sms_template":                                        resourceTencentCloudSmsTemplate(),
			"tencentcloud_dcdb_account":                                        dcdb.ResourceTencentCloudDcdbAccount(),
			"tencentcloud_dcdb_hourdb_instance":                                dcdb.ResourceTencentCloudDcdbHourdbInstance(),
			"tencentcloud_dcdb_security_group_attachment":                      dcdb.ResourceTencentCloudDcdbSecurityGroupAttachment(),
			"tencentcloud_dcdb_db_instance":                                    dcdb.ResourceTencentCloudDcdbDbInstance(),
			"tencentcloud_dcdb_account_privileges":                             dcdb.ResourceTencentCloudDcdbAccountPrivileges(),
			"tencentcloud_dcdb_db_parameters":                                  dcdb.ResourceTencentCloudDcdbDbParameters(),
			"tencentcloud_dcdb_encrypt_attributes_config":                      dcdb.ResourceTencentCloudDcdbEncryptAttributesConfig(),
			"tencentcloud_dcdb_db_sync_mode_config":                            dcdb.ResourceTencentCloudDcdbDbSyncModeConfig(),
			"tencentcloud_dcdb_instance_config":                                dcdb.ResourceTencentCloudDcdbInstanceConfig(),
			"tencentcloud_dcdb_activate_hour_instance_operation":               dcdb.ResourceTencentCloudDcdbActivateHourInstanceOperation(),
			"tencentcloud_dcdb_isolate_hour_instance_operation":                dcdb.ResourceTencentCloudDcdbIsolateHourInstanceOperation(),
			"tencentcloud_dcdb_cancel_dcn_job_operation":                       dcdb.ResourceTencentCloudDcdbCancelDcnJobOperation(),
			"tencentcloud_dcdb_flush_binlog_operation":                         dcdb.ResourceTencentCloudDcdbFlushBinlogOperation(),
			"tencentcloud_dcdb_switch_db_instance_ha_operation":                dcdb.ResourceTencentCloudDcdbSwitchDbInstanceHaOperation(),
			"tencentcloud_cat_task_set":                                        cat.ResourceTencentCloudCatTaskSet(),
			"tencentcloud_mariadb_dedicatedcluster_db_instance":                mariadb.ResourceTencentCloudMariadbDedicatedclusterDbInstance(),
			"tencentcloud_mariadb_instance":                                    mariadb.ResourceTencentCloudMariadbInstance(),
			"tencentcloud_mariadb_hour_db_instance":                            mariadb.ResourceTencentCloudMariadbHourDbInstance(),
			"tencentcloud_mariadb_account":                                     mariadb.ResourceTencentCloudMariadbAccount(),
			"tencentcloud_mariadb_parameters":                                  mariadb.ResourceTencentCloudMariadbParameters(),
			"tencentcloud_mariadb_log_file_retention_period":                   mariadb.ResourceTencentCloudMariadbLogFileRetentionPeriod(),
			"tencentcloud_mariadb_security_groups":                             mariadb.ResourceTencentCloudMariadbSecurityGroups(),
			"tencentcloud_mariadb_encrypt_attributes":                          mariadb.ResourceTencentCloudMariadbEncryptAttributes(),
			"tencentcloud_mariadb_account_privileges":                          mariadb.ResourceTencentCloudMariadbAccountPrivileges(),
			"tencentcloud_mariadb_operate_hour_db_instance":                    mariadb.ResourceTencentCloudMariadbOperateHourDbInstance(),
			"tencentcloud_mariadb_backup_time":                                 mariadb.ResourceTencentCloudMariadbBackupTime(),
			"tencentcloud_mariadb_cancel_dcn_job":                              mariadb.ResourceTencentCloudMariadbCancelDcnJob(),
			"tencentcloud_mariadb_flush_binlog":                                mariadb.ResourceTencentCloudMariadbFlushBinlog(),
			"tencentcloud_mariadb_switch_ha":                                   mariadb.ResourceTencentCloudMariadbSwitchHA(),
			"tencentcloud_mariadb_restart_instance":                            mariadb.ResourceTencentCloudMariadbRestartInstance(),
			"tencentcloud_mariadb_renew_instance":                              mariadb.ResourceTencentCloudMariadbRenewInstance(),
			"tencentcloud_mariadb_instance_config":                             mariadb.ResourceTencentCloudMariadbInstanceConfig(),
			"tencentcloud_tdcpg_cluster":                                       resourceTencentCloudTdcpgCluster(),
			"tencentcloud_tdcpg_instance":                                      resourceTencentCloudTdcpgInstance(),
			"tencentcloud_css_watermark":                                       css.ResourceTencentCloudCssWatermark(),
			"tencentcloud_css_watermark_rule_attachment":                       css.ResourceTencentCloudCssWatermarkRuleAttachment(),
			"tencentcloud_css_pull_stream_task":                                css.ResourceTencentCloudCssPullStreamTask(),
			"tencentcloud_css_live_transcode_template":                         css.ResourceTencentCloudCssLiveTranscodeTemplate(),
			"tencentcloud_css_live_transcode_rule_attachment":                  css.ResourceTencentCloudCssLiveTranscodeRuleAttachment(),
			"tencentcloud_css_domain":                                          css.ResourceTencentCloudCssDomain(),
			"tencentcloud_css_authenticate_domain_owner_operation":             css.ResourceTencentCloudCssAuthenticateDomainOwnerOperation(),
			"tencentcloud_css_play_domain_cert_attachment":                     css.ResourceTencentCloudCssPlayDomainCertAttachment(),
			"tencentcloud_css_play_auth_key_config":                            css.ResourceTencentCloudCssPlayAuthKeyConfig(),
			"tencentcloud_css_push_auth_key_config":                            css.ResourceTencentCloudCssPushAuthKeyConfig(),
			"tencentcloud_css_backup_stream":                                   css.ResourceTencentCloudCssBackupStream(),
			"tencentcloud_css_callback_rule_attachment":                        css.ResourceTencentCloudCssCallbackRuleAttachment(),
			"tencentcloud_css_callback_template":                               css.ResourceTencentCloudCssCallbackTemplate(),
			"tencentcloud_css_domain_referer":                                  css.ResourceTencentCloudCssDomainReferer(),
			"tencentcloud_css_enable_optimal_switching":                        css.ResourceTencentCloudCssEnableOptimalSwitching(),
			"tencentcloud_css_record_rule_attachment":                          css.ResourceTencentCloudCssRecordRuleAttachment(),
			"tencentcloud_css_record_template":                                 css.ResourceTencentCloudCssRecordTemplate(),
			"tencentcloud_css_snapshot_rule_attachment":                        css.ResourceTencentCloudCssSnapshotRuleAttachment(),
			"tencentcloud_css_snapshot_template":                               css.ResourceTencentCloudCssSnapshotTemplate(),
			"tencentcloud_css_pad_template":                                    css.ResourceTencentCloudCssPadTemplate(),
			"tencentcloud_css_pad_rule_attachment":                             css.ResourceTencentCloudCssPadRuleAttachment(),
			"tencentcloud_css_timeshift_template":                              css.ResourceTencentCloudCssTimeshiftTemplate(),
			"tencentcloud_css_timeshift_rule_attachment":                       css.ResourceTencentCloudCssTimeshiftRuleAttachment(),
			"tencentcloud_css_stream_monitor":                                  css.ResourceTencentCloudCssStreamMonitor(),
			"tencentcloud_css_start_stream_monitor":                            css.ResourceTencentCloudCssStartStreamMonitor(),
			"tencentcloud_css_pull_stream_task_restart":                        css.ResourceTencentCloudCssPullStreamTaskRestart(),
			"tencentcloud_pts_project":                                         pts.ResourceTencentCloudPtsProject(),
			"tencentcloud_pts_alert_channel":                                   pts.ResourceTencentCloudPtsAlertChannel(),
			"tencentcloud_pts_scenario":                                        pts.ResourceTencentCloudPtsScenario(),
			"tencentcloud_pts_file":                                            pts.ResourceTencentCloudPtsFile(),
			"tencentcloud_pts_job":                                             pts.ResourceTencentCloudPtsJob(),
			"tencentcloud_pts_cron_job":                                        pts.ResourceTencentCloudPtsCronJob(),
			"tencentcloud_pts_tmp_key_generate":                                pts.ResourceTencentCloudPtsTmpKeyGenerate(),
			"tencentcloud_pts_cron_job_restart":                                pts.ResourceTencentCloudPtsCronJobRestart(),
			"tencentcloud_pts_job_abort":                                       pts.ResourceTencentCloudPtsJobAbort(),
			"tencentcloud_pts_cron_job_abort":                                  pts.ResourceTencentCloudPtsCronJobAbort(),
			"tencentcloud_tat_command":                                         resourceTencentCloudTatCommand(),
			"tencentcloud_tat_invoker":                                         resourceTencentCloudTatInvoker(),
			"tencentcloud_tat_invoker_config":                                  resourceTencentCloudTatInvokerConfig(),
			"tencentcloud_tat_invocation_invoke_attachment":                    resourceTencentCloudTatInvocationInvokeAttachment(),
			"tencentcloud_tat_invocation_command_attachment":                   resourceTencentCloudTatInvocationCommandAttachment(),
			"tencentcloud_organization_org_node":                               resourceTencentCloudOrganizationOrgNode(),
			"tencentcloud_organization_org_member":                             resourceTencentCloudOrganizationOrgMember(),
			"tencentcloud_organization_org_identity":                           resourceTencentCloudOrganizationOrgIdentity(),
			"tencentcloud_organization_org_member_email":                       resourceTencentCloudOrganizationOrgMemberEmail(),
			"tencentcloud_organization_instance":                               resourceTencentCloudOrganizationOrganization(),
			"tencentcloud_organization_policy_sub_account_attachment":          resourceTencentCloudOrganizationPolicySubAccountAttachment(),
			"tencentcloud_organization_org_member_auth_identity_attachment":    resourceTencentCloudOrganizationOrgMemberAuthIdentityAttachment(),
			"tencentcloud_organization_org_member_policy_attachment":           resourceTencentCloudOrganizationOrgMemberPolicyAttachment(),
			"tencentcloud_dbbrain_sql_filter":                                  dbbrain.ResourceTencentCloudDbbrainSqlFilter(),
			"tencentcloud_dbbrain_security_audit_log_export_task":              dbbrain.ResourceTencentCloudDbbrainSecurityAuditLogExportTask(),
			"tencentcloud_dbbrain_db_diag_report_task":                         dbbrain.ResourceTencentCloudDbbrainDbDiagReportTask(),
			"tencentcloud_dbbrain_modify_diag_db_instance_operation":           dbbrain.ResourceTencentCloudDbbrainModifyDiagDbInstanceOperation(),
			"tencentcloud_dbbrain_tdsql_audit_log":                             dbbrain.ResourceTencentCloudDbbrainTdsqlAuditLog(),
			"tencentcloud_rum_project":                                         rum.ResourceTencentCloudRumProject(),
			"tencentcloud_rum_taw_instance":                                    rum.ResourceTencentCloudRumTawInstance(),
			"tencentcloud_rum_whitelist":                                       rum.ResourceTencentCloudRumWhitelist(),
			"tencentcloud_rum_offline_log_config_attachment":                   rum.ResourceTencentCloudRumOfflineLogConfigAttachment(),
			"tencentcloud_rum_instance_status_config":                          rum.ResourceTencentCloudRumInstanceStatusConfig(),
			"tencentcloud_rum_project_status_config":                           rum.ResourceTencentCloudRumProjectStatusConfig(),
			"tencentcloud_rum_release_file":                                    rum.ResourceTencentCloudRumReleaseFile(),
			"tencentcloud_tdmq_rocketmq_cluster":                               resourceTencentCloudTdmqRocketmqCluster(),
			"tencentcloud_tdmq_rocketmq_namespace":                             resourceTencentCloudTdmqRocketmqNamespace(),
			"tencentcloud_tdmq_rocketmq_role":                                  resourceTencentCloudTdmqRocketmqRole(),
			"tencentcloud_tdmq_rocketmq_topic":                                 resourceTencentCloudTdmqRocketmqTopic(),
			"tencentcloud_tdmq_rocketmq_group":                                 resourceTencentCloudTdmqRocketmqGroup(),
			"tencentcloud_tdmq_rocketmq_environment_role":                      resourceTencentCloudTdmqRocketmqEnvironmentRole(),
			"tencentcloud_tdmq_rocketmq_vip_instance":                          resourceTencentCloudTdmqRocketmqVipInstance(),
			"tencentcloud_trocket_rocketmq_instance":                           resourceTencentCloudTrocketRocketmqInstance(),
			"tencentcloud_trocket_rocketmq_topic":                              resourceTencentCloudTrocketRocketmqTopic(),
			"tencentcloud_trocket_rocketmq_consumer_group":                     resourceTencentCloudTrocketRocketmqConsumerGroup(),
			"tencentcloud_trocket_rocketmq_role":                               resourceTencentCloudTrocketRocketmqRole(),
			"tencentcloud_dts_sync_job":                                        dts.ResourceTencentCloudDtsSyncJob(),
			"tencentcloud_dts_sync_config":                                     dts.ResourceTencentCloudDtsSyncConfig(),
			"tencentcloud_dts_sync_check_job_operation":                        dts.ResourceTencentCloudDtsSyncCheckJobOperation(),
			"tencentcloud_dts_sync_job_resume_operation":                       dts.ResourceTencentCloudDtsSyncJobResumeOperation(),
			"tencentcloud_dts_sync_job_start_operation":                        dts.ResourceTencentCloudDtsSyncJobStartOperation(),
			"tencentcloud_dts_sync_job_stop_operation":                         dts.ResourceTencentCloudDtsSyncJobStopOperation(),
			"tencentcloud_dts_sync_job_resize_operation":                       dts.ResourceTencentCloudDtsSyncJobResizeOperation(),
			"tencentcloud_dts_sync_job_recover_operation":                      dts.ResourceTencentCloudDtsSyncJobRecoverOperation(),
			"tencentcloud_dts_sync_job_isolate_operation":                      dts.ResourceTencentCloudDtsSyncJobIsolateOperation(),
			"tencentcloud_dts_sync_job_continue_operation":                     dts.ResourceTencentCloudDtsSyncJobContinueOperation(),
			"tencentcloud_dts_sync_job_pause_operation":                        dts.ResourceTencentCloudDtsSyncJobPauseOperation(),
			"tencentcloud_dts_migrate_service":                                 dts.ResourceTencentCloudDtsMigrateService(),
			"tencentcloud_dts_migrate_job":                                     dts.ResourceTencentCloudDtsMigrateJob(),
			"tencentcloud_dts_migrate_job_config":                              dts.ResourceTencentCloudDtsMigrateJobConfig(),
			"tencentcloud_dts_migrate_job_start_operation":                     dts.ResourceTencentCloudDtsMigrateJobStartOperation(),
			"tencentcloud_dts_migrate_job_resume_operation":                    dts.ResourceTencentCloudDtsMigrateJobResumeOperation(),
			"tencentcloud_dts_compare_task_stop_operation":                     dts.ResourceTencentCloudDtsCompareTaskStopOperation(),
			"tencentcloud_dts_compare_task":                                    dts.ResourceTencentCloudDtsCompareTask(),
			"tencentcloud_cvm_hpc_cluster":                                     cvm.ResourceTencentCloudCvmHpcCluster(),
			"tencentcloud_vpc_flow_log":                                        fl.ResourceTencentCloudVpcFlowLog(),
			"tencentcloud_vpc_end_point_service":                               pls.ResourceTencentCloudVpcEndPointService(),
			"tencentcloud_vpc_end_point":                                       pls.ResourceTencentCloudVpcEndPoint(),
			"tencentcloud_vpc_end_point_service_white_list":                    pls.ResourceTencentCloudVpcEndPointServiceWhiteList(),
			"tencentcloud_vpc_enable_end_point_connect":                        pls.ResourceTencentCloudVpcEnableEndPointConnect(),
			"tencentcloud_ci_bucket_attachment":                                ci.ResourceTencentCloudCiBucketAttachment(),
			"tencentcloud_tcmq_queue":                                          resourceTencentCloudTcmqQueue(),
			"tencentcloud_tcmq_topic":                                          resourceTencentCloudTcmqTopic(),
			"tencentcloud_tcmq_subscribe":                                      resourceTencentCloudTcmqSubscribe(),
			"tencentcloud_ci_bucket_pic_style":                                 ci.ResourceTencentCloudCiBucketPicStyle(),
			"tencentcloud_ci_hot_link":                                         ci.ResourceTencentCloudCiHotLink(),
			"tencentcloud_ci_media_snapshot_template":                          ci.ResourceTencentCloudCiMediaSnapshotTemplate(),
			"tencentcloud_ci_media_transcode_template":                         ci.ResourceTencentCloudCiMediaTranscodeTemplate(),
			"tencentcloud_ci_media_animation_template":                         ci.ResourceTencentCloudCiMediaAnimationTemplate(),
			"tencentcloud_ci_media_concat_template":                            ci.ResourceTencentCloudCiMediaConcatTemplate(),
			"tencentcloud_ci_media_video_process_template":                     ci.ResourceTencentCloudCiMediaVideoProcessTemplate(),
			"tencentcloud_ci_media_video_montage_template":                     ci.ResourceTencentCloudCiMediaVideoMontageTemplate(),
			"tencentcloud_ci_media_voice_separate_template":                    ci.ResourceTencentCloudCiMediaVoiceSeparateTemplate(),
			"tencentcloud_ci_media_super_resolution_template":                  ci.ResourceTencentCloudCiMediaSuperResolutionTemplate(),
			"tencentcloud_ci_media_pic_process_template":                       ci.ResourceTencentCloudCiMediaPicProcessTemplate(),
			"tencentcloud_ci_media_watermark_template":                         ci.ResourceTencentCloudCiMediaWatermarkTemplate(),
			"tencentcloud_ci_media_tts_template":                               ci.ResourceTencentCloudCiMediaTtsTemplate(),
			"tencentcloud_ci_media_transcode_pro_template":                     ci.ResourceTencentCloudCiMediaTranscodeProTemplate(),
			"tencentcloud_ci_media_smart_cover_template":                       ci.ResourceTencentCloudCiMediaSmartCoverTemplate(),
			"tencentcloud_ci_media_speech_recognition_template":                ci.ResourceTencentCloudCiMediaSpeechRecognitionTemplate(),
			"tencentcloud_ci_guetzli":                                          ci.ResourceTencentCloudCIGuetzli(),
			"tencentcloud_ci_original_image_protection":                        ci.ResourceTencentCloudCIOriginalImageProtection(),
			"tencentcloud_cynosdb_audit_log_file":                              cynosdb.ResourceTencentCloudCynosdbAuditLogFile(),
			"tencentcloud_cynosdb_security_group":                              cynosdb.ResourceTencentCloudCynosdbSecurityGroup(),
			"tencentcloud_dayu_ddos_ip_attachment_v2":                          dayuv2.ResourceTencentCloudDayuDDosIpAttachmentV2(),
			"tencentcloud_antiddos_ddos_black_white_ip":                        dayuv2.ResourceTencentCloudAntiddosDdosBlackWhiteIp(),
			"tencentcloud_antiddos_ddos_geo_ip_block_config":                   dayuv2.ResourceTencentCloudAntiddosDdosGeoIpBlockConfig(),
			"tencentcloud_antiddos_ddos_speed_limit_config":                    dayuv2.ResourceTencentCloudAntiddosDdosSpeedLimitConfig(),
			"tencentcloud_antiddos_default_alarm_threshold":                    dayuv2.ResourceTencentCloudAntiddosDefaultAlarmThreshold(),
			"tencentcloud_antiddos_scheduling_domain_user_name":                dayuv2.ResourceTencentCloudAntiddosSchedulingDomainUserName(),
			"tencentcloud_antiddos_ip_alarm_threshold_config":                  dayuv2.ResourceTencentCloudAntiddosIpAlarmThresholdConfig(),
			"tencentcloud_antiddos_packet_filter_config":                       dayuv2.ResourceTencentCloudAntiddosPacketFilterConfig(),
			"tencentcloud_antiddos_port_acl_config":                            dayuv2.ResourceTencentCloudAntiddosPortAclConfig(),
			"tencentcloud_antiddos_cc_black_white_ip":                          dayuv2.ResourceTencentCloudAntiddosCcBlackWhiteIp(),
			"tencentcloud_antiddos_cc_precision_policy":                        dayuv2.ResourceTencentCloudAntiddosCcPrecisionPolicy(),
			"tencentcloud_tsf_microservice":                                    resourceTencentCloudTsfMicroservice(),
			"tencentcloud_tsf_application_config":                              resourceTencentCloudTsfApplicationConfig(),
			"tencentcloud_cvm_launch_template":                                 cvm.ResourceTencentCloudCvmLaunchTemplate(),
			"tencentcloud_tsf_cluster":                                         resourceTencentCloudTsfCluster(),
			"tencentcloud_tsf_api_group":                                       resourceTencentCloudTsfApiGroup(),
			"tencentcloud_tsf_namespace":                                       resourceTencentCloudTsfNamespace(),
			"tencentcloud_tsf_path_rewrite":                                    resourceTencentCloudTsfPathRewrite(),
			"tencentcloud_tsf_unit_rule":                                       resourceTencentCloudTsfUnitRule(),
			"tencentcloud_tsf_task":                                            resourceTencentCloudTsfTask(),
			"tencentcloud_tsf_config_template":                                 resourceTencentCloudTsfConfigTemplate(),
			"tencentcloud_tsf_api_rate_limit_rule":                             resourceTencentCloudTsfApiRateLimitRule(),
			"tencentcloud_tsf_application_release_config":                      resourceTencentCloudTsfApplicationReleaseConfig(),
			"tencentcloud_tsf_lane":                                            resourceTencentCloudTsfLane(),
			"tencentcloud_tsf_lane_rule":                                       resourceTencentCloudTsfLaneRule(),
			"tencentcloud_tsf_group":                                           resourceTencentCloudTsfGroup(),
			"tencentcloud_tsf_repository":                                      resourceTencentCloudTsfRepository(),
			"tencentcloud_tsf_application":                                     resourceTencentCloudTsfApplication(),
			"tencentcloud_tsf_application_public_config_release":               resourceTencentCloudTsfApplicationPublicConfigRelease(),
			"tencentcloud_tsf_application_public_config":                       resourceTencentCloudTsfApplicationPublicConfig(),
			"tencentcloud_tsf_application_file_config_release":                 resourceTencentCloudTsfApplicationFileConfigRelease(),
			"tencentcloud_tsf_instances_attachment":                            resourceTencentCloudTsfInstancesAttachment(),
			"tencentcloud_tsf_bind_api_group":                                  resourceTencentCloudTsfBindApiGroup(),
			"tencentcloud_tsf_application_file_config":                         resourceTencentCloudTsfApplicationFileConfig(),
			"tencentcloud_tsf_enable_unit_rule":                                resourceTencentCloudTsfEnableUnitRule(),
			"tencentcloud_tsf_deploy_container_group":                          resourceTencentCloudTsfDeployContainerGroup(),
			"tencentcloud_tsf_deploy_vm_group":                                 resourceTencentCloudTsfDeployVmGroup(),
			"tencentcloud_tsf_release_api_group":                               resourceTencentCloudTsfReleaseApiGroup(),
			"tencentcloud_tsf_operate_container_group":                         resourceTencentCloudTsfOperateContainerGroup(),
			"tencentcloud_tsf_operate_group":                                   resourceTencentCloudTsfOperateGroup(),
			"tencentcloud_tsf_unit_namespace":                                  resourceTencentCloudTsfUnitNamespace(),
			"tencentcloud_mps_workflow":                                        mps.ResourceTencentCloudMpsWorkflow(),
			"tencentcloud_mps_enable_workflow_config":                          mps.ResourceTencentCloudMpsEnableWorkflowConfig(),
			"tencentcloud_mps_flow":                                            mps.ResourceTencentCloudMpsFlow(),
			"tencentcloud_mps_input":                                           mps.ResourceTencentCloudMpsInput(),
			"tencentcloud_mps_output":                                          mps.ResourceTencentCloudMpsOutput(),
			"tencentcloud_mps_content_review_template":                         mps.ResourceTencentCloudMpsContentReviewTemplate(),
			"tencentcloud_mps_start_flow_operation":                            mps.ResourceTencentCloudMpsStartFlowOperation(),
			"tencentcloud_mps_event":                                           mps.ResourceTencentCloudMpsEvent(),
			"tencentcloud_mps_execute_function_operation":                      mps.ResourceTencentCloudMpsExecuteFunctionOperation(),
			"tencentcloud_mps_manage_task_operation":                           mps.ResourceTencentCloudMpsManageTaskOperation(),
			"tencentcloud_mps_transcode_template":                              mps.ResourceTencentCloudMpsTranscodeTemplate(),
			"tencentcloud_mps_watermark_template":                              mps.ResourceTencentCloudMpsWatermarkTemplate(),
			"tencentcloud_mps_image_sprite_template":                           mps.ResourceTencentCloudMpsImageSpriteTemplate(),
			"tencentcloud_mps_snapshot_by_timeoffset_template":                 mps.ResourceTencentCloudMpsSnapshotByTimeoffsetTemplate(),
			"tencentcloud_mps_sample_snapshot_template":                        mps.ResourceTencentCloudMpsSampleSnapshotTemplate(),
			"tencentcloud_mps_animated_graphics_template":                      mps.ResourceTencentCloudMpsAnimatedGraphicsTemplate(),
			"tencentcloud_mps_ai_recognition_template":                         mps.ResourceTencentCloudMpsAiRecognitionTemplate(),
			"tencentcloud_mps_ai_analysis_template":                            mps.ResourceTencentCloudMpsAiAnalysisTemplate(),
			"tencentcloud_mps_adaptive_dynamic_streaming_template":             mps.ResourceTencentCloudMpsAdaptiveDynamicStreamingTemplate(),
			"tencentcloud_mps_person_sample":                                   mps.ResourceTencentCloudMpsPersonSample(),
			"tencentcloud_mps_withdraws_watermark_operation":                   mps.ResourceTencentCloudMpsWithdrawsWatermarkOperation(),
			"tencentcloud_mps_process_live_stream_operation":                   mps.ResourceTencentCloudMpsProcessLiveStreamOperation(),
			"tencentcloud_mps_edit_media_operation":                            mps.ResourceTencentCloudMpsEditMediaOperation(),
			"tencentcloud_mps_word_sample":                                     mps.ResourceTencentCloudMpsWordSample(),
			"tencentcloud_mps_schedule":                                        mps.ResourceTencentCloudMpsSchedule(),
			"tencentcloud_mps_enable_schedule_config":                          mps.ResourceTencentCloudMpsEnableScheduleConfig(),
			"tencentcloud_mps_process_media_operation":                         mps.ResourceTencentCloudMpsProcessMediaOperation(),
			"tencentcloud_cbs_disk_backup":                                     cbs.ResourceTencentCloudCbsDiskBackup(),
			"tencentcloud_cbs_snapshot_share_permission":                       cbs.ResourceTencentCloudCbsSnapshotSharePermission(),
			"tencentcloud_cbs_disk_backup_rollback_operation":                  cbs.ResourceTencentCloudCbsDiskBackupRollbackOperation(),
			"tencentcloud_chdfs_access_group":                                  chdfs.ResourceTencentCloudChdfsAccessGroup(),
			"tencentcloud_chdfs_access_rule":                                   chdfs.ResourceTencentCloudChdfsAccessRule(),
			"tencentcloud_chdfs_file_system":                                   chdfs.ResourceTencentCloudChdfsFileSystem(),
			"tencentcloud_chdfs_life_cycle_rule":                               chdfs.ResourceTencentCloudChdfsLifeCycleRule(),
			"tencentcloud_chdfs_mount_point":                                   chdfs.ResourceTencentCloudChdfsMountPoint(),
			"tencentcloud_chdfs_mount_point_attachment":                        chdfs.ResourceTencentCloudChdfsMountPointAttachment(),
			"tencentcloud_mdl_stream_live_input":                               mdl.ResourceTencentCloudMdlStreamLiveInput(),
			"tencentcloud_lighthouse_blueprint":                                lighthouse.ResourceTencentCloudLighthouseBlueprint(),
			"tencentcloud_cvm_launch_template_version":                         cvm.ResourceTencentCloudCvmLaunchTemplateVersion(),
			"tencentcloud_apm_instance":                                        apm.ResourceTencentCloudApmInstance(),
			"tencentcloud_cvm_launch_template_default_version":                 cvm.ResourceTencentCloudCvmLaunchTemplateDefaultVersion(),
			"tencentcloud_lighthouse_firewall_rule":                            lighthouse.ResourceTencentCloudLighthouseFirewallRule(),
			"tencentcloud_cvm_security_group_attachment":                       cvm.ResourceTencentCloudCvmSecurityGroupAttachment(),
			"tencentcloud_cvm_reboot_instance":                                 cvm.ResourceTencentCloudCvmRebootInstance(),
			"tencentcloud_cvm_chc_config":                                      cvm.ResourceTencentCloudCvmChcConfig(),
			"tencentcloud_cvm_sync_image":                                      cvm.ResourceTencentCloudCvmSyncImage(),
			"tencentcloud_cvm_renew_instance":                                  cvm.ResourceTencentCloudCvmRenewInstance(),
			"tencentcloud_cvm_export_images":                                   cvm.ResourceTencentCloudCvmExportImages(),
			"tencentcloud_cvm_image_share_permission":                          cvm.ResourceTencentCloudCvmImageSharePermission(),
			"tencentcloud_cvm_import_image":                                    resourceTencentCloudCvmImportImage(),
			"tencentcloud_cvm_renew_host":                                      resourceTencentCloudCvmRenewHost(),
			"tencentcloud_cvm_program_fpga_image":                              resourceTencentCloudCvmProgramFpgaImage(),
			"tencentcloud_cvm_modify_instance_disk_type":                       resourceTencentCloudCvmModifyInstanceDiskType(),
			"tencentcloud_lighthouse_disk_backup":                              lighthouse.ResourceTencentCloudLighthouseDiskBackup(),
			"tencentcloud_lighthouse_apply_disk_backup":                        lighthouse.ResourceTencentCloudLighthouseApplyDiskBackup(),
			"tencentcloud_lighthouse_disk_attachment":                          lighthouse.ResourceTencentCloudLighthouseDiskAttachment(),
			"tencentcloud_lighthouse_key_pair":                                 lighthouse.ResourceTencentCloudLighthouseKeyPair(),
			"tencentcloud_lighthouse_snapshot":                                 lighthouse.ResourceTencentCloudLighthouseSnapshot(),
			"tencentcloud_lighthouse_apply_instance_snapshot":                  lighthouse.ResourceTencentCloudLighthouseApplyInstanceSnapshot(),
			"tencentcloud_lighthouse_start_instance":                           lighthouse.ResourceTencentCloudLighthouseStartInstance(),
			"tencentcloud_lighthouse_stop_instance":                            lighthouse.ResourceTencentCloudLighthouseStopInstance(),
			"tencentcloud_lighthouse_reboot_instance":                          lighthouse.ResourceTencentCloudLighthouseRebootInstance(),
			"tencentcloud_lighthouse_key_pair_attachment":                      lighthouse.ResourceTencentCloudLighthouseKeyPairAttachment(),
			"tencentcloud_lighthouse_disk":                                     lighthouse.ResourceTencentCloudLighthouseDisk(),
			"tencentcloud_lighthouse_renew_disk":                               lighthouse.ResourceTencentCloudLighthouseRenewDisk(),
			"tencentcloud_lighthouse_renew_instance":                           lighthouse.ResourceTencentCloudLighthouseRenewInstance(),
			"tencentcloud_clickhouse_backup":                                   cdwch.ResourceTencentCloudClickhouseBackup(),
			"tencentcloud_clickhouse_backup_strategy":                          cdwch.ResourceTencentCloudClickhouseBackupStrategy(),
			"tencentcloud_clickhouse_recover_backup_job":                       cdwch.ResourceTencentCloudClickhouseRecoverBackupJob(),
			"tencentcloud_clickhouse_delete_backup_data":                       cdwch.ResourceTencentCloudClickhouseDeleteBackupData(),
			"tencentcloud_clickhouse_account":                                  cdwch.ResourceTencentCloudClickhouseAccount(),
			"tencentcloud_clickhouse_account_permission":                       cdwch.ResourceTencentCloudClickhouseAccountPermission(),
			"tencentcloud_api_gateway_api_doc":                                 apigateway.ResourceTencentCloudAPIGatewayAPIDoc(),
			"tencentcloud_api_gateway_api_app":                                 apigateway.ResourceTencentCloudAPIGatewayAPIApp(),
			"tencentcloud_api_gateway_update_api_app_key":                      apigateway.ResourceTencentCloudApiGatewayUpdateApiAppKey(),
			"tencentcloud_api_gateway_import_open_api":                         apigateway.ResourceTencentCloudApiGatewayImportOpenApi(),
			"tencentcloud_tse_instance":                                        resourceTencentCloudTseInstance(),
			"tencentcloud_tse_cngw_gateway":                                    resourceTencentCloudTseCngwGateway(),
			"tencentcloud_tse_cngw_group":                                      resourceTencentCloudTseCngwGroup(),
			"tencentcloud_tse_cngw_service":                                    resourceTencentCloudTseCngwService(),
			"tencentcloud_tse_cngw_service_rate_limit":                         resourceTencentCloudTseCngwServiceRateLimit(),
			"tencentcloud_tse_cngw_route":                                      resourceTencentCloudTseCngwRoute(),
			"tencentcloud_tse_cngw_route_rate_limit":                           resourceTencentCloudTseCngwRouteRateLimit(),
			"tencentcloud_tse_cngw_canary_rule":                                resourceTencentCloudTseCngwCanaryRule(),
			"tencentcloud_tse_cngw_certificate":                                resourceTencentCloudTseCngwCertificate(),
			"tencentcloud_tse_waf_protection":                                  resourceTencentCloudTseWafProtection(),
			"tencentcloud_tse_waf_domains":                                     resourceTencentCloudTseWafDomains(),
			"tencentcloud_clickhouse_instance":                                 cdwch.ResourceTencentCloudClickhouseInstance(),
			"tencentcloud_cls_kafka_recharge":                                  cls.ResourceTencentCloudClsKafkaRecharge(),
			"tencentcloud_cls_scheduled_sql":                                   cls.ResourceTencentCloudClsScheduledSql(),
			"tencentcloud_eb_event_transform":                                  eb.ResourceTencentCloudEbEventTransform(),
			"tencentcloud_eb_event_bus":                                        eb.ResourceTencentCloudEbEventBus(),
			"tencentcloud_eb_event_rule":                                       eb.ResourceTencentCloudEbEventRule(),
			"tencentcloud_eb_event_target":                                     eb.ResourceTencentCloudEbEventTarget(),
			"tencentcloud_eb_put_events":                                       eb.ResourceTencentCloudEbPutEvents(),
			"tencentcloud_eb_event_connector":                                  eb.ResourceTencentCloudEbEventConnector(),
			"tencentcloud_dlc_user":                                            dlc.ResourceTencentCloudDlcUser(),
			"tencentcloud_dlc_work_group":                                      dlc.ResourceTencentCloudDlcWorkGroup(),
			"tencentcloud_dlc_data_engine":                                     dlc.ResourceTencentCloudDlcDataEngine(),
			"tencentcloud_dlc_suspend_resume_data_engine":                      dlc.ResourceTencentCloudDlcSuspendResumeDataEngine(),
			"tencentcloud_dlc_rollback_data_engine_image_operation":            dlc.ResourceTencentCloudDlcRollbackDataEngineImageOperation(),
			"tencentcloud_dlc_add_users_to_work_group_attachment":              dlc.ResourceTencentCloudDlcAddUsersToWorkGroupAttachment(),
			"tencentcloud_dlc_store_location_config":                           dlc.ResourceTencentCloudDlcStoreLocationConfig(),
			"tencentcloud_dlc_modify_data_engine_description_operation":        dlc.ResourceTencentCloudDlcModifyDataEngineDescriptionOperation(),
			"tencentcloud_dlc_modify_user_typ_operation":                       dlc.ResourceTencentCloudDlcModifyUserTypOperation(),
			"tencentcloud_dlc_renew_data_engine_operation":                     dlc.ResourceTencentCloudDlcRenewDataEngineOperation(),
			"tencentcloud_dlc_restart_data_engine_operation":                   dlc.ResourceTencentCloudDlcRestartDataEngineOperation(),
			"tencentcloud_dlc_attach_user_policy_operation":                    resourceTencentCloudDlcAttachUserPolicyOperation(),
			"tencentcloud_dlc_detach_user_policy_operation":                    resourceTencentCloudDlcDetachUserPolicyOperation(),
			"tencentcloud_dlc_attach_work_group_policy_operation":              resourceTencentCloudDlcAttachWorkGroupPolicyOperation(),
			"tencentcloud_dlc_detach_work_group_policy_operation":              resourceTencentCloudDlcDetachWorkGroupPolicyOperation(),
			"tencentcloud_dlc_switch_data_engine_image_operation":              dlc.ResourceTencentCloudDlcSwitchDataEngineImageOperation(),
			"tencentcloud_dlc_update_data_engine_config_operation":             dlc.ResourceTencentCloudDlcUpdateDataEngineConfigOperation(),
			"tencentcloud_dlc_upgrade_data_engine_image_operation":             dlc.ResourceTencentCloudDlcUpgradeDataEngineImageOperation(),
			"tencentcloud_dlc_bind_work_groups_to_user_attachment":             dlc.ResourceTencentCloudDlcBindWorkGroupsToUserAttachment(),
			"tencentcloud_dlc_update_row_filter_operation":                     dlc.ResourceTencentCloudDlcUpdateRowFilterOperation(),
			"tencentcloud_dlc_user_data_engine_config":                         dlc.ResourceTencentCloudDlcUserDataEngineConfig(),
			"tencentcloud_waf_custom_rule":                                     resourceTencentCloudWafCustomRule(),
			"tencentcloud_waf_custom_white_rule":                               resourceTencentCloudWafCustomWhiteRule(),
			"tencentcloud_waf_clb_domain":                                      resourceTencentCloudWafClbDomain(),
			"tencentcloud_waf_saas_domain":                                     resourceTencentCloudWafSaasDomain(),
			"tencentcloud_waf_clb_instance":                                    resourceTencentCloudWafClbInstance(),
			"tencentcloud_waf_saas_instance":                                   resourceTencentCloudWafSaasInstance(),
			"tencentcloud_waf_anti_fake":                                       resourceTencentCloudWafAntiFake(),
			"tencentcloud_waf_anti_info_leak":                                  resourceTencentCloudWafAntiInfoLeak(),
			"tencentcloud_waf_auto_deny_rules":                                 resourceTencentCloudWafAutoDenyRules(),
			"tencentcloud_waf_module_status":                                   resourceTencentCloudWafModuleStatus(),
			"tencentcloud_waf_protection_mode":                                 resourceTencentCloudWafProtectionMode(),
			"tencentcloud_waf_web_shell":                                       resourceTencentCloudWafWebShell(),
			"tencentcloud_waf_cc":                                              resourceTencentCloudWafCc(),
			"tencentcloud_waf_cc_auto_status":                                  resourceTencentCloudWafCcAutoStatus(),
			"tencentcloud_waf_cc_session":                                      resourceTencentCloudWafCcSession(),
			"tencentcloud_waf_ip_access_control":                               resourceTencentCloudWafIpAccessControl(),
			"tencentcloud_waf_modify_access_period":                            resourceTencentCloudWafModifyAccessPeriod(),
			"tencentcloud_wedata_rule_template":                                resourceTencentCloudWedataRuleTemplate(),
			"tencentcloud_wedata_datasource":                                   resourceTencentCloudWedataDatasource(),
			"tencentcloud_wedata_function":                                     resourceTencentCloudWedataFunction(),
			"tencentcloud_wedata_resource":                                     resourceTencentCloudWedataResource(),
			"tencentcloud_wedata_script":                                       resourceTencentCloudWedataScript(),
			"tencentcloud_wedata_dq_rule":                                      resourceTencentCloudWedataDqRule(),
			"tencentcloud_wedata_baseline":                                     resourceTencentCloudWedataBaseline(),
			"tencentcloud_wedata_integration_offline_task":                     resourceTencentCloudWedataIntegrationOfflineTask(),
			"tencentcloud_wedata_integration_realtime_task":                    resourceTencentCloudWedataIntegrationRealtimeTask(),
			"tencentcloud_wedata_integration_task_node":                        resourceTencentCloudWedataIntegrationTaskNode(),
			"tencentcloud_cfw_address_template":                                cfw.ResourceTencentCloudCfwAddressTemplate(),
			"tencentcloud_cfw_block_ignore":                                    cfw.ResourceTencentCloudCfwBlockIgnore(),
			"tencentcloud_cfw_edge_policy":                                     cfw.ResourceTencentCloudCfwEdgePolicy(),
			"tencentcloud_cfw_nat_instance":                                    cfw.ResourceTencentCloudCfwNatInstance(),
			"tencentcloud_cfw_nat_policy":                                      cfw.ResourceTencentCloudCfwNatPolicy(),
			"tencentcloud_cfw_vpc_instance":                                    cfw.ResourceTencentCloudCfwVpcInstance(),
			"tencentcloud_cfw_vpc_policy":                                      cfw.ResourceTencentCloudCfwVpcPolicy(),
			"tencentcloud_cfw_sync_asset":                                      cfw.ResourceTencentCloudCfwSyncAsset(),
			"tencentcloud_cfw_sync_route":                                      cfw.ResourceTencentCloudCfwSyncRoute(),
			"tencentcloud_cfw_nat_firewall_switch":                             cfw.ResourceTencentCloudCfwNatFirewallSwitch(),
			"tencentcloud_cfw_vpc_firewall_switch":                             cfw.ResourceTencentCloudCfwVpcFirewallSwitch(),
			"tencentcloud_cfw_edge_firewall_switch":                            cfw.ResourceTencentCloudCfwEdgeFirewallSwitch(),
			"tencentcloud_dasb_acl":                                            bh.ResourceTencentCloudDasbAcl(),
			"tencentcloud_dasb_cmd_template":                                   bh.ResourceTencentCloudDasbCmdTemplate(),
			"tencentcloud_dasb_device_group":                                   bh.ResourceTencentCloudDasbDeviceGroup(),
			"tencentcloud_dasb_user":                                           bh.ResourceTencentCloudDasbUser(),
			"tencentcloud_dasb_device_account":                                 bh.ResourceTencentCloudDasbDeviceAccount(),
			"tencentcloud_dasb_device_group_members":                           bh.ResourceTencentCloudDasbDeviceGroupMembers(),
			"tencentcloud_dasb_user_group_members":                             bh.ResourceTencentCloudDasbUserGroupMembers(),
			"tencentcloud_dasb_bind_device_resource":                           bh.ResourceTencentCloudDasbBindDeviceResource(),
			"tencentcloud_dasb_resource":                                       bh.ResourceTencentCloudDasbResource(),
			"tencentcloud_dasb_device":                                         bh.ResourceTencentCloudDasbDevice(),
			"tencentcloud_dasb_user_group":                                     bh.ResourceTencentCloudDasbUserGroup(),
			"tencentcloud_dasb_reset_user":                                     bh.ResourceTencentCloudDasbResetUser(),
			"tencentcloud_dasb_bind_device_account_private_key":                bh.ResourceTencentCloudDasbBindDeviceAccountPrivateKey(),
			"tencentcloud_dasb_bind_device_account_password":                   bh.ResourceTencentCloudDasbBindDeviceAccountPassword(),
			"tencentcloud_ssl_check_certificate_chain_operation":               resourceTencentCloudSslCheckCertificateChainOperation(),
			"tencentcloud_ssl_complete_certificate_operation":                  resourceTencentCloudSslCompleteCertificateOperation(),
			"tencentcloud_ssl_deploy_certificate_instance_operation":           resourceTencentCloudSslDeployCertificateInstanceOperation(),
			"tencentcloud_ssl_deploy_certificate_record_retry_operation":       resourceTencentCloudSslDeployCertificateRecordRetryOperation(),
			"tencentcloud_ssl_deploy_certificate_record_rollback_operation":    resourceTencentCloudSslDeployCertificateRecordRollbackOperation(),
			"tencentcloud_ssl_download_certificate_operation":                  resourceTencentCloudSslDownloadCertificateOperation(),
			"tencentcloud_cwp_license_order":                                   cwp.ResourceTencentCloudCwpLicenseOrder(),
			"tencentcloud_cwp_license_bind_attachment":                         cwp.ResourceTencentCloudCwpLicenseBindAttachment(),
			"tencentcloud_ssl_replace_certificate_operation":                   resourceTencentCloudSslReplaceCertificateOperation(),
			"tencentcloud_ssl_revoke_certificate_operation":                    resourceTencentCloudSslRevokeCertificateOperation(),
			"tencentcloud_ssl_update_certificate_instance_operation":           resourceTencentCloudSslUpdateCertificateInstanceOperation(),
			"tencentcloud_ssl_update_certificate_record_retry_operation":       resourceTencentCloudSslUpdateCertificateRecordRetryOperation(),
			"tencentcloud_ssl_update_certificate_record_rollback_operation":    resourceTencentCloudSslUpdateCertificateRecordRollbackOperation(),
			"tencentcloud_ssl_upload_revoke_letter_operation":                  resourceTencentCloudSslUploadRevokeLetterOperation(),
			"tencentcloud_bi_project":                                          bi.ResourceTencentCloudBiProject(),
			"tencentcloud_bi_user_role":                                        bi.ResourceTencentCloudBiUserRole(),
			"tencentcloud_bi_project_user_role":                                bi.ResourceTencentCloudBiProjectUserRole(),
			"tencentcloud_bi_datasource":                                       bi.ResourceTencentCloudBiDatasource(),
			"tencentcloud_bi_datasource_cloud":                                 bi.ResourceTencentCloudBiDatasourceCloud(),
			"tencentcloud_bi_embed_token_apply":                                bi.ResourceTencentCloudBiEmbedTokenApply(),
			"tencentcloud_bi_embed_interval_apply":                             bi.ResourceTencentCloudBiEmbedIntervalApply(),
			"tencentcloud_cdwpg_instance":                                      cdwpg.ResourceTencentCloudCdwpgInstance(),
			"tencentcloud_clickhouse_keyval_config":                            cdwch.ResourceTencentCloudClickhouseKeyvalConfig(),
			"tencentcloud_clickhouse_xml_config":                               cdwch.ResourceTencentCloudClickhouseXmlConfig(),
			"tencentcloud_clb_target_group_attachments":                        clb.ResourceTencentCloudClbTargetGroupAttachments(),
			"tencentcloud_vpc_peer_connect_manager":                            resourceTencentCloudVpcPeerConnectManager(),
			"tencentcloud_vpc_peer_connect_accept_operation":                   resourceTencentCloudVpcPeerConnectAcceptOperation(),
			"tencentcloud_vpc_peer_connect_reject_operation":                   resourceTencentCloudVpcPeerConnectRejectOperation(),
		},

		ConfigureFunc: providerConfigure,
	}
}

func providerConfigure(d *schema.ResourceData) (interface{}, error) {
	//var getProviderConfig = func(str string, key string) string {
	//	if str == "" {
	//		value, err := getConfigFromProfile(d, key)
	//		if err == nil && value != nil {
	//			str = value.(string)
	//		}
	//	}
	//
	//	return str
	//}

	var getProviderConfig = func(key string) string {
		var str string
		value, err := getConfigFromProfile(d, key)
		if err == nil && value != nil {
			str = value.(string)
		}

		return str
	}

	var (
		secretId      string
		secretKey     string
		securityToken string
		region        string
		protocol      string
		domain        string
	)

	if v, ok := d.GetOk("secret_id"); ok {
		secretId = v.(string)
	} else {
		secretId = getProviderConfig("secretId")
	}

	if v, ok := d.GetOk("secret_key"); ok {
		secretKey = v.(string)
	} else {
		secretKey = getProviderConfig("secretKey")
	}

	if v, ok := d.GetOk("security_token"); ok {
		securityToken = v.(string)
	}

	if v, ok := d.GetOk("region"); ok {
		region = v.(string)
	} else {
		region = getProviderConfig("region")
		if region == "" {
			region = DEFAULT_REGION
		}
	}

	if v, ok := d.GetOk("protocol"); ok {
		protocol = v.(string)
	}

	if v, ok := d.GetOk("domain"); ok {
		domain = v.(string)
	}

	// standard client
	var tcClient TencentCloudClient
	tcClient.apiV3Conn = &connectivity.TencentCloudClient{
		Credential: sdkcommon.NewTokenCredential(
			secretId,
			secretKey,
			securityToken,
		),
		Region:   region,
		Protocol: protocol,
		Domain:   domain,
	}

	var (
		assumeRoleArn             string
		assumeRoleSessionName     string
		assumeRoleSessionDuration int
		assumeRolePolicy          string
	)

	// get assume role from credential
	if providerConfig["role-arn"] != nil {
		assumeRoleArn = providerConfig["role-arn"].(string)
	}

	if providerConfig["role-session-name"] != nil {
		assumeRoleSessionName = providerConfig["role-session-name"].(string)
	}

	if assumeRoleArn != "" && assumeRoleSessionName != "" {
		assumeRoleSessionDuration = 7200
		assumeRolePolicy = ""

		_ = genClientWithSTS(&tcClient, assumeRoleArn, assumeRoleSessionName, assumeRoleSessionDuration, assumeRolePolicy)
	}

	// get assume role from env
	envRoleArn := os.Getenv(PROVIDER_ASSUME_ROLE_ARN)
	envSessionName := os.Getenv(PROVIDER_ASSUME_ROLE_SESSION_NAME)
	if envRoleArn != "" && envSessionName != "" {
		if envSessionDuration := os.Getenv(PROVIDER_ASSUME_ROLE_SESSION_DURATION); envSessionDuration != "" {
			var err error
			assumeRoleSessionDuration, err = strconv.Atoi(envSessionDuration)
			if err != nil {
				return nil, err
			}
		}

		if assumeRoleSessionDuration == 0 {
			assumeRoleSessionDuration = 7200
		}

		_ = genClientWithSTS(&tcClient, envRoleArn, envSessionName, assumeRoleSessionDuration, "")
	}

	// get assume role from tf
	if v, ok := d.GetOk("assume_role"); ok {
		assumeRoleList := v.(*schema.Set).List()
		if len(assumeRoleList) == 1 {
			assumeRole := assumeRoleList[0].(map[string]interface{})
			assumeRoleArn = assumeRole["role_arn"].(string)
			assumeRoleSessionName = assumeRole["session_name"].(string)
			assumeRoleSessionDuration = assumeRole["session_duration"].(int)
			assumeRolePolicy = assumeRole["policy"].(string)

			_ = genClientWithSTS(&tcClient, assumeRoleArn, assumeRoleSessionName, assumeRoleSessionDuration, assumeRolePolicy)
		}
	}

	if secretId == "" || secretKey == "" {
		return nil, fmt.Errorf("Please set your `secret_id` and `secret_key`.")
	}

	return &tcClient, nil
}

func genClientWithSTS(tcClient *TencentCloudClient, assumeRoleArn, assumeRoleSessionName string, assumeRoleSessionDuration int, assumeRolePolicy string) error {
	// applying STS credentials
	request := sts.NewAssumeRoleRequest()
	request.RoleArn = helper.String(assumeRoleArn)
	request.RoleSessionName = helper.String(assumeRoleSessionName)
	request.DurationSeconds = helper.IntUint64(assumeRoleSessionDuration)
	if assumeRolePolicy != "" {
		request.Policy = helper.String(url.QueryEscape(assumeRolePolicy))
	}

	ratelimit.Check(request.GetAction())
	response, err := tcClient.apiV3Conn.UseStsClient().AssumeRole(request)
	if err != nil {
		return err
	}

	// using STS credentials
	tcClient.apiV3Conn.Credential = sdkcommon.NewTokenCredential(
		*response.Response.Credentials.TmpSecretId,
		*response.Response.Credentials.TmpSecretKey,
		*response.Response.Credentials.Token,
	)

	return nil
}

var providerConfig map[string]interface{}

func getConfigFromProfile(d *schema.ResourceData, ProfileKey string) (interface{}, error) {
	if providerConfig == nil {
		var (
			profile              string
			sharedCredentialsDir string
			credentialPath       string
			configurePath        string
		)

		if v, ok := d.GetOk("profile"); ok {
			profile = v.(string)
		} else {
			profile = DEFAULT_PROFILE
		}

		if v, ok := d.GetOk("shared_credentials_dir"); ok {
			sharedCredentialsDir = v.(string)
		}

		tmpSharedCredentialsDir, err := homedir.Expand(sharedCredentialsDir)
		if err != nil {
			return nil, err
		}

		if tmpSharedCredentialsDir == "" {
			credentialPath = fmt.Sprintf("%s/.tccli/%s.credential", os.Getenv("HOME"), profile)
			configurePath = fmt.Sprintf("%s/.tccli/%s.configure", os.Getenv("HOME"), profile)
			if runtime.GOOS == "windows" {
				credentialPath = fmt.Sprintf("%s/.tccli/%s.credential", os.Getenv("USERPROFILE"), profile)
				configurePath = fmt.Sprintf("%s/.tccli/%s.configure", os.Getenv("USERPROFILE"), profile)
			}
		} else {
			credentialPath = fmt.Sprintf("%s/%s.credential", tmpSharedCredentialsDir, profile)
			configurePath = fmt.Sprintf("%s/%s.configure", tmpSharedCredentialsDir, profile)
		}

		providerConfig = make(map[string]interface{})
		_, err = os.Stat(credentialPath)
		if !os.IsNotExist(err) {
			data, err := ioutil.ReadFile(credentialPath)
			if err != nil {
				return nil, err
			}

			config := map[string]interface{}{}
			err = json.Unmarshal(data, &config)
			if err != nil {
				return nil, err
			}

			for k, v := range config {
				providerConfig[k] = strings.TrimSpace(v.(string))
			}
		}

		_, err = os.Stat(configurePath)
		if !os.IsNotExist(err) {
			data, err := ioutil.ReadFile(configurePath)
			if err != nil {
				return nil, err
			}

			config := map[string]interface{}{}
			err = json.Unmarshal(data, &config)
			if err != nil {
				return nil, err
			}

		outerLoop:
			for k, v := range config {
				if k == "_sys_param" {
					tmpMap := v.(map[string]interface{})
					for tmpK, tmpV := range tmpMap {
						if tmpK == "region" {
							providerConfig[tmpK] = strings.TrimSpace(tmpV.(string))
							break outerLoop
						}
					}
				}
			}
		}
	}

	return providerConfig[ProfileKey], nil
}
